{"kind":"Notebook","sha256":"7836459812b2c2159c9d037dd2e005c942410a6499e5451adf547d31967507ee","slug":"l03-01-graphs","location":"/week03/L03.01_graphs.ipynb","dependencies":[],"frontmatter":{"title":"Graphs","content_includes_title":false,"kernelspec":{"name":"julia-1.10","language":"julia","display_name":"Julia 1.10.4"},"authors":[{"nameParsed":{"literal":"Spencer Lyon","given":"Spencer","family":"Lyon"},"name":"Spencer Lyon","orcid":"0009-0001-6461-885X","email":"spencer.lyon@ucf.edu","affiliations":["University of Central Florida","Valorum Data"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"github":"https://github.com/sglyon/ucf-cap6318-book","affiliations":[{"id":"University of Central Florida","name":"University of Central Florida"},{"id":"Valorum Data","name":"Valorum Data"}],"thumbnail":"https://sglyon.github.io/ucf-cap-6318-book/build/967a40bb8f52cb4e2ba5e92214773160.png","thumbnailOptimized":"https://sglyon.github.io/ucf-cap-6318-book/build/967a40bb8f52cb4e2ba5e92214773160.webp","exports":[{"format":"ipynb","filename":"L03.01_graphs.ipynb","url":"https://sglyon.github.io/ucf-cap-6318-book/build/L03.01_graphs-a0c752687ae8a84c9f3103f9cb6bd7b1.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Computational Analysis of Social Complexity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lcHM9b0r2H"}],"key":"DBx0qK3qIp"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fall 2024, Spencer Lyon","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"J7LhqurmcS"}],"key":"RHV9vhauT6"}],"key":"YJIxhCD4Mx"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"uVDx5mrFYo"}],"key":"tB9pZ4fyWz"}],"key":"dLWcucERPX"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Julia setup","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"vtIzPqriS6"}],"key":"FSq6oo9hRV"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Julia basics","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"EnTeTnAwvB"}],"key":"svhktTi9Nm"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Julia types and methods","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"S5BjEfISWo"}],"key":"bXFI8DDQcG"}],"key":"PQtKrNMxuL"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"strong","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Outcomes","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"B7DbRuEizG"}],"key":"BsLpbCncl1"}],"key":"yJhoqvVtv7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":15,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Understand key components of networks/graphs","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"aeoZQXmt5d"}],"key":"A7Ba4GVNWU"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Use the Graphs.jl package for working with graphs in Julia","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"b6jtYhJVSX"}],"key":"iQgjdXL5m1"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Implement the breadth-first search algorithm","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"mFmhUKCWUT"}],"key":"kY3PdjlLTR"}],"key":"pgzp6rsRNV"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"IqY375tBma"}],"key":"QnOoN8RXmq"}],"key":"T2HEV4lQbt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"link","url":"https://www.cs.cornell.edu/home/kleinber/networks-book/","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Easley and Kleinberg","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"EUTrKFEt8f"}],"urlSource":"https://www.cs.cornell.edu/home/kleinber/networks-book/","key":"hn4TTC8rgY"},{"type":"text","value":" chapter 2","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"IKCxlKzfNe"}],"key":"qKIBUgC4Fh"}],"key":"QTFcdI8dhe"}],"visibility":"show","key":"EunHTL3fXa"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jmp1Nqej9g"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"ZhhT7eaAnq"}],"key":"TtX4TqmOAn"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why Study Graphs?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Wxlyj5YlZz"}],"identifier":"why-study-graphs","label":"Why Study Graphs?","html_id":"why-study-graphs","implicit":true,"key":"w81Pubweub"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Economic, cultural, political, and social interactions are influenced by ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Cg0K5F62sS"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"structure","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UJTpeftXK1"}],"key":"Pr27suj4CL"},{"type":"text","value":" of relationships","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zOoQcx0MIP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Transmission of viruses","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SAfHrCFIR5"}],"key":"SGQ9fiN1ov"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"International trade, supply chains, marketplaces","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Z7vucVQUtS"}],"key":"hQaUpmpErz"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Spread of information, diffusion of innovation","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ctKdIFNuKT"}],"key":"VDgPr1uD4Y"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Political persuasion, localized voting patterns","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"drqbQsT13U"}],"key":"YRuAy9x60c"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Human behaviors influenced by network of friends (sports, clothes, music)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IM2nUnhw5U"}],"key":"GTQTOpeFr0"}],"key":"jEeIapSSjT"}],"key":"kyTCVlEHiP"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Behaviors can be effected by social networks","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"cb0psyhCie"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"“Influencers”","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"m1BOLGcuUM"}],"key":"bLAbC7qhZT"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Circles of followers can create echo chambers","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"KUtI6ATCFt"}],"key":"p9a3iuNKE6"}],"key":"e745aWuK8m"}],"key":"LJOBlGxTlE"}],"key":"mWI6u8W0Ps"}],"visibility":"show","key":"Nobq0W2iiI"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Edges and Nodes","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jC5eM0RfXD"}],"identifier":"edges-and-nodes","label":"Edges and Nodes","html_id":"edges-and-nodes","implicit":true,"key":"sES9mPjYRx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Z1NJqALlxp"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PoeNEz2Rsj"}],"key":"ZHPfyiCrhH"},{"type":"text","value":" specifies relationships between a collection of items","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OXn5djeDGi"}],"key":"l5nNN2H1Lh"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Each item is called a ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"FPEReOQSK4"},{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"node","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"masTjwecmE"}],"key":"Uv3QpIy75m"}],"key":"D9Zyt4I2qq"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"A relationship between nodes is represented by an ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Kbpa1T9DRA"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"edge","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kDPsvDAp15"}],"key":"P1OIJGVur6"}],"key":"PRx8pnuZSy"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Visually, graphs might look like this:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"OEGYhNuTtD"}],"key":"pI0xEA8P8t"}],"key":"ltI3bkXs8C"},{"type":"image","url":"https://sglyon.github.io/ucf-cap-6318-book/build/967a40bb8f52cb4e2ba5e92214773160.png","alt":"Graphs","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"UgzgyPEl8q","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/graph_structure.png","urlOptimized":"https://sglyon.github.io/ucf-cap-6318-book/build/967a40bb8f52cb4e2ba5e92214773160.webp"}],"visibility":"show","key":"k7sxdctCQC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here the nodes are ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zSv5KpQxKD"},{"type":"inlineCode","value":"A","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jZSx1OLLPY"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UzEP1IFC7r"},{"type":"inlineCode","value":"B","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LyzzAOhwsX"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SbmvVX8xZr"},{"type":"inlineCode","value":"C","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eIRdnLri1v"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iUIF1bkOLG"},{"type":"inlineCode","value":"D","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XQbjs9OOBn"}],"key":"hD9t1E5syx"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The edges connect nodes ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"PANwGuFHHW"},{"type":"inlineCode","value":"A-B","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AkInQTsnlN"},{"type":"text","value":", ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TFUJ1cpGDs"},{"type":"inlineCode","value":"B-C","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"aOBRPeg4EX"},{"type":"text","value":", ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ah7QE2CQ7j"},{"type":"inlineCode","value":"B-D","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Zt1kXlNGHq"},{"type":"text","value":", ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"TmwtL1i310"},{"type":"inlineCode","value":"C-D","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"XU8YOo6qYG"}],"key":"U0DWa1Iz6f"}],"key":"VtwYkxFgXw"}],"key":"fCvPdU4yLG"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Adjacency Matrix","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Px55gL5Y7c"}],"identifier":"adjacency-matrix","label":"Adjacency Matrix","html_id":"adjacency-matrix","implicit":true,"key":"adZuNDkbrj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"How might we represent the graph above numerically?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bi6N6lKign"}],"key":"IiLWlgzyd0"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"One very common approach is to use a matrix of 0’s and 1’s called an ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ORf1hElUI7"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"adjancency matrix","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RgKuc80SRI"}],"key":"kGerJ8HdWp"}],"key":"OmD3ATWJ7A"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Suppose we have a graph of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kJz2NK6AM6"},{"type":"inlineMath","value":"N","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>","key":"w9dGtIJqKb"},{"type":"text","value":" nodes","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"i1hpUuPKve"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Without loss of generality, we’ll represent them as integers ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"O9RFtULP27"},{"type":"inlineCode","value":"1:N","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"AGcTxfYKkC"}],"key":"VXjCf3ivDe"}],"key":"QXjlX9c3by"}],"key":"h1BRnjd7f1"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Let ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Gs1waC17WQ"},{"type":"inlineMath","value":"A \\in \\{0,1\\}^{N \\times N}","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∈</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><msup><mo stretchy=\"false\">}</mo><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">A \\in \\{0,1\\}^{N \\times N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">}</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span></span></span></span></span>","key":"LbIPWLNA9u"},{"type":"text","value":" be our adjacency matrix","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"X0ywBURcKq"}],"key":"AAqXFoJuun"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Element ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"f1kCvn20tk"},{"type":"inlineMath","value":"A_{ij}","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">A_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"Z1iImgNyPn"},{"type":"text","value":" will be zero unless there is an edge between nodes ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"E92sq2baYW"},{"type":"inlineMath","value":"i","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>","key":"zNpr5EDxub"},{"type":"text","value":" and ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"YTIXxxkGEB"},{"type":"inlineMath","value":"j","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>","key":"p59gQJYKqf"},{"type":"text","value":" (diagonal is left as ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"W4xIDtnXLk"},{"type":"text","value":"0","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"QKJhxxReYL"},{"type":"text","value":")","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"fkLNWMcEUJ"}],"key":"i4dD1lAhDd"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"In our above we had","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"bCT6mk9nYj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Nodes ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"iZQ68Ci1iK"},{"type":"inlineCode","value":"A","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"NXIeR1oA90"},{"type":"text","value":", ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"KEV3zqwOgX"},{"type":"inlineCode","value":"B","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"RAVwj3VvD5"},{"type":"text","value":", ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"fFx0yUJBeJ"},{"type":"inlineCode","value":"C","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"iBS5YlBo3O"},{"type":"text","value":", ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"yipOpCQ6sD"},{"type":"inlineCode","value":"D","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Nc2x81pzlf"},{"type":"text","value":" (or 1, 2, 3, 4 respectively)","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GZykth45me"}],"key":"IUkcIJS8OW"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Edges connecting nodes ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"eomJmXCoIM"},{"type":"inlineCode","value":"1-2","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jttcAblqH2"},{"type":"text","value":", ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"PiaaMKuUW9"},{"type":"inlineCode","value":"2-3","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"K3OkBWZJkf"},{"type":"text","value":", ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"z0YdcaETpR"},{"type":"inlineCode","value":"2-4","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"NbxjVi6irh"},{"type":"text","value":", ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"DlGkVNzJ5i"},{"type":"inlineCode","value":"3-4","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mCQ3NYYmOc"}],"key":"vy6Ibkv3ZP"}],"key":"QEpU3381h9"}],"key":"NC6alPNyoJ"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"The adjacency matrix for this example is\n","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"h96jNcW2Ka"},{"type":"math","value":"A = \\begin{bmatrix}\n0 & 1 & 0 & 0 \\\\\n1 & 0 & 1 & 1 \\\\\n0 & 1 & 0 & 1 \\\\\n0 & 1 & 1 & 0\n\\end{bmatrix}","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">A = \\begin{bmatrix}\n0 &amp; 1 &amp; 0 &amp; 0 \\\\\n1 &amp; 0 &amp; 1 &amp; 1 \\\\\n0 &amp; 1 &amp; 0 &amp; 1 \\\\\n0 &amp; 1 &amp; 1 &amp; 0\n\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8001em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.711em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.858em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span style=\"height:1.216em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='1.216em' style='width:0.6667em' viewBox='0 0 666.67 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style=\"top:-4.7111em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.711em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.858em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span style=\"height:1.216em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='1.216em' style='width:0.6667em' viewBox='0 0 666.67 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style=\"top:-4.7111em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span>","enumerator":"1","key":"P2c3KFwPvR"}],"key":"lr8DuTOHil"}],"key":"D8gVzmDDXD"}],"visibility":"show","key":"gReENWwMB4"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Graphs in Julia","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jkfH9EGcl8"}],"identifier":"graphs-in-julia","label":"Graphs in Julia","html_id":"graphs-in-julia","implicit":true,"key":"G7HGx6TvnX"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In Julia there are a few ways we could represent our example graph above","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KFsgXdgJvU"}],"key":"lUbJTxVbYP"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We could start with the adjacency matrix concept as follows","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"EDWgj7ZAOp"}],"key":"cE0vGPTq2g"}],"key":"nI0WXvrRPJ"}],"visibility":"show","key":"sXvVg8Y1kK"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"A = [\n\t0 1 0 0\n\t1 0 1 1\n\t0 1 0 1\n\t0 1 1 0\n]","key":"qvZgId3qYX"},{"type":"output","id":"mVB4BkpbidOaGGOKHn5m2","data":[{"output_type":"execute_result","execution_count":1,"metadata":{},"data":{"text/plain":{"content":"4×4 Matrix{Int64}:\n 0  1  0  0\n 1  0  1  1\n 0  1  0  1\n 0  1  1  0","content_type":"text/plain"}}}],"key":"vseU0XNHgi"}],"key":"KPZYdNXGMO"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Working with Adjacency Matrices","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Hz6IO1QKis"}],"identifier":"working-with-adjacency-matrices","label":"Working with Adjacency Matrices","html_id":"working-with-adjacency-matrices","implicit":true,"key":"lQ65DaDzLW"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"An adjacency matrix gives us a lot of information about the structure of the graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pYgAA8SEdO"}],"key":"XPgOg3uKg9"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"We could compute all of the following","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"lKTFPLJ4IR"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Total number of nodes: number of rows or columns of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XxIAlR3zxG"},{"type":"inlineMath","value":"A","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>","key":"gD4kL1JzZJ"}],"key":"AKP6N8gvUE"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Total number of edges: ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"x3o23p7FDs"},{"type":"inlineMath","value":"\\sum_{ij} A_{ij}","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\sum_{ij} A_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"vrrGcvwYWz"}],"key":"zGMzyPMJkD"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Node with most edges: ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"spiNyAKrOd"},{"type":"inlineMath","value":"\\text{argmax}_{i} \\sum_{j} A_{i,j}","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>argmax</mtext><mi>i</mi></msub><msub><mo>∑</mo><mi>j</mi></msub><msub><mi>A</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\text{argmax}_{i} \\sum_{j} A_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">argmax</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2175em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"qIJXxdGVvn"}],"key":"zyjIWf3JOd"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Average number of edges per node: ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Y2hC20RO22"},{"type":"inlineMath","value":"N \\cdot \\sum_{i,j} A_{i,j}","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>⋅</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><msub><mi>A</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">N \\cdot \\sum_{i,j} A_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"iJEkVX5DvR"}],"key":"bMy79ToRwi"}],"key":"I09q4Ekg3N"}],"key":"idMVsF7HMv"}],"key":"aMEDYirENL"}],"visibility":"show","key":"v4Sc8uwIQt"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercise: Adjacency Matrix","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qPU36LTLom"}],"identifier":"exercise-adjacency-matrix","label":"Exercise: Adjacency Matrix","html_id":"exercise-adjacency-matrix","implicit":true,"key":"uoHUiY0YlJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the cell below we have defined an adjacency matrix called ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bdYTf954SL"},{"type":"inlineCode","value":"A_ex1","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dGAYfMe5My"}],"key":"MMDKac7myt"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Using ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"fwaCSfwE3T"},{"type":"inlineCode","value":"A_ex1","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"eW75fTOrmU"},{"type":"text","value":" answer the following questions:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HGeoTNXa1W"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"How many nodes are in the graph?","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"H0c2hs9QhY"}],"key":"SAsSgy5npO"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"How many edges?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"fcZLe5Oa1z"}],"key":"JYczboyGG9"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Node with most edges (hint, use the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"YCIEbtwt85"},{"type":"inlineCode","value":"dims","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"szfo1b5wuT"},{"type":"text","value":" argument to ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WA9STNlQIF"},{"type":"inlineCode","value":"sum","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"az1wRkgyOb"},{"type":"text","value":" and then the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LF2Mjuwie7"},{"type":"inlineCode","value":"argmax","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FH2sDgqrHY"},{"type":"text","value":" function)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"wwrnFwg1my"}],"key":"oanSmab6Ac"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Average number of edges per node","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"a6MUUfDMJE"}],"key":"uFVHoJIrLp"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Number of connections for node 7: ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"NsnEYvvAgd"},{"type":"inlineMath","value":"\\sum_j A_{j7}","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mi>j</mi></msub><msub><mi>A</mi><mrow><mi>j</mi><mn>7</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\sum_j A_{j7}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">7</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"Pt7inHhsQH"},{"type":"text","value":"1","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"zJauDBUnXN"}],"key":"SKFhMgsZn0"}],"key":"rKOajgw5Tm"}],"key":"n6dhjy1mAo"}],"key":"b8sGPD5WUw"}],"visibility":"show","key":"oBJbJUaMoT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"A_ex1 = rand(0:1, 30, 30)\n\n# remove diagonal elements\nfor i in 1:30\n    A_ex1[i, i] = 0\nend","key":"o7UHBzT9Vs"},{"type":"output","id":"zzTRor-83FYYh6WIRrcvd","data":[],"key":"HWtbt9s7nf"}],"key":"oLuSQ6wG2a"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# Your code here\n\nex1_total_nodes = missing\nex1_total_edges = missing\nex1_node_most_edges = missing\nex1_average_edges_per_node = missing\nex1_connections_node_7 = missing","key":"HO09PQvAIg"},{"type":"output","id":"ZX87zGtCU2ie-QYiWf-n5","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"missing","content_type":"text/plain"}}}],"key":"YL4IiE6nne"}],"key":"LchGhDVKyL"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Graphs.jl","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SucDdy6wJp"}],"identifier":"graphs-jl","label":"Graphs.jl","html_id":"graphs-jl","implicit":true,"key":"uuhgLWCLh7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"There are many smart graph theory experts in the Juila community","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SPh3InE4h7"}],"key":"qhIISbhEY3"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"They have built a package called Graphs for working with graphs (as well as ancillary pacakges for extra features)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"zeZSF6zdR8"}],"key":"TFi0aAq5QI"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We can build a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"E7ONZPrloi"},{"type":"inlineCode","value":"Graphs.Graph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"FNe9US3DMl"},{"type":"text","value":" object directly from our adjacency matrix","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nJB5oGwixV"}],"key":"XNDmpmU43E"}],"key":"Sv3Qpovpx3"}],"visibility":"show","key":"s5id2ENtjq"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"using Graphs","key":"U4ZNb94XNM"},{"type":"output","id":"DHoUMSjq6SQe2cbFKpPzQ","data":[],"key":"ekodJimFdV"}],"key":"zgGxbiRqbD"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"G1 = Graph(A)","key":"tQDL6Y115p"},{"type":"output","id":"r7GMM0fipE6ZRyoxPiGBn","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"{4, 4} undirected simple Int64 graph","content_type":"text/plain"}}}],"key":"Nm0D5gQE3M"}],"key":"OGvMar8ey4"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"collect(edges(G1))  # collect turns an `iterator` into an array","key":"q8SoBVVx2M"},{"type":"output","id":"QezgXJK5YMfajlh8b0611","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"4-element Vector{Graphs.SimpleGraphs.SimpleEdge{Int64}}:\n Edge 1 => 2\n Edge 2 => 3\n Edge 2 => 4\n Edge 3 => 4","content_type":"text/plain"}}}],"key":"ZzB4SC8U3p"}],"key":"yAZq4DDhYM"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"collect(vertices(G1))  # Graphs refers to nodes as `vertices`","key":"rUPs2LMEtp"},{"type":"output","id":"TqAm7viVHIBj34bEKkkrz","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"4-element Vector{Int64}:\n 1\n 2\n 3\n 4","content_type":"text/plain"}}}],"key":"YDWOS7yvr1"}],"key":"HI0kjCQzlX"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualizing Graphs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KVL8wiZCYq"}],"identifier":"visualizing-graphs","label":"Visualizing Graphs","html_id":"visualizing-graphs","implicit":true,"key":"B8JKAZZG9h"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We can use the GraphPlot package to visualize our graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"y7FQdikNdf"}],"key":"bUjMtgXVAO"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Note that the actual placement of the nodes is randomly generated and then tweaked to clearly show all nodes and edges","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"kuInU76lfz"}],"key":"umckhj7V9y"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The important thing is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ETN1JxfMbF"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"scEaRlZG9T"}],"key":"IiPbp9ToTV"},{"type":"text","value":" the placement of nodes, but rather their ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"buKxtlqz7Z"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"relative structure","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OhSecOmi9D"}],"key":"WJyerEdBvl"}],"key":"hDO5b07YKf"}],"key":"I4afVTFZfu"}],"visibility":"show","key":"eiK453c5e2"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"using GraphPlot  # load GraphPlot package","key":"nhx4UBfXnI"},{"type":"output","id":"gWqbv_j6LObs4pxg17dUp","data":[],"key":"NWzqpNrD8J"}],"key":"bMIFMib1IF"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"gplot(G1)","key":"FUVbGlEFQe"},{"type":"output","id":"aH2Ys_dReHalMAp3rkTDU","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/plain":{"content":"Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([]), List([Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}}(Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}[Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}((-1.2cx, -1.2cy), 2.4cx, 2.4cy)], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(1.5mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.8774944623053611cx, -0.3738589795198046cy), (0.04565416234862883cx, -0.2051395226085242cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.15016237239975969cx, -0.07904738202114044cy), (-0.8581861702010766cx, 0.898755258353902cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.17032120132326387cx, -0.26328845871753975cy), (-0.9065301740227462cx, -0.9170036649496986cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.9357760851104878cx, 0.8750732580190114cy), (-0.9957210821443384cx, -0.8750732580190114cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(1.5mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, -0.39870637846109047cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.07685137534601005cx, -0.18029212366723835cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9314971672548262cx, 1.0cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, -1.0cy), 0.12cx)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0cx, -1.2cy), \"\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))","content_type":"text/plain"},"text/html":{"content_type":"text/html","hash":"23f00e90c3a0c2189b777df43947859a","path":"https://sglyon.github.io/ucf-cap-6318-book/build/23f00e90c3a0c2189b777df43947859a.html"},"image/svg+xml":{"content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     version=\"1.2\"\n     width=\"100mm\" height=\"100mm\" viewBox=\"0 0 100 100\"\n     stroke=\"none\"\n     fill=\"#000000\"\n     stroke-width=\"0.3\"\n     font-size=\"3.88\"\n>\n<defs>\n  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n  </marker>\n</defs>\n<g fill=\"#000000\" fill-opacity=\"0.000\" id=\"img-5d1d4e65-1\">\n  <g transform=\"translate(50,50)\">\n    <path d=\"M-50,-50 L50,-50 50,50 -50,50  z\" class=\"primitive\"/>\n  </g>\n</g>\n<g stroke-width=\"1.5\" stroke=\"#D3D3D3\" id=\"img-5d1d4e65-2\">\n</g>\n<g stroke-width=\"1.5\" stroke=\"#D3D3D3\" id=\"img-5d1d4e65-3\">\n  <g transform=\"translate(69.23,37.94)\">\n    <path fill=\"none\" d=\"M17.33,-3.51 L-17.33,3.51 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(28.99,67.08)\">\n    <path fill=\"none\" d=\"M14.75,-20.37 L-14.75,20.37 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(27.57,25.41)\">\n    <path fill=\"none\" d=\"M15.34,13.62 L-15.34,-13.62 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(9.76,50)\">\n    <path fill=\"none\" d=\"M1.25,36.46 L-1.25,-36.46 \" class=\"primitive\"/>\n  </g>\n</g>\n<g fill=\"#D3D3D3\" id=\"img-5d1d4e65-4\">\n</g>\n<g fill=\"#D3D3D3\" id=\"img-5d1d4e65-5\">\n</g>\n<g font-size=\"4\" fill=\"#000000\" id=\"img-5d1d4e65-6\">\n</g>\n<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-5d1d4e65-7\">\n  <g transform=\"translate(91.67,33.39)\">\n    <circle cx=\"0\" cy=\"0\" r=\"5\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(46.8,42.49)\">\n    <circle cx=\"0\" cy=\"0\" r=\"5\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(11.19,91.67)\">\n    <circle cx=\"0\" cy=\"0\" r=\"5\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(8.33,8.33)\">\n    <circle cx=\"0\" cy=\"0\" r=\"5\" class=\"primitive\"/>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-5d1d4e65-8\">\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-5d1d4e65-9\">\n  <g transform=\"translate(50,0)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\"></text>\n    </g>\n  </g>\n</g>\n</svg>\n","content_type":"image/svg+xml"}}}],"key":"w2DFrZxK2k"}],"key":"a7hUgHyPNH"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Size considerations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CUnXNurTaA"}],"identifier":"size-considerations","label":"Size considerations","html_id":"size-considerations","implicit":true,"key":"T6CNmadzxp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TQARLplIlk"},{"type":"inlineCode","value":"Array{Int64,2}","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Q11buFFAbv"},{"type":"text","value":" to store an adjacency matrix turns out to be a rather costly way to store a graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jtbuK4M2bJ"}],"key":"dyimxLhyiD"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In the original example graph we had 4 nodes and 4 edges","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"yz1p7wz2cG"}],"key":"kCT9vlzGtm"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"To store this we needed to have a 4x4 matrix of 64 bit integers","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MpzHjnCCwI"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"This is only (","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jbvop2U4zT"},{"type":"inlineCode","value":"Int(16 * 64 / 8) == 128","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Lm4b3Cqciy"},{"type":"text","value":") bytes in our exapmle,","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Ez8Iu7122J"}],"key":"mIMrWRbHJZ"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"But consider a graph of websites and links between them -- that graph would have millions of nodes and edges...","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"CR1iRYkys9"}],"key":"FJbzxqDYZO"}],"key":"HTq53BdQnp"}],"key":"x6y9KzjLkl"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"There are a few approaches to reducing this storage cost:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"JVdYpU61ur"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Only store the upper triangle of the matrix","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"mpZu8yCM3W"}],"key":"xwsxnOpdlU"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Use ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"vHSwrBemG4"},{"type":"inlineCode","value":"Array{Bool,2}","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"IMlW69lZae"},{"type":"text","value":" instead of ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"ZGIBQi5TRW"},{"type":"inlineCode","value":"Array{Int64,2}","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"S0dPTunMnK"},{"type":"text","value":" to store adjacency matrix ( each element only ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"QFFaGZBvWP"},{"type":"inlineCode","value":"sizeof(Bool) == 1","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"UZvwQjVBPM"},{"type":"text","value":" bit!)","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"uVRYHtVm2R"}],"key":"jzHoZghXlt"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Use a ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"vmmRpoIdaZ"},{"type":"link","url":"https://docs.julialang.org/en/v1/stdlib/SparseArrays/","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"SparseMatrix","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"fIpgpqizoE"}],"urlSource":"https://docs.julialang.org/en/v1/stdlib/SparseArrays/","key":"MWY6AYy1XA"}],"key":"W5RnlUdW0J"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Store as a ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"jI8VqGhzMf"},{"type":"inlineCode","value":"Vector{Vector{Int}}","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"S36ymlZqJp"}],"key":"REuv6fmH8b"}],"key":"m6IWsWNVWd"}],"key":"tPLjB65kMc"}],"key":"er2dWxrxtd"}],"visibility":"show","key":"zBLeITFUKb"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"# Vector{Vector{Int}}\nA2 = [[2], [1, 3, 4], [2, 4], [2, 3]]","visibility":"show","key":"PTaHPIpJfE"},{"type":"output","id":"qt6lcKCk_chBMnLBdv-QC","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"4-element Vector{Vector{Int64}}:\n [2]\n [1, 3, 4]\n [2, 4]\n [2, 3]","content_type":"text/plain"}}}],"visibility":"show","key":"chbqjUiKkE"}],"visibility":"show","key":"mTeS3OgueZ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"G1.fadjlist","key":"kZBjpnfOZn"},{"type":"output","id":"lA6xxDFdgN7GeZj62b8fH","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"4-element Vector{Vector{Int64}}:\n [2]\n [1, 3, 4]\n [2, 4]\n [2, 3]","content_type":"text/plain"}}}],"key":"A8cnGrKxuc"}],"key":"wUvGyRIwZD"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Graph Theory Concepts","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zS1f2WY7i6"}],"identifier":"graph-theory-concepts","label":"Graph Theory Concepts","html_id":"graph-theory-concepts","implicit":true,"key":"h25IR5ywCr"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s explore some concepts often used in analysis of graphs","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"irBxHG2hSs"}],"key":"BL4XLEvPGx"}],"key":"M6v8pZ08T3"}],"visibility":"show","key":"aC8CRaRP7M"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Paths","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GLmo6h5TXq"}],"identifier":"paths","label":"Paths","html_id":"paths","implicit":true,"key":"GcBqtDk2Ms"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When studying graphs it is often natural to ask about how things travel or flow across the graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EfWzGJKsjk"}],"key":"vBVJXy6VUf"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example, how information spreads amongst a group of friends, how data travels the internet, how diseases are transmitted from one person to another, and how people navigate a metro subway system","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"M3K07uCETg"}],"key":"QQX7ksS6EF"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In each of these cases, the flow of things goes from node to node across edges","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gMr5mp7BCt"}],"key":"YiTkZN1Z9U"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"A flow from one any node to another node is called a ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"qUxtwbnyl7"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"path","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"uQkhnhq4xG"}],"key":"KScZsYXET1"}],"key":"Ir6tqmI5hT"}],"key":"mLfIBtsupG"}],"visibility":"show","key":"Zf4pld6TKz"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Arpanet Example","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W6f2Sr60qh"}],"identifier":"arpanet-example","label":"Arpanet Example","html_id":"arpanet-example","implicit":true,"key":"K9JZ3PTpi1"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Consider the following Graph of the first iteration of the internet","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TfhqPhpHwy"}],"key":"Fqb8qsz3Wn"}],"key":"yFfsQDVuml"},{"type":"image","url":"https://sglyon.github.io/ucf-cap-6318-book/build/54974d171f5875248b5ac6b080a9c18d.png","alt":"arpanet","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QMQBU2R29I","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/arpanet_map.png","urlOptimized":"https://sglyon.github.io/ucf-cap-6318-book/build/54974d171f5875248b5ac6b080a9c18d.webp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"There are many possible paths through this network","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"lBvCJgy0Cv"}],"key":"eXQUUaIRac"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Consider a path from UCSB to MIT: ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"h00wKEPlwm"},{"type":"inlineCode","value":"UCSB-UCLA-RAND-BBN-MIT","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"z1P5PTGqP0"}],"key":"XSBfdovsyl"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Another possible path from UCSB to MIT is ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Lhqj3fyV8b"},{"type":"inlineCode","value":"UCSB-SRI-UTAH-MIT","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ilS4ndwn2i"}],"key":"tyvEEXldye"}],"key":"ov1a85A6R0"}],"visibility":"show","key":"nABF2Une3o"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Graphs.jl Arpanet","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nyoT7weJsW"}],"identifier":"graphs-jl-arpanet","label":"Graphs.jl Arpanet","html_id":"graphs-jl-arpanet","implicit":true,"key":"ZKIguRo9bp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s define the Arpanet using Graphs as it will be helpful throughout this lecture","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sIgNRejxF5"}],"key":"iRsh3Dgrlz"}],"key":"KHVBhP9RcJ"}],"visibility":"show","key":"YY6BG1JD0K"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"nodes = [\n\t\t\"UCSB\" => [\"SRI\", \"UCLA\"],\n\t\t\"SRI\" => [\"UCSB\", \"UCLA\", \"STAN\", \"UTAH\"],\n\t\t\"UCLA\" => [\"SRI\", \"UCSB\", \"STAN\", \"RAND\"],\n\t\t\"STAN\" => [\"SRI\", \"UCLA\"],\n\t\t\"UTAH\" => [\"SRI\", \"SDC\", \"MIT\"],\n\t\t\"SDC\" => [\"UTAH\", \"RAND\"],\n\t\t\"RAND\" => [\"UCLA\", \"SDC\", \"BBN\"],\n\t\t\"MIT\" => [\"UTAH\", \"BBN\", \"LINC\"],\n\t\t\"BBN\" => [\"MIT\", \"RAND\", \"HARV\"],\n\t\t\"LINC\" => [\"MIT\", \"CASE\"],\n\t\t\"CASE\" => [\"LINC\", \"CARN\"],\n\t\t\"CARN\" => [\"CASE\", \"HARV\"],\n\t\t\"HARV\" => [\"CARN\", \"BBN\"]\n\t]\nnode_ints = Dict(zip(first.(nodes), 1:length(nodes)))\narpa = SimpleGraph(length(nodes))\nfor (node, edges) in nodes\n    for e in edges\n        add_edge!(arpa, node_ints[node], node_ints[e])\n    end\nend\n\n# save graph for loading in future\nsavegraph(\"arpanet.lg\", arpa)","key":"TCPJTvZITe"},{"type":"output","id":"NkSTenof7v91u3ZMIkioJ","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"1","content_type":"text/plain"}}}],"key":"PAHBW1p1GL"}],"key":"GmQSv1LTVS"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"arpa","key":"AvLsUnWYqO"},{"type":"output","id":"q9AfVHMNGpOX2nkGl7p7N","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/plain":{"content":"{13, 17} undirected simple Int64 graph","content_type":"text/plain"}}}],"key":"SOE7WE2BVY"}],"key":"p8RLQevwxp"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"gplot(arpa, nodelabel=first.(nodes))","key":"PNmBhLhUlH"},{"type":"output","id":"Os7wKu9ZV8oc0l8xgecas","data":[{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"text/plain":{"content":"Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([]), List([Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}}(Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}[Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}((-1.2cx, -1.2cy), 2.4cx, 2.4cy)], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.8320502943378437mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.7633530523780739cx, 0.9306866996428405cy), (-0.7710978022208389cx, 0.637773945572518cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.7133042299418104cx, 0.9501713382707588cy), (-0.5743017269210973cx, 0.8065201091021628cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.7177942829231602cx, 0.610504577913259cy), (-0.5812217757658799cx, 0.714647514675021cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.8198461807389544cx, 0.619515607404588cy), (-0.9530842974735682cx, 0.7645090029147035cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.7391288301190883cx, 0.5079202380986241cy), (-0.5229517091226152cx, 0.12073642746685317cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.5948942064791374cx, 0.7652392713839719cy), (-0.9311913739973801cx, 0.8070161410928828cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.468037140745933cx, 0.7187695414010824cy), (-0.08675015864710806cx, 0.46968224206029063cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.43946556036597717cx, 0.10856070479590442cy), (-0.3332508024004708cx, 0.21195398004102917cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.43609208822978324cx, 0.0155581011545438cy), (-0.07386971114556753cx, -0.2891812687464843cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.2260340985348051cx, 0.2990192833754441cy), (-0.08623392211898556cx, 0.3930597171998221cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.01443756879007646cx, 0.3774768748515379cy), (0.2959947129106249cx, 0.023185064963691653cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.03225373104523854cx, -0.28919018094031435cy), (0.28606853122581655cx, -0.07572740327496683cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.016259677251026776cx, -0.3924144305246465cy), (0.23120765084466527cx, -0.73216214321537cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3975629924212852cx, -0.06843129362198622cy), (0.7486480939775084cx, -0.29275527478929764cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3306198048877132cx, -0.8211107157259612cy), (0.6356881812950047cx, -0.9696466700719959cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.7506835181949504cx, -0.9548869689631655cy), (0.9473454015459056cx, -0.7863924042366138cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.9705486497015409cx, -0.6785074824102726cy), (0.8365284360800277cx, -0.3928600629275687cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.8320502943378437mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.7615203763863903cx, 1.0cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.7729304782125226cx, 0.5684606452153584cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.5260855804765174cx, 0.7566914473729216cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, 0.815563965103933cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.4891500610291809cx, 0.06019602035011884cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.28356630173726705cx, 0.26031866448681473cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.028701718916523622cx, 0.43176033608845144cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.020811738346169895cx, -0.33381918794205934cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.339134000617225cx, -0.031098396273221862cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.26827906644186195cx, -0.7907573857979571cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.698028919740856cx, -1.0cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, -0.7412793731997793cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8070770857815686cx, -0.33008817213806196cy), 0.06656402354702749cx)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.7615203763863903cx, 1.0cy), \"UCSB\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.7729304782125226cx, 0.5684606452153584cy), \"SRI\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5260855804765174cx, 0.7566914473729216cy), \"UCLA\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, 0.815563965103933cy), \"STAN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.4891500610291809cx, 0.06019602035011884cy), \"UTAH\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.28356630173726705cx, 0.26031866448681473cy), \"SDC\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.028701718916523622cx, 0.43176033608845144cy), \"RAND\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.020811738346169895cx, -0.33381918794205934cy), \"MIT\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.339134000617225cx, -0.031098396273221862cy), \"BBN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.26827906644186195cx, -0.7907573857979571cy), \"LINC\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.698028919740856cx, -1.0cy), \"CASE\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, -0.7412793731997793cy), \"CARN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8070770857815686cx, -0.33008817213806196cy), \"HARV\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0cx, -1.2cy), \"\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))","content_type":"text/plain"},"text/html":{"content_type":"text/html","hash":"32d618e0c27c8ff7cc48d6a93f9454de","path":"https://sglyon.github.io/ucf-cap-6318-book/build/32d618e0c27c8ff7cc48d6a93f9454de.html"},"image/svg+xml":{"content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     version=\"1.2\"\n     width=\"100mm\" height=\"100mm\" viewBox=\"0 0 100 100\"\n     stroke=\"none\"\n     fill=\"#000000\"\n     stroke-width=\"0.3\"\n     font-size=\"3.88\"\n>\n<defs>\n  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n  </marker>\n</defs>\n<g fill=\"#000000\" fill-opacity=\"0.000\" id=\"img-b09f4ff0-1\">\n  <g transform=\"translate(50,50)\">\n    <path d=\"M-50,-50 L50,-50 50,50 -50,50  z\" class=\"primitive\"/>\n  </g>\n</g>\n<g stroke-width=\"0.83\" stroke=\"#D3D3D3\" id=\"img-b09f4ff0-2\">\n</g>\n<g stroke-width=\"0.83\" stroke=\"#D3D3D3\" id=\"img-b09f4ff0-3\">\n  <g transform=\"translate(18.03,82.68)\">\n    <path fill=\"none\" d=\"M0.16,6.1 L-0.16,-6.1 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(23.17,86.6)\">\n    <path fill=\"none\" d=\"M-2.9,2.99 L2.9,-2.99 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(22.94,77.61)\">\n    <path fill=\"none\" d=\"M-2.85,-2.17 L2.85,2.17 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(13.06,78.83)\">\n    <path fill=\"none\" d=\"M2.78,-3.02 L-2.78,3.02 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(23.71,63.1)\">\n    <path fill=\"none\" d=\"M-4.5,8.07 L4.5,-8.07 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(18.21,82.76)\">\n    <path fill=\"none\" d=\"M7.01,-0.87 L-7.01,0.87 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(38.44,74.76)\">\n    <path fill=\"none\" d=\"M-7.94,5.19 L7.94,-5.19 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(33.9,56.68)\">\n    <path fill=\"none\" d=\"M-2.21,-2.15 L2.21,2.15 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(39.38,44.3)\">\n    <path fill=\"none\" d=\"M-7.55,6.35 L7.55,-6.35 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(43.49,64.42)\">\n    <path fill=\"none\" d=\"M-2.91,-1.96 L2.91,1.96 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(56.47,58.35)\">\n    <path fill=\"none\" d=\"M-5.87,7.38 L5.87,-7.38 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(56.63,42.4)\">\n    <path fill=\"none\" d=\"M-5.29,-4.45 L5.29,4.45 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(55.16,26.57)\">\n    <path fill=\"none\" d=\"M-4.48,7.08 L4.48,-7.08 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(73.88,42.48)\">\n    <path fill=\"none\" d=\"M-7.31,4.67 L7.31,-4.67 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(70.13,12.69)\">\n    <path fill=\"none\" d=\"M-6.36,3.09 L6.36,-3.09 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(85.38,13.72)\">\n    <path fill=\"none\" d=\"M-4.1,-3.51 L4.1,3.51 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(87.65,27.68)\">\n    <path fill=\"none\" d=\"M2.79,-5.95 L-2.79,5.95 \" class=\"primitive\"/>\n  </g>\n</g>\n<g fill=\"#D3D3D3\" id=\"img-b09f4ff0-4\">\n</g>\n<g fill=\"#D3D3D3\" id=\"img-b09f4ff0-5\">\n</g>\n<g font-size=\"4\" fill=\"#000000\" id=\"img-b09f4ff0-6\">\n</g>\n<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-b09f4ff0-7\">\n  <g transform=\"translate(18.27,91.67)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(17.79,73.69)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(28.08,81.53)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(8.33,83.98)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(29.62,52.51)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(38.18,60.85)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(48.8,67.99)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(49.13,36.09)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(64.13,48.7)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(61.18,17.05)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(79.08,8.33)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(91.67,19.11)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(83.63,36.25)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-b09f4ff0-8\">\n  <g transform=\"translate(18.27,91.67)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UCSB</text>\n    </g>\n  </g>\n  <g transform=\"translate(17.79,73.69)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">SRI</text>\n    </g>\n  </g>\n  <g transform=\"translate(28.08,81.53)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UCLA</text>\n    </g>\n  </g>\n  <g transform=\"translate(8.33,83.98)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">STAN</text>\n    </g>\n  </g>\n  <g transform=\"translate(29.62,52.51)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UTAH</text>\n    </g>\n  </g>\n  <g transform=\"translate(38.18,60.85)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">SDC</text>\n    </g>\n  </g>\n  <g transform=\"translate(48.8,67.99)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">RAND</text>\n    </g>\n  </g>\n  <g transform=\"translate(49.13,36.09)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">MIT</text>\n    </g>\n  </g>\n  <g transform=\"translate(64.13,48.7)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">BBN</text>\n    </g>\n  </g>\n  <g transform=\"translate(61.18,17.05)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">LINC</text>\n    </g>\n  </g>\n  <g transform=\"translate(79.08,8.33)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">CASE</text>\n    </g>\n  </g>\n  <g transform=\"translate(91.67,19.11)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">CARN</text>\n    </g>\n  </g>\n  <g transform=\"translate(83.63,36.25)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">HARV</text>\n    </g>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-b09f4ff0-9\">\n  <g transform=\"translate(50,0)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\"></text>\n    </g>\n  </g>\n</g>\n</svg>\n","content_type":"image/svg+xml"}}}],"key":"lvs6ilGCKz"}],"key":"MbLQui3MaI"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cycles","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OhWL2w8QB5"}],"identifier":"cycles","label":"Cycles","html_id":"cycles","implicit":true,"key":"nEaFkbkTGe"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"An important concept when analyzing graphs is the concept of a cycle","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NXNk2NwyT0"}],"key":"UlqyHavl4G"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"A cycle is a path that starts and ends at the same node","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qena2lMXHi"}],"key":"Ib3tbzQ5MT"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the ARPA net, an example cycle is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xD5dXQgdKK"},{"type":"inlineCode","value":"LINC-CASE-CARN-HARV-BBN-MIT-LINC","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"j02cvFM5Po"}],"key":"ymCjHUnZ17"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Question... what is the shortest possible cycle in a graph (including all endpoints)?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Uv91pBY6um"}],"key":"fAKw0KvfCT"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Graphs can tell us if a graph is connected","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tBBHYGiGM8"}],"key":"bL3R3FtFla"}],"key":"B2P79QX2Sd"}],"visibility":"show","key":"QDj4MWOTxg"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"is_connected(arpa)","key":"UJIy9MWV6Z"},{"type":"output","id":"kOSKm-ZVlq6pRiSn0ONmZ","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"true","content_type":"text/plain"}}}],"key":"I924O0F4RE"}],"key":"oT6vKxEjg9"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"It is natural to believe that many real-world networks are connected","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vmyHQa0zRi"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Transportation: you can get to any station","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"sJLcKub8Pd"}],"key":"NfhQedjx6t"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Internet: you can visit any website","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"M8T3Ao1dH8"}],"key":"KyqSQKFUtZ"}],"key":"rP46SFbxeQ"}],"key":"f269JxVqfo"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"But it is entirely possible to have a non-connected graph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OA63hwOkr0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Social networks (nodes: people, edges: friendships) of college students who different countries","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Wc32NoEymu"}],"key":"qBcIqxETzO"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Suppliers for a textile company vs a microchip manufacturer","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"oXFntQwTQY"}],"key":"VuNFvsFmUU"}],"key":"rVE0lVpqfb"}],"key":"rzw6341zzq"}],"key":"F1MgFipEsF"}],"visibility":"show","key":"OTCAmTOEFF"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Distance","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bW4KW9IYLl"}],"identifier":"distance","label":"Distance","html_id":"distance","implicit":true,"key":"GfRiI9flir"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We can extend concept of paths between nodes, to include a notion of distance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VAQeOq720q"}],"key":"z7mhmNahla"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"vSoEifsutf"},{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"length","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"S3MVsywtGL"}],"key":"oPErKrghgv"},{"type":"text","value":" of a path is the number of steps it takes from beginning to end","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"t4ITcEFCQ9"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"MIT-BBN-RAND-UCLA","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nt95yDWg1A"},{"type":"text","value":" has length 3 (starting from ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"datCkrM4KU"},{"type":"inlineCode","value":"MIT","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"tPODUjz7Vt"},{"type":"text","value":" take three steps before ending at ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vQD6NCXYh5"},{"type":"inlineCode","value":"UCLA","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rESXoB9VYn"},{"type":"text","value":")","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"L5sunmgDU0"}],"key":"E9sniqdSsn"}],"key":"NwHEvTNFeq"}],"key":"FML3OIjNHM"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LOqRGzEvT3"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"distance","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"t1LjzDik1Y"}],"key":"c04oLMuean"},{"type":"text","value":" between two nodes, is the length of the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"rmT1TVEIjQ"},{"type":"emphasis","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"shortest","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"SClQpAxqo5"}],"key":"DcvFB3b0cI"},{"type":"text","value":" path between those nodes","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"pPJGB9r9fD"}],"key":"Cq0EJCr7Y2"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Graphs can compute distances using the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"l8mc9kR9nL"},{"type":"inlineCode","value":"gdistances","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"M9kyypC0ZA"},{"type":"text","value":" function","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"H61BlKtIjE"}],"key":"OyvKruEdIM"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Below we compute the distance between ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Llg9QPkeAm"},{"type":"inlineCode","value":"UCLA","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"N0VqiaVPpL"},{"type":"text","value":" and all nodes","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"t8RQt8Y2hP"}],"key":"FskV6twvls"}],"key":"OAG3LTWhJ5"}],"visibility":"show","key":"U6z0PHCKBm"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"Dict(zip(first.(nodes), gdistances(arpa, node_ints[\"UCLA\"])))","key":"eI6sDkZCOm"},{"type":"output","id":"OIcwDPCvPMKIUBREuP_bw","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"Dict{String, Int64} with 13 entries:\n  \"HARV\" => 3\n  \"UTAH\" => 2\n  \"UCSB\" => 1\n  \"LINC\" => 4\n  \"RAND\" => 1\n  \"MIT\"  => 3\n  \"CASE\" => 5\n  \"SRI\"  => 1\n  \"STAN\" => 1\n  \"UCLA\" => 0\n  \"SDC\"  => 2\n  \"CARN\" => 4\n  \"BBN\"  => 2","content_type":"text/plain"}}}],"key":"b50cgm4Bmm"}],"key":"aKjRcpFvx8"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Breadth-First Search","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"G5bgdO1v1v"}],"identifier":"breadth-first-search","label":"Breadth-First Search","html_id":"breadth-first-search","implicit":true,"key":"hIwHRCm4qH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If asked, how would you go about computing the distance between the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NZDmTeH81P"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EqLkrp4dnX"},{"type":"text","value":" node and all other nodes?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rOZsi5JxOb"}],"key":"kL4Vfh1vKZ"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"One iterative approach might be:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"z9Ml20F3y1"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Start with ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pTPs6eTWjl"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EzHIUGNrub"},{"type":"text","value":": note it is distance zero to ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hae3etYGLU"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kwpK1iBawe"}],"key":"COwTNxoxC2"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Move on to all nodes directly connected to ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"cTA2HBdj6r"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"WGSnqdDbKs"},{"type":"text","value":": these are distance 1","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"v4jJl3fcoZ"}],"key":"Ee3g4v4tBS"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Then move to all nodes connected to nodes that are distance 1 from ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zpItaReLn8"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sDaAnoCgte"},{"type":"text","value":" (excluding any you may have already found): declare these to be at distance 2 from ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"IZru0KgsBs"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"n6xkiq56l3"}],"key":"m9rNjgWQzU"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Continue traversing edges until you have visited all nodes","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"tF0A5kItzh"}],"key":"QgyIt2Oymm"}],"key":"Wjf2j20fJq"}],"key":"x3xQl8f53G"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"This algorihtm is called ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"e0h8NRTw3W"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"breadth-first search","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"zGjauJJ7K5"}],"key":"DWVWbJ4s7E"}],"key":"vbewc6aJ28"}],"key":"br9b2jS42i"}],"visibility":"show","key":"a8S8mop9LB"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example: Breadth-First Search from MIT","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"g5GEpWyFww"}],"identifier":"example-breadth-first-search-from-mit","label":"Example: Breadth-First Search from MIT","html_id":"example-breadth-first-search-from-mit","implicit":true,"key":"q2RsLYF1bS"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The image below shows how breadth-first search would proceed for the MIT node","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"E1F0LJh9kd"}],"key":"zaQ5qTGaRy"}],"key":"WQybgyjoKG"},{"type":"image","url":"https://sglyon.github.io/ucf-cap-6318-book/build/9cc846425c176f6c0a33d3ffe8b9279b.png","alt":"mit bfs","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CZL3xBSx9d","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/mit_breadth_first.png","urlOptimized":"https://sglyon.github.io/ucf-cap-6318-book/build/9cc846425c176f6c0a33d3ffe8b9279b.webp"}],"visibility":"show","key":"MTxT3d2ibC"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercise (difficult!): BFS","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OwfaVznPnh"}],"identifier":"exercise-difficult-bfs","label":"Exercise (difficult!): BFS","html_id":"exercise-difficult-bfs","implicit":true,"key":"KbLt4y6339"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now it is time for you to try this out!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EJ94QdCced"}],"key":"PWj4r6TGuS"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Our goal is to use breadth-first search to compute the distance betwen a given node and all other nodes","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"poDdFayafg"}],"key":"eYzTD0YvEd"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The return value you end up with should be an ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lyc5fGbyp0"},{"type":"inlineCode","value":"Vector{Vector{Int}}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IpEvQZdADy"},{"type":"text","value":", where element ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"A8DsAOjlzD"},{"type":"inlineCode","value":"i","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qTsmYkpxY8"},{"type":"text","value":" of this vector contains all node labels at distance ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"SJN2nK8u3Z"},{"type":"inlineCode","value":"i","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"M0ZuYjQGWc"},{"type":"text","value":" from the starting node","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DN3wRbqn2Q"}],"key":"U5qjc8bbVH"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Fill in the logic for the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"P2qw2VLLuy"},{"type":"inlineCode","value":"breadth_first_distances","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"u128laoRAz"},{"type":"text","value":" function below","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"TyniBftDAx"}],"key":"YGX6gyhW0G"}],"key":"hXRQbjeT2R"}],"visibility":"show","key":"ApwiHqv9ii"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"function breadth_first_distances(g, start::Int)\n\tout = Vector{Int}[]\n\t# use push!(out, new_nodes) to add to out\n\tdistance = 0\n\n\t# TODO: your code here...\n\n\t# return out\n\tout\nend","key":"BeBvnmNAoa"},{"type":"output","id":"w9QExAucMFXUHMTByrSoi","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"breadth_first_distances (generic function with 1 method)","content_type":"text/plain"}}}],"key":"M0RJ661mmP"}],"key":"LOtbqVs0PD"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# Test code\n\nfunction test_bfd_methods(val, want)\n    if length(val) == 0\n        error(\"Make sure to `push!` on to `out` in your function\")\n    elseif length(val) != maximum(gdistances(arpa, node_ints[\"HARV\"]))\n        error(\"`out` has incorrect number of elements\")\n    elseif length.(val) != length.(want)\n        error(\"Right number of elements, but not right number in each subvector\")\n    elseif all(map(x12 -> all(sort(x12[1]) .== sort(x12[2])), zip(val, want)))\n        println(\"correct!\")\n    end\nend\n\nfunction run_tests()\n    val = breadth_first_distances(arpa, node_ints[\"HARV\"])\n    want = [[9, 12], [7, 8, 11], [3, 6, 5, 10], [1, 2, 4]]\n    test_bfd_methods(val, want)\nend","key":"LPqIJMpOMV"},{"type":"output","id":"FtTlgGTRxPgzhmPJbrt0D","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"run_tests (generic function with 1 method)","content_type":"text/plain"}}}],"key":"f1emA1CSW7"}],"key":"GihyELpHhp"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment the code below and run when you are ready to test your code\n# run_tests()","key":"EvSzNpiyG5"},{"type":"output","id":"C6PlIbbS3JA73FOTnr7cm","data":[],"key":"RWtMiEc5oc"}],"key":"rZpIyzRyfG"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"BFS with Graphs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"noURc6ayah"}],"identifier":"bfs-with-graphs","label":"BFS with Graphs","html_id":"bfs-with-graphs","implicit":true,"key":"UqUwmPopdo"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Graphs library contains routines implementing breadth-first search","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KsQ2vVPBEI"}],"key":"ZdH9lrT5L5"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The main function is called ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JIVLhkxTOj"},{"type":"inlineCode","value":"bfs_tree","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"FedLv2n6YY"}],"key":"LsU8EY9rIu"}],"key":"qtNUpV2cZu"}],"visibility":"show","key":"TBZ0UCqRml"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"bfs_carn = bfs_tree(arpa, node_ints[\"CARN\"])","key":"GxKhwuonvI"},{"type":"output","id":"xhZv6brtlyEb2vdTYt6nm","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"{13, 12} directed simple Int64 graph","content_type":"text/plain"}}}],"key":"pZi5LZeQzX"}],"key":"gaM2wntf82"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice that the printout says we have a graph with 13 nodes, 12 edges and it is a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RXb6eTKKt0"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"directed","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"b7neIONO58"}],"key":"qHF2kMdKjb"},{"type":"text","value":" graph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TKKI7vUoyy"}],"key":"Z1cK7DnLDN"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Thus far, all graphs we have considered have been undirected","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ePDE2rIOpC"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We have only been concerned about if a connection (edge) exists between nodes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pLUnU9rsIP"}],"key":"p4Y1heNO5f"}],"key":"XtijQTkmTI"}],"key":"k1NErapzq8"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"A directed graph extends the notion of connecting nodes with a direction","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pEHyyPEdeK"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We can now say that ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nN0epU6y5p"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"things","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"iFnbgtpl3A"}],"key":"GFlSuUj5Br"},{"type":"text","value":" flow across edges from one node to another -- always in the same direction","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ol5gvnUTnz"}],"key":"Nw576Zm05W"}],"key":"mMXuqEKB2Y"}],"key":"womtuJlblA"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Why would the breadth-first search routine return a directed graph instead of the undirected type we started with?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"LHd2BCKJ7X"}],"key":"Tkyue8aKO0"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Let’s visualize it and see if we can understand why","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"XpXeCBizWx"}],"key":"oCpeQKcnmg"}],"key":"DF5VUWtDAh"}],"key":"iVeXLr7DMa"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"gplot(bfs_carn, nodelabel=first.(nodes))","visibility":"show","key":"G8hgDPMXY3"},{"type":"output","id":"9e8n8HEXWqhHaoPHylAgk","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([]), List([Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}}(Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}[Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}((-1.2cx, -1.2cy), 2.4cx, 2.4cy)], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.8320502943378437mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.6705525333944573cx, -0.7303726578548231cy), (0.8366933402417284cx, -0.7305797349532258cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.6576436866854009cx, -0.770578948775964cy), (0.7599025410375044cx, -0.8435966189118779cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.5689310448195067cx, -0.7916493722588669cy), (0.5353515576648205cx, -0.8554748432080053cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.3163342523296004cx, -0.4205876641171025cy), (0.49065593834542226cx, -0.6100956100075945cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.32959654474555755cx, -0.33515930654255344cy), (0.3577060709021384cx, -0.31909904941853884cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.6618110575896466cx, 0.012101802753371404cy), (-0.8368334002032788cx, 0.01935851158386334cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.02830428428132043cx, -0.06267048508590684cy), (0.1556855108780431cx, -0.25233964641077794cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.1458563574376679cx, -0.00993052831064262cy), (-0.4293762974669899cx, 0.0022309048412429006cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.6969053277661382cx, 0.9223204156990462cy), (0.808088619651308cx, 0.9545424943112056cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.38943759833811015cx, 0.7089832530975039cy), (0.5031328857018019cx, 0.8005720592357348cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2931726680069139cx, 0.6105211098509464cy), (0.19713732489592561cx, 0.48563964363319356cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.0679947942799627cx, 0.2934786267496022cy), (-0.0068898727630191635cx, 0.1347870050815625cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.8320502943378437mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.SimplePolygonPrimitive}(Compose.SimplePolygonPrimitive[Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.8366507110495351cx, -0.7647817227193935cy), (0.9306625293297373cx, -0.7306968576961863cy), (0.8367359694339216cx, -0.6963777471870581cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.7400274164151368cx, -0.8714310796691921cy), (0.836377093450921cx, -0.8982030750206796cy), (0.7797776656598722cx, -0.8157621581545637cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.5050830575814802cx, -0.839550155232728cy), (0.4915988370408858cx, -0.938636863707743cy), (0.5656200577481608cx, -0.8713995311832825cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.46548391948995693cx, -0.6332504637351655cy), (0.5542733761126982cx, -0.6792551634150715cy), (0.5158279572008876cx, -0.5869407562800235cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.3746731669062756cx, -0.3487957737764794cy), (0.4392971505073482cx, -0.27248233627345314cy), (0.3407389748980012cx, -0.28940232506059826cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.8354165467920917cx, 0.05353116601421624cy), (-0.9307219966134993cx, 0.023251284337777324cy), (-0.8382502536144659cx, -0.014814142846489554cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.1311362822666332cx, -0.27615378420726017cy), (0.22111431673765888cx, -0.319788097685656cy), (0.18023473948945304cx, -0.2285255086142957cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.4279105685240076cx, 0.03640149779879654cy), (-0.5232592300272436cx, 0.006257962015127789cy), (-0.43084202640997216cx, -0.03193968811631074cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.8176089726837562cx, 0.921692217865753cy), (0.8983440124080314cx, 0.9806994492930933cy), (0.7985682666188598cx, 0.9873927707566583cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.5245889524925734cx, 0.7739372139710246cy), (0.5763115216372614cx, 0.8595221182536897cy), (0.4816768189110304cx, 0.8272069045004451cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.17002512136769204cx, 0.5064892528441296cy), (0.1398534943844257cx, 0.41114947664771395cy), (0.22424952842415918cx, 0.4647900344222575cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.03782098880998061cx, 0.14938302661122987cy), (-0.04699211232965384cx, 0.0498044621840054cy), (0.024041243283942283cx, 0.12019098355189509cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, -0.7307832795843995cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8928057174121273cx, -0.9384957878300337cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6012150627241946cx, -0.7302862359666099cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.459314819136198cx, -1.0cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, 0.026123662180664864cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.49950112953480175cx, -0.23808505125044244cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.269392565718104cx, -0.3695565915655642cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.592533054203146cx, 0.009229424910483841cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.07658253326176556cx, -0.012901991205998664cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.9649411673780632cx, 1.0cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6303081727961064cx, 0.9030198649921395cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.3354409471792652cx, 0.6654855063590541cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.09758521521207442cx, 0.35618508013960626cy), 0.06656402354702749cx)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, -0.7307832795843995cy), \"UCSB\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8928057174121273cx, -0.9384957878300337cy), \"SRI\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6012150627241946cx, -0.7302862359666099cy), \"UCLA\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.459314819136198cx, -1.0cy), \"STAN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, 0.026123662180664864cy), \"UTAH\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.49950112953480175cx, -0.23808505125044244cy), \"SDC\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.269392565718104cx, -0.3695565915655642cy), \"RAND\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.592533054203146cx, 0.009229424910483841cy), \"MIT\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.07658253326176556cx, -0.012901991205998664cy), \"BBN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.9649411673780632cx, 1.0cy), \"LINC\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6303081727961064cx, 0.9030198649921395cy), \"CASE\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.3354409471792652cx, 0.6654855063590541cy), \"CARN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.09758521521207442cx, 0.35618508013960626cy), \"HARV\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0cx, -1.2cy), \"\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))","content_type":"text/plain"},"text/html":{"content_type":"text/html","hash":"4a112127aa5bb0c1392e8266f7bcb87e","path":"https://sglyon.github.io/ucf-cap-6318-book/build/4a112127aa5bb0c1392e8266f7bcb87e.html"},"image/svg+xml":{"content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     version=\"1.2\"\n     width=\"100mm\" height=\"100mm\" viewBox=\"0 0 100 100\"\n     stroke=\"none\"\n     fill=\"#000000\"\n     stroke-width=\"0.3\"\n     font-size=\"3.88\"\n>\n<defs>\n  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n  </marker>\n</defs>\n<g fill=\"#000000\" fill-opacity=\"0.000\" id=\"img-7f74818f-1\">\n  <g transform=\"translate(50,50)\">\n    <path d=\"M-50,-50 L50,-50 50,50 -50,50  z\" class=\"primitive\"/>\n  </g>\n</g>\n<g stroke-width=\"0.83\" stroke=\"#D3D3D3\" id=\"img-7f74818f-2\">\n</g>\n<g stroke-width=\"0.83\" stroke=\"#D3D3D3\" id=\"img-7f74818f-3\">\n  <g transform=\"translate(81.4,19.56)\">\n    <path fill=\"none\" d=\"M-3.46,0 L3.46,-0 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(79.53,16.37)\">\n    <path fill=\"none\" d=\"M-2.13,1.52 L2.13,-1.52 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(73.01,15.68)\">\n    <path fill=\"none\" d=\"M0.7,1.33 L-0.7,-1.33 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(66.81,28.53)\">\n    <path fill=\"none\" d=\"M-3.63,3.95 L3.63,-3.95 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(64.32,36.37)\">\n    <path fill=\"none\" d=\"M-0.59,-0.33 L0.59,0.33 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(18.78,50.66)\">\n    <path fill=\"none\" d=\"M3.65,-0.15 L-3.65,0.15 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(52.65,43.44)\">\n    <path fill=\"none\" d=\"M-3.83,3.95 L3.83,-3.95 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(38.02,49.84)\">\n    <path fill=\"none\" d=\"M5.91,-0.25 L-5.91,0.25 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(81.35,89.1)\">\n    <path fill=\"none\" d=\"M-2.32,-0.67 L2.32,0.67 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(68.6,81.45)\">\n    <path fill=\"none\" d=\"M-2.37,-1.91 L2.37,1.91 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(60.21,72.84)\">\n    <path fill=\"none\" d=\"M2,2.6 L-2,-2.6 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(51.27,58.92)\">\n    <path fill=\"none\" d=\"M1.56,3.31 L-1.56,-3.31 \" class=\"primitive\"/>\n  </g>\n</g>\n<g fill=\"#D3D3D3\" id=\"img-7f74818f-4\">\n</g>\n<g fill=\"#D3D3D3\" id=\"img-7f74818f-5\">\n  <g transform=\"translate(86.17,19.56)\">\n    <path d=\"M-1.31,-1.42 L2.61,-0 -1.3,1.43  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(82.72,14.09)\">\n    <path d=\"M-1.89,-0.4 L2.12,-1.52 -0.23,1.92  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(71.7,13.2)\">\n    <path d=\"M-0.65,1.82 L-1.22,-2.31 1.87,0.49  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(71.33,23.62)\">\n    <path d=\"M-1.93,-0 L1.77,-1.92 0.17,1.93  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(66.04,37.35)\">\n    <path d=\"M-0.43,-1.88 L2.27,1.29 -1.84,0.59  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(13.83,50.86)\">\n    <path d=\"M1.36,1.37 L-2.61,0.11 1.24,-1.48  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(57.4,38.55)\">\n    <path d=\"M-1.93,-0.06 L1.82,-1.87 0.11,1.93  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(30.81,50.15)\">\n    <path d=\"M1.37,1.37 L-2.61,0.11 1.24,-1.48  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(84.92,90.14)\">\n    <path d=\"M-0.86,-1.73 L2.51,0.73 -1.65,1.01  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(71.98,84.18)\">\n    <path d=\"M-0.12,-1.93 L2.03,1.64 -1.91,0.29  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(57.42,69.2)\">\n    <path d=\"M-0.33,1.9 L-1.59,-2.07 1.93,0.17  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(49.16,54.44)\">\n    <path d=\"M-0.73,1.79 L-1.11,-2.36 1.85,0.57  z\" class=\"primitive\"/>\n  </g>\n</g>\n<g font-size=\"4\" fill=\"#000000\" id=\"img-7f74818f-6\">\n</g>\n<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-7f74818f-7\">\n  <g transform=\"translate(91.67,19.55)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(87.2,10.9)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(75.05,19.57)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(69.14,8.33)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(8.33,51.09)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(70.81,40.08)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(61.22,34.6)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(25.31,50.38)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(46.81,49.46)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(90.21,91.67)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(76.26,87.63)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(63.98,77.73)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(54.07,64.84)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-7f74818f-8\">\n  <g transform=\"translate(91.67,19.55)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UCSB</text>\n    </g>\n  </g>\n  <g transform=\"translate(87.2,10.9)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">SRI</text>\n    </g>\n  </g>\n  <g transform=\"translate(75.05,19.57)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UCLA</text>\n    </g>\n  </g>\n  <g transform=\"translate(69.14,8.33)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">STAN</text>\n    </g>\n  </g>\n  <g transform=\"translate(8.33,51.09)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UTAH</text>\n    </g>\n  </g>\n  <g transform=\"translate(70.81,40.08)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">SDC</text>\n    </g>\n  </g>\n  <g transform=\"translate(61.22,34.6)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">RAND</text>\n    </g>\n  </g>\n  <g transform=\"translate(25.31,50.38)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">MIT</text>\n    </g>\n  </g>\n  <g transform=\"translate(46.81,49.46)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">BBN</text>\n    </g>\n  </g>\n  <g transform=\"translate(90.21,91.67)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">LINC</text>\n    </g>\n  </g>\n  <g transform=\"translate(76.26,87.63)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">CASE</text>\n    </g>\n  </g>\n  <g transform=\"translate(63.98,77.73)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">CARN</text>\n    </g>\n  </g>\n  <g transform=\"translate(54.07,64.84)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">HARV</text>\n    </g>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-7f74818f-9\">\n  <g transform=\"translate(50,0)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\"></text>\n    </g>\n  </g>\n</g>\n</svg>\n","content_type":"image/svg+xml"}}}],"visibility":"show","key":"jpJBN4SaWc"}],"visibility":"show","key":"z4dvQxCWTL"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice that arrows only flow ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ag4WfMqBXQ"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"out","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LT3yySma5x"}],"key":"D3d82CpToV"},{"type":"text","value":" of ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ExnFN8HD1Q"},{"type":"inlineCode","value":"CARN","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hKs9LZLYab"}],"key":"jPkbPLEA3D"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"They also always flow ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ArPt0gmR9B"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"away","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"LyVQSxsL35"}],"key":"NrilYG6MlH"},{"type":"text","value":" from ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZT0IKP6vRY"},{"type":"inlineCode","value":"CARN","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"H8DoFtf8RL"}],"key":"dA8wDdmicb"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The use of directed edges allows Graphs to represent the shortest path from CARN to any other node","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TZFHv3iHh5"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BlHRCpMtzU"},{"type":"inlineCode","value":"STAN","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"TY15RVMSjB"},{"type":"text","value":": ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"DbT0gxJOpG"},{"type":"inlineCode","value":"CARN -> HARV -> BBN -> RAND -> UCLA -> STAN","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Eu12MWwhUD"}],"key":"fubV9kPzbT"}],"key":"Txist555sF"}],"key":"mFCOKuqdnf"}],"key":"VkAEP9QzQS"}],"key":"k8TOM63Gwu"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercise: Explore DiGraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zIxE3R2ImS"}],"identifier":"exercise-explore-digraph","label":"Exercise: Explore DiGraph","html_id":"exercise-explore-digraph","implicit":true,"key":"Dix8l53RRu"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VFw30UTAaO"},{"type":"inlineCode","value":"bfs_carn","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VmEpq4qfnD"},{"type":"text","value":" object has type $(Markdown.Code(string(typeof(bfs_carn))))","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MvOxTEvKo9"}],"key":"zbcWSVdSOi"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Let’s view the names of its properties (properties)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"jYaBlsAsOo"}],"key":"OOQcVPJJn5"}],"key":"EqwWfuv8ZM"}],"visibility":"show","key":"expHxWOCby"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"propertynames(bfs_carn)","key":"WbLE53jmN0"},{"type":"output","id":"9Tz_db4J1fMtZN9fusEGq","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content":"(:ne, :fadjlist, :badjlist)","content_type":"text/plain"}}}],"key":"MvubuGTMcb"}],"key":"rINwCSs88Q"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"bfs_carn.fadjlist","key":"bZlBOzCgDu"},{"type":"output","id":"qKjFUj8Wc3mdVWtFp5rXa","data":[{"output_type":"execute_result","execution_count":23,"metadata":{},"data":{"text/plain":{"content":"13-element Vector{Vector{Int64}}:\n []\n []\n [1, 2, 4]\n []\n []\n []\n [3, 6]\n [5]\n [7, 8]\n []\n [10]\n [11, 13]\n [9]","content_type":"text/plain"}}}],"key":"ZE3iiQ59Qs"}],"key":"HJoT1HDnnC"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kyVkpw67T7"},{"type":"inlineCode","value":"fadjlist","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TOrylqXmIk"},{"type":"text","value":" (forward adjacency list) property is a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KLuzbEyPtu"},{"type":"inlineCode","value":"Vector{Vector{Int64}}","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SN587vVaiE"}],"key":"aqMmc1Dttn"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"fadjlist","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VH7hX74Y0f"},{"type":"text","value":" has one element per node (call index into outer Vector ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mZky8s8DQx"},{"type":"inlineCode","value":"i","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"lo6xnbGZme"},{"type":"text","value":" for node ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RXv7pe6ZXH"},{"type":"inlineCode","value":"i","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AeZXrhtdIF"},{"type":"text","value":")","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Am7MSdDNRL"}],"key":"z9Yn6ma3Xt"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Each element is itself a vector containing node indices for all nodes ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GzpHzlLM4X"},{"type":"inlineCode","value":"j","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kt9vQQ5sTf"},{"type":"text","value":" for which there is an edge flowing from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"L78Zz66Xd9"},{"type":"inlineCode","value":"i","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mPuyy4YFl1"},{"type":"text","value":" to ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"C6QAmImATZ"},{"type":"inlineCode","value":"j","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PDPnfk63oo"}],"key":"DIUibjw9HC"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Below we have set up a new ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OWwx6tKqR4"},{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"method","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"gq5FgKPF4t"}],"key":"YTUySbMiwI"},{"type":"text","value":" (see below) for the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"FC92irL8Oy"},{"type":"inlineCode","value":"breadth_first_distances","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"xcpndH0yBY"},{"type":"text","value":" ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XJcFnlk7wY"},{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"function","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OifRCW2DKw"}],"key":"hFoV2SIWn0"},{"type":"text","value":" that takes a ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"jE08rUOC8z"},{"type":"inlineCode","value":"DiGraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hPEhs9ES74"},{"type":"text","value":" as an argument","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oHpWi5IAOe"}],"key":"N9ubHyxE88"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Your task is to implement the the method so that it has the same return value as the previous method from above","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EQzTlFN7gB"}],"key":"Ekw4dhpqzv"}],"key":"ZyF8ZTJota"}],"key":"Kkn6eNEXFN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"function breadth_first_distances(g::SimpleDiGraph, start::Int)\n\tout = Vector{Int}[]\n\t# use push!(out, new_nodes) to add to out\n\tdistance = 0\n\n\t# TODO: your code here...\n\n\t# return out\n\tout\nend","key":"fueJD1rJgl"},{"type":"output","id":"7ZltUH8qLv6JMMHtl-hJ4","data":[{"output_type":"execute_result","execution_count":24,"metadata":{},"data":{"text/plain":{"content":"breadth_first_distances (generic function with 2 methods)","content_type":"text/plain"}}}],"key":"xF4tWHCXFM"}],"key":"CgJK2rkoA0"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# test code\nfunction test_digraph_ex()\n\tval = breadth_first_distances(\n\t\tbfs_tree(arpa, node_ints[\"HARV\"]),\n\t\tnode_ints[\"HARV\"]\n\t)\n\twant = [[9, 12], [7, 8, 11], [3, 6, 5, 10], [1, 2, 4]]\n\ttest_bfd_methods(val, want)\nend","key":"uHYCODW7F0"},{"type":"output","id":"wrlfGVReyVM7C1UJ0eb5i","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"test_digraph_ex (generic function with 1 method)","content_type":"text/plain"}}}],"key":"U8ZVqaD1FO"}],"key":"l3XTyCDrgu"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment the code below when you are ready to test your code!\n# test_digraph_ex()","key":"AghhXmjvDG"},{"type":"output","id":"yqQSR4SMg44s2mNbO6osF","data":[],"key":"iUm1nN3MjK"}],"key":"ThhKkPol3K"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Components","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VRm45yJM1l"}],"identifier":"components","label":"Components","html_id":"components","implicit":true,"key":"dWcqs3I1oq"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vF9XP5DeCl"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"component","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QXkxPNaePW"}],"key":"E4WmC53ZI3"},{"type":"text","value":" of a graph is a self-contained subset of the nodes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zpAhIt4xs7"}],"key":"LBlwCn2EAk"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"More precisely, a set of nodes is a component if","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oSbdrwNwnn"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Every node in the subset has a path to every other node in the subset","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Jtms8paW2P"}],"key":"xqVPL482JM"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The subset is not part of a larger set with property (1)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HNiat2Pqkj"}],"key":"dS4YsPVyrn"}],"key":"q3rEV4HwmS"}],"key":"GH783pk3Sh"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Example:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"MRbZrGZaBE"}],"key":"PjjLgwmLa7"}],"key":"TfXSl8jj7Q"},{"type":"image","url":"https://sglyon.github.io/ucf-cap-6318-book/build/3c71f9a9623dbfd292f88b8fd72919eb.png","alt":"components","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ElebaWFd7u","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/graph_components.png","urlOptimized":"https://sglyon.github.io/ucf-cap-6318-book/build/3c71f9a9623dbfd292f88b8fd72919eb.webp"}],"visibility":"show","key":"QxjrilSmpe"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cJT0Qpw6RS"}],"identifier":"example","label":"Example","html_id":"example","implicit":true,"key":"JZrbAflrt8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"How many components are in this graph?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MlMdhHyxo2"}],"key":"U67P84BxNw"}],"key":"awXQRxDZUH"},{"type":"image","url":"https://sglyon.github.io/ucf-cap-6318-book/build/67da0f12ba55fc4f00f8d721fc624b55.png","alt":"hs dating","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WltqJq0qbr","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/hs_dating_graph.png","urlOptimized":"https://sglyon.github.io/ucf-cap-6318-book/build/67da0f12ba55fc4f00f8d721fc624b55.webp"}],"visibility":"show","key":"pMm0PSlvNO"}],"key":"ULy7pMrd2N"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Julia Types and Methods","url":"/l02-01-julia-types-methods","group":"Week 02"},"next":{"title":"Strong and Weak Ties","url":"/l03-02-strong-weak-ties","group":"Week 03"}}},"domain":"http://localhost:3000"}