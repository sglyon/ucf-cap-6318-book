{"kind":"Notebook","sha256":"7836459812b2c2159c9d037dd2e005c942410a6499e5451adf547d31967507ee","slug":"l03-01-graphs","location":"/week03/L03.01_graphs.ipynb","dependencies":[],"frontmatter":{"title":"Graphs","content_includes_title":false,"kernelspec":{"name":"julia-1.10","display_name":"Julia 1.10.4","language":"julia"},"authors":[{"nameParsed":{"literal":"Spencer Lyon","given":"Spencer","family":"Lyon"},"name":"Spencer Lyon","orcid":"0009-0001-6461-885X","email":"spencer.lyon@ucf.edu","affiliations":["University of Central Florida","Valorum Data"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"affiliations":[{"id":"University of Central Florida","name":"University of Central Florida"},{"id":"Valorum Data","name":"Valorum Data"}],"thumbnail":"/build/967a40bb8f52cb4e2ba5e92214773160.png","thumbnailOptimized":"/build/967a40bb8f52cb4e2ba5e92214773160.webp","exports":[{"format":"ipynb","filename":"L03.01_graphs.ipynb","url":"/build/L03.01_graphs-a0c752687ae8a84c9f3103f9cb6bd7b1.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Computational Analysis of Social Complexity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zZLl7oForS"}],"key":"lhgYT7yBmc"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fall 2024, Spencer Lyon","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"R8kijtikHp"}],"key":"vJRYGpypHu"}],"key":"JnbimWVkHe"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"aEBDlW9CTs"}],"key":"x7oJKN8VpU"}],"key":"PjFYoSJ4Yy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Julia setup","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"cchZk14Gfp"}],"key":"axcO8KlPh9"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Julia basics","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"yPFhQi1fWC"}],"key":"QHrnNLCt6b"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Julia types and methods","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"srUtxG4bgB"}],"key":"P6LXqhAZ8C"}],"key":"jnd0x4ihKJ"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"strong","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Outcomes","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"oh04fOpYaN"}],"key":"WzPXWq5Pwv"}],"key":"i3gijd0wKv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":15,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Understand key components of networks/graphs","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"cQnMEKY7Hg"}],"key":"jCCOddYE7H"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Use the Graphs.jl package for working with graphs in Julia","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"D0LGd7ZkdX"}],"key":"sOcMrWunuS"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Implement the breadth-first search algorithm","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"ZgUBhLXhh6"}],"key":"k1AgkfXoTP"}],"key":"VMpe3lzvqw"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"ucDGY5urlC"}],"key":"etPPABp1CV"}],"key":"EjBBjU3g3Z"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"link","url":"https://www.cs.cornell.edu/home/kleinber/networks-book/","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Easley and Kleinberg","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"tLlzsAIh3O"}],"urlSource":"https://www.cs.cornell.edu/home/kleinber/networks-book/","key":"K3LhrTUhVZ"},{"type":"text","value":" chapter 2","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"jiW9DRxH3x"}],"key":"ZMBGZxp9Yi"}],"key":"FWnPg01JwH"}],"visibility":"show","key":"sgcQElXKNB"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Introduction","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"t6Gi6eXuK7"}],"identifier":"introduction","label":"Introduction","html_id":"introduction","implicit":true,"key":"F8Hg7aFPG1"}],"key":"YHZgs71GZ5"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why Study Graphs?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Pvz4uie0Ym"}],"identifier":"why-study-graphs","label":"Why Study Graphs?","html_id":"why-study-graphs","implicit":true,"key":"D6uPpmkirx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Economic, cultural, political, and social interactions are influenced by ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"toLVx8K2sk"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"structure","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BkMLPEsoit"}],"key":"kgcOR4UdcW"},{"type":"text","value":" of relationships","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yZYHOoKiwl"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Transmission of viruses","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NUdZxamvyq"}],"key":"EazwlHyGtK"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"International trade, supply chains, marketplaces","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JEkLcc7fRp"}],"key":"zofxPUPgcE"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Spread of information, diffusion of innovation","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"R4fjmcP5Th"}],"key":"PuqtKKvwEZ"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Political persuasion, localized voting patterns","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"a2teB5m0Tk"}],"key":"P7jDsDz8Du"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Human behaviors influenced by network of friends (sports, clothes, music)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"VxQRnUJRAf"}],"key":"TOakSJnfRb"}],"key":"S6mCNIVBUC"}],"key":"YsbqFOwbh3"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Behaviors can be effected by social networks","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lcU7sTGjBi"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"“Influencers”","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"jOWE5iBsgC"}],"key":"ABvysl8dyf"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Circles of followers can create echo chambers","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"YCuUgPfdF5"}],"key":"pVlrW3XcdA"}],"key":"if6cJI5GRO"}],"key":"a9xpcBWYlM"}],"key":"ueGjxu90hz"}],"visibility":"show","key":"CA7CyOtGSY"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Edges and Nodes","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NAgQEsLqk7"}],"identifier":"edges-and-nodes","label":"Edges and Nodes","html_id":"edges-and-nodes","implicit":true,"key":"uuzGEAMkL5"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YxThMsx4XM"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KQcfL1WQ47"}],"key":"f1Gk3gvhhP"},{"type":"text","value":" specifies relationships between a collection of items","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SIOrNxVGpx"}],"key":"K2nI3x1K9m"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Each item is called a ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"bacbnb7vwh"},{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"node","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mvT7k4oBaz"}],"key":"s7MdzuR3O3"}],"key":"YQQNvY8fYP"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"A relationship between nodes is represented by an ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XuiS4Q3q3I"},{"type":"strong","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"edge","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hrOpXC5NkR"}],"key":"KP9EeeSwSb"}],"key":"KIlTNaORgK"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Visually, graphs might look like this:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"XqSpHRnP11"}],"key":"WL2Xg7bjfo"}],"key":"nHDIbyRflS"},{"type":"image","url":"/build/967a40bb8f52cb4e2ba5e92214773160.png","alt":"Graphs","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"CO7bORJFeu","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/graph_structure.png","urlOptimized":"/build/967a40bb8f52cb4e2ba5e92214773160.webp"}],"visibility":"show","key":"hfqLp3lhRZ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Here the nodes are ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ea01bkoi8c"},{"type":"inlineCode","value":"A","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VXTpXUZLDJ"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dlxhIoPkOG"},{"type":"inlineCode","value":"B","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xsqNO0XHgl"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ASWejy60VA"},{"type":"inlineCode","value":"C","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UIwQfJmH7A"},{"type":"text","value":", ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uNFIlualvR"},{"type":"inlineCode","value":"D","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yvXTJc7iLw"}],"key":"nr0kOMv37b"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The edges connect nodes ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"I4cRsG88eA"},{"type":"inlineCode","value":"A-B","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fY9WfbUB8L"},{"type":"text","value":", ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"J3HwJRD6TI"},{"type":"inlineCode","value":"B-C","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"EYcZPE9Xgi"},{"type":"text","value":", ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"zA1mXFl8Uc"},{"type":"inlineCode","value":"B-D","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BMcYLYRWQe"},{"type":"text","value":", ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Ij3rTfcJwt"},{"type":"inlineCode","value":"C-D","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"uU9R64SC25"}],"key":"aQLo3ogGR7"}],"key":"os6BrrEwNH"}],"key":"a87QkNvzur"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Adjacency Matrix","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RQoOma8IgA"}],"identifier":"adjacency-matrix","label":"Adjacency Matrix","html_id":"adjacency-matrix","implicit":true,"key":"KnBJ0pjXZq"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"How might we represent the graph above numerically?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zyovZZ3dF1"}],"key":"HPvaCSdEZ5"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"One very common approach is to use a matrix of 0’s and 1’s called an ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BypxBMK05x"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"adjancency matrix","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"aJHn20SkDr"}],"key":"SQ8OrFHDY0"}],"key":"BWHNyqiBG8"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Suppose we have a graph of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ZGTy05arkx"},{"type":"inlineMath","value":"N","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi></mrow><annotation encoding=\"application/x-tex\">N</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span></span></span></span>","key":"rrGXfqO3wl"},{"type":"text","value":" nodes","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fFmv3QtOrp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Without loss of generality, we’ll represent them as integers ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ilOuJspva9"},{"type":"inlineCode","value":"1:N","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"uvVIRCAZig"}],"key":"lG12JLT5VV"}],"key":"HYSc6ZyOzI"}],"key":"EfqTKu8gjh"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Let ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"iELr7PqU74"},{"type":"inlineMath","value":"A \\in \\{0,1\\}^{N \\times N}","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi><mo>∈</mo><mo stretchy=\"false\">{</mo><mn>0</mn><mo separator=\"true\">,</mo><mn>1</mn><msup><mo stretchy=\"false\">}</mo><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow></msup></mrow><annotation encoding=\"application/x-tex\">A \\in \\{0,1\\}^{N \\times N}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7224em;vertical-align:-0.0391em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">∈</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.0913em;vertical-align:-0.25em;\"></span><span class=\"mopen\">{</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">}</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8413em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span><span class=\"mbin mtight\">×</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.10903em;\">N</span></span></span></span></span></span></span></span></span></span></span></span>","key":"w58muqf2Fb"},{"type":"text","value":" be our adjacency matrix","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"r31EmUx442"}],"key":"wAzC5fZDll"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Element ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"VdQnE09g0w"},{"type":"inlineMath","value":"A_{ij}","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">A_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9694em;vertical-align:-0.2861em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"PQIWAvmaUV"},{"type":"text","value":" will be zero unless there is an edge between nodes ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"KcSYA8xU7T"},{"type":"inlineMath","value":"i","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6595em;\"></span><span class=\"mord mathnormal\">i</span></span></span></span>","key":"MLQGQmYGdk"},{"type":"text","value":" and ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"f90xtPE8pe"},{"type":"inlineMath","value":"j","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>j</mi></mrow><annotation encoding=\"application/x-tex\">j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.854em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.05724em;\">j</span></span></span></span>","key":"vy4iezvuD8"},{"type":"text","value":" (diagonal is left as ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"m9oMeonkwm"},{"type":"text","value":"0","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"rHNLqsetFK"},{"type":"text","value":")","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"TPODQpbDE6"}],"key":"iZexDZLdYZ"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"In our above we had","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"FsdiIQYkta"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Nodes ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"PWFTXxAqPT"},{"type":"inlineCode","value":"A","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"XSKSuJBsWI"},{"type":"text","value":", ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Sapya0pph5"},{"type":"inlineCode","value":"B","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"FYh2xLv4n3"},{"type":"text","value":", ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"MPp4mks6zK"},{"type":"inlineCode","value":"C","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"GACpiVSfu2"},{"type":"text","value":", ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"KuPsfzEBUY"},{"type":"inlineCode","value":"D","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"eTjwb2xgyb"},{"type":"text","value":" (or 1, 2, 3, 4 respectively)","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"iWF73UW9iZ"}],"key":"E6knJGAa1o"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Edges connecting nodes ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Q8RviSo6D2"},{"type":"inlineCode","value":"1-2","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"VSHbQrlA20"},{"type":"text","value":", ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"dF8G8oioee"},{"type":"inlineCode","value":"2-3","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"KFQP2KVNgV"},{"type":"text","value":", ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"BownS9u8xY"},{"type":"inlineCode","value":"2-4","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"rhsdod5Ttb"},{"type":"text","value":", ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"YivCLYUtjI"},{"type":"inlineCode","value":"3-4","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"T7xHjOwgTa"}],"key":"z5vFhB76qz"}],"key":"kHBemtHBMi"}],"key":"NxpFnHPfrn"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"The adjacency matrix for this example is\n","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"NzyyHZU96r"},{"type":"math","value":"A = \\begin{bmatrix}\n0 & 1 & 0 & 0 \\\\\n1 & 0 & 1 & 1 \\\\\n0 & 1 & 0 & 1 \\\\\n0 & 1 & 1 & 0\n\\end{bmatrix}","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"html":"<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence=\"true\">[</mo><mtable rowspacing=\"0.16em\" columnalign=\"center center center center\" columnspacing=\"1em\"><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel=\"0\" displaystyle=\"false\"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence=\"true\">]</mo></mrow></mrow><annotation encoding=\"application/x-tex\">A = \\begin{bmatrix}\n0 &amp; 1 &amp; 0 &amp; 0 \\\\\n1 &amp; 0 &amp; 1 &amp; 1 \\\\\n0 &amp; 1 &amp; 0 &amp; 1 \\\\\n0 &amp; 1 &amp; 1 &amp; 0\n\\end{bmatrix}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:4.8001em;vertical-align:-2.15em;\"></span><span class=\"minner\"><span class=\"mopen\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.711em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎣</span></span></span><span style=\"top:-2.858em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span style=\"height:1.216em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='1.216em' style='width:0.6667em' viewBox='0 0 666.67 1216' preserveAspectRatio='xMinYMin'><path d='M319 0 H403 V1216 H319z M319 0 H403 V1216 H319z'/></svg></span></span><span style=\"top:-4.7111em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎡</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span><span class=\"mord\"><span class=\"mtable\"><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"arraycolsep\" style=\"width:0.5em;\"></span><span class=\"col-align-c\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-4.81em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span><span style=\"top:-3.61em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-2.41em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span><span style=\"top:-1.21em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">0</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"delimsizing mult\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.65em;\"><span style=\"top:-1.711em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎦</span></span></span><span style=\"top:-2.858em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span style=\"height:1.216em;width:0.6667em;\"><svg xmlns=\"http://www.w3.org/2000/svg\" width='0.6667em' height='1.216em' style='width:0.6667em' viewBox='0 0 666.67 1216' preserveAspectRatio='xMinYMin'><path d='M263 0 H347 V1216 H263z M263 0 H347 V1216 H263z'/></svg></span></span><span style=\"top:-4.7111em;\"><span class=\"pstrut\" style=\"height:3.216em;\"></span><span class=\"delimsizinginner delim-size4\"><span>⎤</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:2.15em;\"><span></span></span></span></span></span></span></span></span></span></span></span>","enumerator":"1","key":"wEpXhrxOzn"}],"key":"gc7cDqnV9I"}],"key":"bW1sgPOa1g"}],"visibility":"show","key":"WF3HDFoVVm"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Graphs in Julia","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KxudRMttul"}],"identifier":"graphs-in-julia","label":"Graphs in Julia","html_id":"graphs-in-julia","implicit":true,"key":"sLpOIa5qr8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In Julia there are a few ways we could represent our example graph above","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Uh50N23PTd"}],"key":"YF3B5S7Lb3"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We could start with the adjacency matrix concept as follows","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"CxNmPNct6X"}],"key":"s37zTCcgpR"}],"key":"PbwirwSeRv"}],"visibility":"show","key":"iKgPns47R5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"A = [\n\t0 1 0 0\n\t1 0 1 1\n\t0 1 0 1\n\t0 1 1 0\n]","key":"EOE8rMTqC3"},{"type":"output","id":"USkTSVxDMexCngxQlziBZ","data":[{"output_type":"execute_result","execution_count":1,"metadata":{},"data":{"text/plain":{"content":"4×4 Matrix{Int64}:\n 0  1  0  0\n 1  0  1  1\n 0  1  0  1\n 0  1  1  0","content_type":"text/plain"}}}],"key":"DQft1GmYpQ"}],"key":"jaJ9qdbVKF"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Working with Adjacency Matrices","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XAYDFfQjr3"}],"identifier":"working-with-adjacency-matrices","label":"Working with Adjacency Matrices","html_id":"working-with-adjacency-matrices","implicit":true,"key":"muXTS0jkMu"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"An adjacency matrix gives us a lot of information about the structure of the graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NZPNCSVZt4"}],"key":"pLUyFlKhjs"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"We could compute all of the following","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uMV7rcPQLS"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Total number of nodes: number of rows or columns of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JeNsbgLG35"},{"type":"inlineMath","value":"A","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>A</mi></mrow><annotation encoding=\"application/x-tex\">A</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\">A</span></span></span></span>","key":"hHUbKbqbTy"}],"key":"q7tv1ieUix"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Total number of edges: ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"qq5s6n11wN"},{"type":"inlineMath","value":"\\sum_{ij} A_{ij}","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mrow><mi>i</mi><mi>j</mi></mrow></msub><msub><mi>A</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\sum_{ij} A_{ij}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">ij</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"UIkkibdtKJ"}],"key":"Cn5BW6He8Y"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Node with most edges: ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dxhsMjLOSt"},{"type":"inlineMath","value":"\\text{argmax}_{i} \\sum_{j} A_{i,j}","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mtext>argmax</mtext><mi>i</mi></msub><msub><mo>∑</mo><mi>j</mi></msub><msub><mi>A</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\text{argmax}_{i} \\sum_{j} A_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mord\"><span class=\"mord text\"><span class=\"mord\">argmax</span></span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2175em;\"><span style=\"top:-2.4559em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2441em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"ygtOl7fAQO"}],"key":"NFtV3lHeJX"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Average number of edges per node: ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"neYtPcmmlX"},{"type":"inlineMath","value":"N \\cdot \\sum_{i,j} A_{i,j}","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>N</mi><mo>⋅</mo><msub><mo>∑</mo><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub><msub><mi>A</mi><mrow><mi>i</mi><mo separator=\"true\">,</mo><mi>j</mi></mrow></msub></mrow><annotation encoding=\"application/x-tex\">N \\cdot \\sum_{i,j} A_{i,j}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6833em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.10903em;\">N</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">i</span><span class=\"mpunct mtight\">,</span><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"VmKtQ88zQl"}],"key":"hkmjZY21fJ"}],"key":"Vbp3VAQeq8"}],"key":"ffzgISYj6C"}],"key":"j9Q4GccnJl"}],"visibility":"show","key":"sxGaj3Clbk"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercise: Adjacency Matrix","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yjuozsBIbX"}],"identifier":"exercise-adjacency-matrix","label":"Exercise: Adjacency Matrix","html_id":"exercise-adjacency-matrix","implicit":true,"key":"aCSWscVDLH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the cell below we have defined an adjacency matrix called ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vtjlukmEjt"},{"type":"inlineCode","value":"A_ex1","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"o4nLtHcaA2"}],"key":"PhPm2U26rx"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Using ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"D3RHLlaBVh"},{"type":"inlineCode","value":"A_ex1","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"m83keDKYhK"},{"type":"text","value":" answer the following questions:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GaTPeIYvBc"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"How many nodes are in the graph?","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"N7s8SAlauF"}],"key":"ipDV30QdO1"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"How many edges?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"fvYgXkdD10"}],"key":"J65AxPbcFY"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Node with most edges (hint, use the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Cnrm2TsBPo"},{"type":"inlineCode","value":"dims","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"A6YHmvGngO"},{"type":"text","value":" argument to ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Tvbz0RRq1w"},{"type":"inlineCode","value":"sum","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"c8MRdfKY00"},{"type":"text","value":" and then the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"V1wbwftlzj"},{"type":"inlineCode","value":"argmax","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rRQ4grevR9"},{"type":"text","value":" function)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WqpCr5x3Ql"}],"key":"Fi6ImdThr6"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Average number of edges per node","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gkxlH8YPRJ"}],"key":"oUEVOotspn"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Number of connections for node 7: ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"d5RYlP7RIA"},{"type":"inlineMath","value":"\\sum_j A_{j7}","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"html":"<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msub><mo>∑</mo><mi>j</mi></msub><msub><mi>A</mi><mrow><mi>j</mi><mn>7</mn></mrow></msub></mrow><annotation encoding=\"application/x-tex\">\\sum_j A_{j7}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.1858em;vertical-align:-0.4358em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:0em;\">∑</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.162em;\"><span style=\"top:-2.4003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.4358em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">A</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.3117em;\"><span style=\"top:-2.55em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord mtight\">7</span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.2861em;\"><span></span></span></span></span></span></span></span></span></span>","key":"POi9HCrRp5"},{"type":"text","value":"1","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"e5Ihiu2JEb"}],"key":"wJgG7ORuRt"}],"key":"Xc6pqQJrYP"}],"key":"CztQtkN2LM"}],"key":"EXlvejASKs"}],"visibility":"show","key":"THVTYpL6j4"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"A_ex1 = rand(0:1, 30, 30)\n\n# remove diagonal elements\nfor i in 1:30\n    A_ex1[i, i] = 0\nend","key":"VU6n4tXi5t"},{"type":"output","id":"hfmIe4oC9lOlDSlqAGPki","data":[],"key":"AC5UcWZ10S"}],"key":"ZYJPASfBdh"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# Your code here\n\nex1_total_nodes = missing\nex1_total_edges = missing\nex1_node_most_edges = missing\nex1_average_edges_per_node = missing\nex1_connections_node_7 = missing","key":"KYhBlh5drv"},{"type":"output","id":"B8PFa5-waz6YHFdvAt66T","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"missing","content_type":"text/plain"}}}],"key":"MQSatN8nEL"}],"key":"oT3wMhVDKY"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Graphs.jl","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Tn4EMWq6Cp"}],"identifier":"graphs-jl","label":"Graphs.jl","html_id":"graphs-jl","implicit":true,"key":"qD1PoMKyuI"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"There are many smart graph theory experts in the Juila community","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ThlX1kF9iU"}],"key":"oHAnV9VGps"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"They have built a package called Graphs for working with graphs (as well as ancillary pacakges for extra features)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"enDg9OcV2l"}],"key":"Po7JC0zHWL"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We can build a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"d3hgKAVafF"},{"type":"inlineCode","value":"Graphs.Graph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kD7trVLKbU"},{"type":"text","value":" object directly from our adjacency matrix","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"peJeAnsUJp"}],"key":"HR8kPW1Gus"}],"key":"AOJ0KCDavD"}],"visibility":"show","key":"bw3serzaYH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"using Graphs","key":"ucdFY5Sc4u"},{"type":"output","id":"JYAZ20ei8dflET2Qsy_L0","data":[],"key":"bZWdrd4Ynx"}],"key":"VM8Z6eSwYv"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"G1 = Graph(A)","key":"Ey3gCJR2sI"},{"type":"output","id":"fVaLBSFwJJ8t2Ix2DeX_1","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"{4, 4} undirected simple Int64 graph","content_type":"text/plain"}}}],"key":"AnuAty2Yjy"}],"key":"C6aNzCnjvi"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"collect(edges(G1))  # collect turns an `iterator` into an array","key":"QyNkwVKuhi"},{"type":"output","id":"Via-oBdwliYYRN5Y7c0Xl","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"4-element Vector{Graphs.SimpleGraphs.SimpleEdge{Int64}}:\n Edge 1 => 2\n Edge 2 => 3\n Edge 2 => 4\n Edge 3 => 4","content_type":"text/plain"}}}],"key":"yQntov50CH"}],"key":"QFPgbbFBpS"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"collect(vertices(G1))  # Graphs refers to nodes as `vertices`","key":"NvQcmSgVjE"},{"type":"output","id":"HjKdkEJzYWHpkSggIuPSP","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"4-element Vector{Int64}:\n 1\n 2\n 3\n 4","content_type":"text/plain"}}}],"key":"yESklhSev8"}],"key":"AXakhByzWb"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualizing Graphs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZPbDsS58cy"}],"identifier":"visualizing-graphs","label":"Visualizing Graphs","html_id":"visualizing-graphs","implicit":true,"key":"LvguYD4z6A"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We can use the GraphPlot package to visualize our graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"f1mXqIMxKw"}],"key":"eC2AbuoRyQ"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Note that the actual placement of the nodes is randomly generated and then tweaked to clearly show all nodes and edges","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ge7MwtARIp"}],"key":"QAxSEfNXU4"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The important thing is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WWQLpXGNEB"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gKiJFvdT9J"}],"key":"Wg1asI6DQR"},{"type":"text","value":" the placement of nodes, but rather their ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YwSodkV6aw"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"relative structure","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"r2X2Yef3bP"}],"key":"W7VqbuzcCq"}],"key":"rrWrWEOFtw"}],"key":"fWoVUeU3dH"}],"visibility":"show","key":"a5DKzDDclu"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"using GraphPlot  # load GraphPlot package","key":"ePijpRvKH6"},{"type":"output","id":"mCFkCMsZTNrYpJc6huk3b","data":[],"key":"uMEauUcxhJ"}],"key":"NAUhjdpSSH"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"gplot(G1)","key":"yFyb4oroRx"},{"type":"output","id":"fRdBsmVHuc94DDLbeupa4","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"image/svg+xml":{"content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     version=\"1.2\"\n     width=\"100mm\" height=\"100mm\" viewBox=\"0 0 100 100\"\n     stroke=\"none\"\n     fill=\"#000000\"\n     stroke-width=\"0.3\"\n     font-size=\"3.88\"\n>\n<defs>\n  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n  </marker>\n</defs>\n<g fill=\"#000000\" fill-opacity=\"0.000\" id=\"img-5d1d4e65-1\">\n  <g transform=\"translate(50,50)\">\n    <path d=\"M-50,-50 L50,-50 50,50 -50,50  z\" class=\"primitive\"/>\n  </g>\n</g>\n<g stroke-width=\"1.5\" stroke=\"#D3D3D3\" id=\"img-5d1d4e65-2\">\n</g>\n<g stroke-width=\"1.5\" stroke=\"#D3D3D3\" id=\"img-5d1d4e65-3\">\n  <g transform=\"translate(70.54,22.68)\">\n    <path fill=\"none\" d=\"M16.82,-11.42 L-16.82,11.42 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(28.87,33.62)\">\n    <path fill=\"none\" d=\"M15.4,2.55 L-15.4,-2.55 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(34.71,64.35)\">\n    <path fill=\"none\" d=\"M12.23,-22.73 L-12.23,22.73 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(14.17,60.94)\">\n    <path fill=\"none\" d=\"M-4.87,-25.61 L4.87,25.61 \" class=\"primitive\"/>\n  </g>\n</g>\n<g fill=\"#D3D3D3\" id=\"img-5d1d4e65-4\">\n</g>\n<g fill=\"#D3D3D3\" id=\"img-5d1d4e65-5\">\n</g>\n<g font-size=\"4\" fill=\"#000000\" id=\"img-5d1d4e65-6\">\n</g>\n<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-5d1d4e65-7\">\n  <g transform=\"translate(91.67,8.33)\">\n    <circle cx=\"0\" cy=\"0\" r=\"5\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(49.4,37.02)\">\n    <circle cx=\"0\" cy=\"0\" r=\"5\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(8.33,30.22)\">\n    <circle cx=\"0\" cy=\"0\" r=\"5\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(20.01,91.67)\">\n    <circle cx=\"0\" cy=\"0\" r=\"5\" class=\"primitive\"/>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-5d1d4e65-8\">\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-5d1d4e65-9\">\n  <g transform=\"translate(50,0)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\"></text>\n    </g>\n  </g>\n</g>\n</svg>\n","content_type":"image/svg+xml"},"text/html":{"content_type":"text/html","hash":"26bafd77fa88abb1c13b476957d39088","path":"/build/26bafd77fa88abb1c13b476957d39088.html"},"text/plain":{"content":"Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([]), List([Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}}(Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}[Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}((-1.2cx, -1.2cy), 2.4cx, 2.4cy)], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(1.5mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.8965804457535554cx, -0.9297903439727362cy), (0.08911319961310216cx, -0.3816155039448191cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.13762540145094654cx, -0.33183652808238484cy), (-0.8766809531823959cx, -0.4542783405284365cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.0735253540556951cx, -0.20132356002610835cy), (-0.6605609026619745cx, 0.8899177121085531cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.9766653791371509cx, -0.35190635187378533cy), (-0.7431145229471763cx, 0.8771973311805192cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(1.5mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, -1.0cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.0143063546333424cx, -0.3114058479175552cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, -0.47470902069326615cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.7197799020843272cx, 1.0cy), 0.12cx)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0cx, -1.2cy), \"\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))","content_type":"text/plain"}}}],"key":"Z7sUdpeDAW"}],"key":"iDiDPZo6An"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Size considerations","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fq2WaRjSHS"}],"identifier":"size-considerations","label":"Size considerations","html_id":"size-considerations","implicit":true,"key":"o2CsI8llS1"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bd5unyFGTH"},{"type":"inlineCode","value":"Array{Int64,2}","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"szP12SBbvS"},{"type":"text","value":" to store an adjacency matrix turns out to be a rather costly way to store a graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"F8KuJb7rQ3"}],"key":"aPIwfOBylX"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"In the original example graph we had 4 nodes and 4 edges","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"o8VJsvjOpV"}],"key":"GFRnaMM1pA"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"To store this we needed to have a 4x4 matrix of 64 bit integers","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"vPkm3kpIUN"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"This is only (","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"J421RdYhDb"},{"type":"inlineCode","value":"Int(16 * 64 / 8) == 128","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"hTTZegLuXR"},{"type":"text","value":") bytes in our exapmle,","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"MK5Ewkei1F"}],"key":"E5HwHqna56"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"But consider a graph of websites and links between them -- that graph would have millions of nodes and edges...","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"y0a5BB6H1n"}],"key":"XzbSmT63Op"}],"key":"X1jzd9fokw"}],"key":"hNtyoCnd3H"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"There are a few approaches to reducing this storage cost:","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"HCJC0fY5Z8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Only store the upper triangle of the matrix","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Q9eJcVaSZh"}],"key":"gxb3ovBsfK"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Use ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"q6rMiwhS7w"},{"type":"inlineCode","value":"Array{Bool,2}","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"f11mfeZ9J2"},{"type":"text","value":" instead of ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"VkUBKHMhlH"},{"type":"inlineCode","value":"Array{Int64,2}","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Tf0nUXoQgX"},{"type":"text","value":" to store adjacency matrix ( each element only ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"jOxaSoPzwt"},{"type":"inlineCode","value":"sizeof(Bool) == 1","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"i1QPXki0mN"},{"type":"text","value":" bit!)","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"HzYueKzZaR"}],"key":"ODmEOFO83E"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Use a ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"hkPeAvXc4V"},{"type":"link","url":"https://docs.julialang.org/en/v1/stdlib/SparseArrays/","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"SparseMatrix","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"rkvTTE1nhl"}],"urlSource":"https://docs.julialang.org/en/v1/stdlib/SparseArrays/","key":"jEjbzbkDZv"}],"key":"iOcIw2ZJ4A"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Store as a ","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"bkgoIlB8cA"},{"type":"inlineCode","value":"Vector{Vector{Int}}","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"UmPofutcS6"}],"key":"NRb2eTelkk"}],"key":"s2Ue5eVlrV"}],"key":"HKbi50iEZf"}],"key":"h5xCt1Bfjt"}],"visibility":"show","key":"YHHnRQXPj6"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"# Vector{Vector{Int}}\nA2 = [[2], [1, 3, 4], [2, 4], [2, 3]]","visibility":"show","key":"RhKBiYadFL"},{"type":"output","id":"d5fJS9A4YXTgyqyUs6rot","data":[{"output_type":"execute_result","execution_count":10,"metadata":{},"data":{"text/plain":{"content":"4-element Vector{Vector{Int64}}:\n [2]\n [1, 3, 4]\n [2, 4]\n [2, 3]","content_type":"text/plain"}}}],"visibility":"show","key":"AVYRmbipRX"}],"visibility":"show","key":"inNJOWlyg0"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"G1.fadjlist","key":"dBamwGeYmN"},{"type":"output","id":"pGWpXk8qdItW75CMH8BFc","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"4-element Vector{Vector{Int64}}:\n [2]\n [1, 3, 4]\n [2, 4]\n [2, 3]","content_type":"text/plain"}}}],"key":"oR2wNt8M9l"}],"key":"B0fXJaN34j"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Graph Theory Concepts","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vhNFvBt8Go"}],"identifier":"graph-theory-concepts","label":"Graph Theory Concepts","html_id":"graph-theory-concepts","implicit":true,"key":"nXNpgqyhjm"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s explore some concepts often used in analysis of graphs","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AhOFglcSBF"}],"key":"u3mAWvM7l1"}],"key":"rF44PkAveD"}],"visibility":"show","key":"iMze1pLbMi"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Paths","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HuMWNSGof0"}],"identifier":"paths","label":"Paths","html_id":"paths","implicit":true,"key":"dVp8z9LlOR"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"When studying graphs it is often natural to ask about how things travel or flow across the graph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Y5lsHPY0Pz"}],"key":"zPJr5O9coI"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example, how information spreads amongst a group of friends, how data travels the internet, how diseases are transmitted from one person to another, and how people navigate a metro subway system","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"gtDh3OYgUo"}],"key":"WSs2rGifqA"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In each of these cases, the flow of things goes from node to node across edges","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ISB8sDA5TQ"}],"key":"IZuH8XkLAQ"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"A flow from one any node to another node is called a ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xYD9WKD55Y"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"path","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"vMuicXLK1H"}],"key":"doCaJybY9i"}],"key":"BND0USFy6p"}],"key":"vMkGoCHd2W"}],"visibility":"show","key":"DnYmG2jUZr"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Arpanet Example","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Stf3rpRcBB"}],"identifier":"arpanet-example","label":"Arpanet Example","html_id":"arpanet-example","implicit":true,"key":"HZJCzn6Jpe"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Consider the following Graph of the first iteration of the internet","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZBV0K5f9F4"}],"key":"AQ2gYeqttq"}],"key":"r51gaonku9"},{"type":"image","url":"/build/54974d171f5875248b5ac6b080a9c18d.png","alt":"arpanet","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ctkKta6yXl","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/arpanet_map.png","urlOptimized":"/build/54974d171f5875248b5ac6b080a9c18d.webp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"There are many possible paths through this network","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"y9hgHwpVoC"}],"key":"OvD588E6XK"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Consider a path from UCSB to MIT: ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"GS18dehIDS"},{"type":"inlineCode","value":"UCSB-UCLA-RAND-BBN-MIT","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"WFiQ3I5gxY"}],"key":"fNyh1qdtdz"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Another possible path from UCSB to MIT is ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"KJ2i9K4haq"},{"type":"inlineCode","value":"UCSB-SRI-UTAH-MIT","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"SfRrrAApWC"}],"key":"bnYNuVTmqe"}],"key":"dBEFpQU3RE"}],"visibility":"show","key":"igHMpnhQWI"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Graphs.jl Arpanet","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SZV1adz6H7"}],"identifier":"graphs-jl-arpanet","label":"Graphs.jl Arpanet","html_id":"graphs-jl-arpanet","implicit":true,"key":"f4z9WHwmlH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Let’s define the Arpanet using Graphs as it will be helpful throughout this lecture","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"za6XUfVruE"}],"key":"D2y6WWjtR9"}],"key":"m6Xb9LQ3XH"}],"visibility":"show","key":"RX18sVV5RU"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"nodes = [\n\t\t\"UCSB\" => [\"SRI\", \"UCLA\"],\n\t\t\"SRI\" => [\"UCSB\", \"UCLA\", \"STAN\", \"UTAH\"],\n\t\t\"UCLA\" => [\"SRI\", \"UCSB\", \"STAN\", \"RAND\"],\n\t\t\"STAN\" => [\"SRI\", \"UCLA\"],\n\t\t\"UTAH\" => [\"SRI\", \"SDC\", \"MIT\"],\n\t\t\"SDC\" => [\"UTAH\", \"RAND\"],\n\t\t\"RAND\" => [\"UCLA\", \"SDC\", \"BBN\"],\n\t\t\"MIT\" => [\"UTAH\", \"BBN\", \"LINC\"],\n\t\t\"BBN\" => [\"MIT\", \"RAND\", \"HARV\"],\n\t\t\"LINC\" => [\"MIT\", \"CASE\"],\n\t\t\"CASE\" => [\"LINC\", \"CARN\"],\n\t\t\"CARN\" => [\"CASE\", \"HARV\"],\n\t\t\"HARV\" => [\"CARN\", \"BBN\"]\n\t]\nnode_ints = Dict(zip(first.(nodes), 1:length(nodes)))\narpa = SimpleGraph(length(nodes))\nfor (node, edges) in nodes\n    for e in edges\n        add_edge!(arpa, node_ints[node], node_ints[e])\n    end\nend\n\n# save graph for loading in future\nsavegraph(\"arpanet.lg\", arpa)","key":"NGFZUezsvX"},{"type":"output","id":"26HVgiAliP1fzHQyXwQce","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"1","content_type":"text/plain"}}}],"key":"Tbrcc9RmM3"}],"key":"mUfTMzec20"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"arpa","key":"TFbuZOy50p"},{"type":"output","id":"kDpujLEEJnVpzWhVesqpj","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/plain":{"content":"{13, 17} undirected simple Int64 graph","content_type":"text/plain"}}}],"key":"vJse8MZmQ3"}],"key":"b0ivFuOawC"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"gplot(arpa, nodelabel=first.(nodes))","key":"ogFq3eU6dl"},{"type":"output","id":"vGjpZLg6kVElEEN_R7QYY","data":[{"output_type":"execute_result","execution_count":14,"metadata":{},"data":{"image/svg+xml":{"content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     version=\"1.2\"\n     width=\"100mm\" height=\"100mm\" viewBox=\"0 0 100 100\"\n     stroke=\"none\"\n     fill=\"#000000\"\n     stroke-width=\"0.3\"\n     font-size=\"3.88\"\n>\n<defs>\n  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n  </marker>\n</defs>\n<g fill=\"#000000\" fill-opacity=\"0.000\" id=\"img-b09f4ff0-1\">\n  <g transform=\"translate(50,50)\">\n    <path d=\"M-50,-50 L50,-50 50,50 -50,50  z\" class=\"primitive\"/>\n  </g>\n</g>\n<g stroke-width=\"0.83\" stroke=\"#D3D3D3\" id=\"img-b09f4ff0-2\">\n</g>\n<g stroke-width=\"0.83\" stroke=\"#D3D3D3\" id=\"img-b09f4ff0-3\">\n  <g transform=\"translate(15.12,24.08)\">\n    <path fill=\"none\" d=\"M-5.06,6.72 L5.06,-6.72 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(13.53,34.62)\">\n    <path fill=\"none\" d=\"M-2.42,-0.7 L2.42,0.7 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(20.32,25.59)\">\n    <path fill=\"none\" d=\"M1.16,-7.69 L-1.16,7.69 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(16.09,11.69)\">\n    <path fill=\"none\" d=\"M3.32,1.91 L-3.32,-1.91 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(32.48,14.74)\">\n    <path fill=\"none\" d=\"M-7.68,0.22 L7.68,-0.22 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(14.5,22.23)\">\n    <path fill=\"none\" d=\"M3.39,11.13 L-3.39,-11.13 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(27.7,42.83)\">\n    <path fill=\"none\" d=\"M-6.66,-4.97 L6.66,4.97 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(39.39,15.66)\">\n    <path fill=\"none\" d=\"M0.92,-0.31 L-0.92,0.31 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(52.28,23.46)\">\n    <path fill=\"none\" d=\"M-7.17,-7.01 L7.17,7.01 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(36.2,33.21)\">\n    <path fill=\"none\" d=\"M-0.39,-13.43 L0.39,13.43 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(46.05,57.06)\">\n    <path fill=\"none\" d=\"M-7.12,-5.72 L7.12,5.72 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(58.47,48.54)\">\n    <path fill=\"none\" d=\"M2.51,-13.21 L-2.51,13.21 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(70.63,35.73)\">\n    <path fill=\"none\" d=\"M-6.39,-2.27 L6.39,2.27 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(63.11,77.03)\">\n    <path fill=\"none\" d=\"M-6.17,-9.98 L6.17,9.98 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(85.7,50.89)\">\n    <path fill=\"none\" d=\"M-4.67,-9.34 L4.67,9.34 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(88.88,77.24)\">\n    <path fill=\"none\" d=\"M2.24,-11.59 L-2.24,11.59 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(78.45,90.57)\">\n    <path fill=\"none\" d=\"M4.79,0.69 L-4.79,-0.69 \" class=\"primitive\"/>\n  </g>\n</g>\n<g fill=\"#D3D3D3\" id=\"img-b09f4ff0-4\">\n</g>\n<g fill=\"#D3D3D3\" id=\"img-b09f4ff0-5\">\n</g>\n<g font-size=\"4\" fill=\"#000000\" id=\"img-b09f4ff0-6\">\n</g>\n<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-b09f4ff0-7\">\n  <g transform=\"translate(8.33,33.11)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(21.92,15.05)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(18.73,36.13)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(10.27,8.33)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(43.05,14.44)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(35.72,16.89)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(36.67,49.53)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(61.52,32.49)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(55.43,64.59)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(79.74,38.97)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(91.67,62.82)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(86.09,91.67)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(70.8,89.46)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-b09f4ff0-8\">\n  <g transform=\"translate(8.33,33.11)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UCSB</text>\n    </g>\n  </g>\n  <g transform=\"translate(21.92,15.05)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">SRI</text>\n    </g>\n  </g>\n  <g transform=\"translate(18.73,36.13)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UCLA</text>\n    </g>\n  </g>\n  <g transform=\"translate(10.27,8.33)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">STAN</text>\n    </g>\n  </g>\n  <g transform=\"translate(43.05,14.44)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UTAH</text>\n    </g>\n  </g>\n  <g transform=\"translate(35.72,16.89)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">SDC</text>\n    </g>\n  </g>\n  <g transform=\"translate(36.67,49.53)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">RAND</text>\n    </g>\n  </g>\n  <g transform=\"translate(61.52,32.49)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">MIT</text>\n    </g>\n  </g>\n  <g transform=\"translate(55.43,64.59)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">BBN</text>\n    </g>\n  </g>\n  <g transform=\"translate(79.74,38.97)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">LINC</text>\n    </g>\n  </g>\n  <g transform=\"translate(91.67,62.82)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">CASE</text>\n    </g>\n  </g>\n  <g transform=\"translate(86.09,91.67)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">CARN</text>\n    </g>\n  </g>\n  <g transform=\"translate(70.8,89.46)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">HARV</text>\n    </g>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-b09f4ff0-9\">\n  <g transform=\"translate(50,0)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\"></text>\n    </g>\n  </g>\n</g>\n</svg>\n","content_type":"image/svg+xml"},"text/html":{"content_type":"text/html","hash":"b9711f1a65904205d059105422c4a341","path":"/build/b9711f1a65904205d059105422c4a341.html"},"text/plain":{"content":"Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([]), List([Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}}(Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}[Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}((-1.2cx, -1.2cy), 2.4cx, 2.4cy)], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.8320502943378437mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.9583234306635561cx, -0.4608540680357522cy), (-0.7156830949577927cx, -0.7834758470956229cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.9334235252065648cx, -0.3860679008539522cy), (-0.8171350540729944cx, -0.3522314287410117cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.6843778663624266cx, -0.7703327718286253cy), (-0.7401872385384813cx, -0.4014171395092104cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.734079159375233cx, -0.8735164088012757cy), (-0.8934418418692119cx, -0.9653738396358477cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.6046976406523018cx, -0.8408829280500383cy), (-0.23602486921509655cx, -0.8514825317777255cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.770739104338702cx, -0.39919546557189134cy), (-0.9333339505639534cx, -0.9336641973288209cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.6949918453668968cx, -0.29138641381203223cy), (-0.3754030396891287cx, -0.05285545813879497cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.23248610355131585cx, -0.831521083891162cy), (-0.27685026457995177cx, -0.8167122853376816cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.11713937259418128cx, -0.8049999405320661cy), (0.2268031636189105cx, -0.46869806254589064cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.3406045908006192cx, -0.7254499412550851cy), (-0.32185209886106514cx, -0.08069042563323299cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.26578808458977166cx, 0.03205144258368657cy), (0.07615655138004163cx, 0.3068413222627634cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2634559254587275cx, -0.35210035475404267cy), (0.14312862237878773cx, 0.28215253696329123cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.34170884651660804cx, -0.39698909293206686cy), (0.6484990637273809cx, -0.2878819014198699cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.16666615020487796cx, 0.4092517510925184cy), (0.46275541641870743cx, 0.8881801903004563cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.7448419219803336cx, -0.20263338731240735cy), (0.9689862129928765cx, 0.24556298471409813cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.986842748935609cx, 0.3756555427736079cy), (0.8793341781364895cx, 0.9319222572927033cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.7975473239553427cx, 0.9901171925178681cy), (0.5678463971736049cx, 0.9570397749785416cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.8320502943378437mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, -0.4054396666942517cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.6740065256213488cx, -0.8388902484371233cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.7505585792795592cx, -0.3328596629007122cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9535144756230962cx, -1.0cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.1667159842460496cx, -0.8534752113906404cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.342620383885218cx, -0.7947581578382031cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.3198363057764664cx, -0.011382209050115cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.27637977527077884cx, -0.42022279168731635cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.13020477256673635cx, 0.3502749738965649cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.7138281349732101cx, -0.2646482026646204cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, 0.3075778000663112cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.8661769270720985cx, 1.0cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.49921679405684904cx, 0.9471569674964098cy), 0.06656402354702749cx)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, -0.4054396666942517cy), \"UCSB\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.6740065256213488cx, -0.8388902484371233cy), \"SRI\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.7505585792795592cx, -0.3328596629007122cy), \"UCLA\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9535144756230962cx, -1.0cy), \"STAN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.1667159842460496cx, -0.8534752113906404cy), \"UTAH\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.342620383885218cx, -0.7947581578382031cy), \"SDC\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.3198363057764664cx, -0.011382209050115cy), \"RAND\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.27637977527077884cx, -0.42022279168731635cy), \"MIT\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.13020477256673635cx, 0.3502749738965649cy), \"BBN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.7138281349732101cx, -0.2646482026646204cy), \"LINC\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, 0.3075778000663112cy), \"CASE\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.8661769270720985cx, 1.0cy), \"CARN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.49921679405684904cx, 0.9471569674964098cy), \"HARV\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0cx, -1.2cy), \"\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))","content_type":"text/plain"}}}],"key":"PwwkIXD2k9"}],"key":"KXJxtmislz"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cycles","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YJBjvp41HV"}],"identifier":"cycles","label":"Cycles","html_id":"cycles","implicit":true,"key":"LNsdtOSuCU"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"An important concept when analyzing graphs is the concept of a cycle","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yokUkJFD9V"}],"key":"vpke9Eq9iv"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"A cycle is a path that starts and ends at the same node","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"q3n7fWgHV0"}],"key":"Xhl2LN5UVn"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"For the ARPA net, an example cycle is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YX0Nq23HyX"},{"type":"inlineCode","value":"LINC-CASE-CARN-HARV-BBN-MIT-LINC","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CDjhIs9OQ9"}],"key":"luUCvMfv72"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Question... what is the shortest possible cycle in a graph (including all endpoints)?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"t3Kd0Q6hkw"}],"key":"c03br71BGH"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Graphs can tell us if a graph is connected","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mynfdD63xV"}],"key":"yhl0PSCPTT"}],"key":"F1cu9Ufwqa"}],"visibility":"show","key":"x1ytTkDAVj"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"is_connected(arpa)","key":"fHS77ERaGs"},{"type":"output","id":"m5rQ_f6x1BBFALvtat9hM","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"true","content_type":"text/plain"}}}],"key":"nnF2ZcBJca"}],"key":"ecnlh2fvkc"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"It is natural to believe that many real-world networks are connected","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oPMn4wfgZy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Transportation: you can get to any station","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ylaQ7nEJ9s"}],"key":"rOkYSIBN6o"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Internet: you can visit any website","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FivO8GfHCq"}],"key":"RSK5ixmmn6"}],"key":"hZVHQhDw1r"}],"key":"G2VcPezd59"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"But it is entirely possible to have a non-connected graph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"LrsubeZek8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Social networks (nodes: people, edges: friendships) of college students who different countries","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ecd6otE2g8"}],"key":"zhJLWLjbkU"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Suppliers for a textile company vs a microchip manufacturer","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"CWwXlNBGsO"}],"key":"BThTh9ADeh"}],"key":"YzJWMv82bD"}],"key":"c3Hq2ALxpN"}],"key":"esErvC06dr"}],"visibility":"show","key":"ZVfjLMgeaf"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Distance","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cKYxdpywmP"}],"identifier":"distance","label":"Distance","html_id":"distance","implicit":true,"key":"dq0rJsjIsO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We can extend concept of paths between nodes, to include a notion of distance","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"f2PdD70BLp"}],"key":"hHVfkrO2NF"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"lfft65t1rL"},{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"length","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dCNRUDVM3Y"}],"key":"i89dWlBSZj"},{"type":"text","value":" of a path is the number of steps it takes from beginning to end","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"r889Pd4oMO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"MIT-BBN-RAND-UCLA","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"plnNfCSfrw"},{"type":"text","value":" has length 3 (starting from ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hJFtYHt7xL"},{"type":"inlineCode","value":"MIT","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ysvVDY9YT3"},{"type":"text","value":" take three steps before ending at ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"w3McEi0FRp"},{"type":"inlineCode","value":"UCLA","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UUJdi9bKxQ"},{"type":"text","value":")","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XJ2ETTV0jH"}],"key":"Qq5er2ds2b"}],"key":"KZNrYlBryA"}],"key":"Eohj05wq35"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Xi0xi1EeC4"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"distance","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"immrBfRMYK"}],"key":"k70MPbpWW5"},{"type":"text","value":" between two nodes, is the length of the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"aORl36yFLk"},{"type":"emphasis","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"shortest","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"MFNoxG3ibk"}],"key":"Zz1bnOYiOq"},{"type":"text","value":" path between those nodes","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"PvLlUYWVkU"}],"key":"WbCAIcmK5F"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Graphs can compute distances using the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Zwg0AALioL"},{"type":"inlineCode","value":"gdistances","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mICTc4ANxO"},{"type":"text","value":" function","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"QYrV0JPNQW"}],"key":"u1xDVDbHeI"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Below we compute the distance between ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"B7xfs9sOMM"},{"type":"inlineCode","value":"UCLA","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"dLmTtK1d6C"},{"type":"text","value":" and all nodes","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"BWfdU4qXKB"}],"key":"tVT3Au7n61"}],"key":"MHBsXv1p6L"}],"visibility":"show","key":"vh824VvaqC"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"Dict(zip(first.(nodes), gdistances(arpa, node_ints[\"UCLA\"])))","key":"QUwQ43onj6"},{"type":"output","id":"FhzQjRye2Blr6peLL9dh-","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"Dict{String, Int64} with 13 entries:\n  \"HARV\" => 3\n  \"UTAH\" => 2\n  \"UCSB\" => 1\n  \"LINC\" => 4\n  \"RAND\" => 1\n  \"MIT\"  => 3\n  \"CASE\" => 5\n  \"SRI\"  => 1\n  \"STAN\" => 1\n  \"UCLA\" => 0\n  \"SDC\"  => 2\n  \"CARN\" => 4\n  \"BBN\"  => 2","content_type":"text/plain"}}}],"key":"sPLQX1oEO8"}],"key":"QlTeT28Tmw"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Breadth-First Search","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jekWbNs4nU"}],"identifier":"breadth-first-search","label":"Breadth-First Search","html_id":"breadth-first-search","implicit":true,"key":"ZJfmICTmug"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"If asked, how would you go about computing the distance between the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KanwUZyO5I"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xhuonDlAii"},{"type":"text","value":" node and all other nodes?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KeDN3DKzbH"}],"key":"nii40bklOj"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"One iterative approach might be:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Yrq0bToBlf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Start with ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QFip0U6ad1"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"TgLRatcS1d"},{"type":"text","value":": note it is distance zero to ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ehm9ye8PWt"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JQYMPtcBVg"}],"key":"N1A31VA0xl"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Move on to all nodes directly connected to ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"dbvXXordTs"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"YN6y0PHieB"},{"type":"text","value":": these are distance 1","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"GMjSAWflMV"}],"key":"ihowenhlW2"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Then move to all nodes connected to nodes that are distance 1 from ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ffknRkPy7B"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ALWJoCOuBY"},{"type":"text","value":" (excluding any you may have already found): declare these to be at distance 2 from ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"a5qWbiKZEt"},{"type":"inlineCode","value":"HARV","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"vSey4HVMxp"}],"key":"WfDstXPvgO"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Continue traversing edges until you have visited all nodes","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"KRu6C3CPB5"}],"key":"fmBZwxaFGR"}],"key":"WdFtMY3pgZ"}],"key":"nviVXlT9UE"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"This algorihtm is called ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"mEEP7zuBXb"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"breadth-first search","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"u46au8iVrN"}],"key":"ts8axqcewS"}],"key":"S4PC9JMNXN"}],"key":"m78uzCfbiS"}],"visibility":"show","key":"WsrLPxuEjY"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example: Breadth-First Search from MIT","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JhMTMHkPvv"}],"identifier":"example-breadth-first-search-from-mit","label":"Example: Breadth-First Search from MIT","html_id":"example-breadth-first-search-from-mit","implicit":true,"key":"xuf8XwBHMT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The image below shows how breadth-first search would proceed for the MIT node","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PvTUahKjCK"}],"key":"toi7YqyJ0l"}],"key":"BmA4QQr8Z2"},{"type":"image","url":"/build/9cc846425c176f6c0a33d3ffe8b9279b.png","alt":"mit bfs","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MlgcEfml7p","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/mit_breadth_first.png","urlOptimized":"/build/9cc846425c176f6c0a33d3ffe8b9279b.webp"}],"visibility":"show","key":"eZx3bPSmOa"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercise (difficult!): BFS","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QiVi08VGEO"}],"identifier":"exercise-difficult-bfs","label":"Exercise (difficult!): BFS","html_id":"exercise-difficult-bfs","implicit":true,"key":"i0PfsOEteV"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now it is time for you to try this out!","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WLsX7ZLm6k"}],"key":"pc98iqZ0ij"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Our goal is to use breadth-first search to compute the distance betwen a given node and all other nodes","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"E5MM3ZfeFX"}],"key":"A4Q3KqMWF1"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The return value you end up with should be an ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kQ5Vblfjro"},{"type":"inlineCode","value":"Vector{Vector{Int}}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dv6QwBWwB1"},{"type":"text","value":", where element ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"r6riFzJI08"},{"type":"inlineCode","value":"i","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ewjsq5LEOY"},{"type":"text","value":" of this vector contains all node labels at distance ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ucoPFvzFW8"},{"type":"inlineCode","value":"i","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MrKNfli5km"},{"type":"text","value":" from the starting node","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lNmljYFMDY"}],"key":"YrkOGLq17J"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Fill in the logic for the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"DZKCP3W9O5"},{"type":"inlineCode","value":"breadth_first_distances","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"olBS4wU5wi"},{"type":"text","value":" function below","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"YtXvBCBpeA"}],"key":"h54sOHh5EL"}],"key":"kHGluLwoYi"}],"visibility":"show","key":"psP0RF928p"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"function breadth_first_distances(g, start::Int)\n\tout = Vector{Int}[]\n\t# use push!(out, new_nodes) to add to out\n\tdistance = 0\n\n\t# TODO: your code here...\n\n\t# return out\n\tout\nend","key":"ckTN5JVqPY"},{"type":"output","id":"RakuUFifLdH_ZvZzWKszT","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"breadth_first_distances (generic function with 1 method)","content_type":"text/plain"}}}],"key":"BXXMO7BOPU"}],"key":"uz9bnBhg38"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# Test code\n\nfunction test_bfd_methods(val, want)\n    if length(val) == 0\n        error(\"Make sure to `push!` on to `out` in your function\")\n    elseif length(val) != maximum(gdistances(arpa, node_ints[\"HARV\"]))\n        error(\"`out` has incorrect number of elements\")\n    elseif length.(val) != length.(want)\n        error(\"Right number of elements, but not right number in each subvector\")\n    elseif all(map(x12 -> all(sort(x12[1]) .== sort(x12[2])), zip(val, want)))\n        println(\"correct!\")\n    end\nend\n\nfunction run_tests()\n    val = breadth_first_distances(arpa, node_ints[\"HARV\"])\n    want = [[9, 12], [7, 8, 11], [3, 6, 5, 10], [1, 2, 4]]\n    test_bfd_methods(val, want)\nend","key":"gAs9YMDqsB"},{"type":"output","id":"BOke_nFeP-t0EJeAL823S","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"run_tests (generic function with 1 method)","content_type":"text/plain"}}}],"key":"rRLH2PJt7N"}],"key":"EhJejDKx4T"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment the code below and run when you are ready to test your code\n# run_tests()","key":"tNysiJnVFl"},{"type":"output","id":"iO4U1MChNgzvjakLzQvOp","data":[],"key":"VDFGe4Yi64"}],"key":"aSin5uYoaY"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"BFS with Graphs","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eXQe5ghH50"}],"identifier":"bfs-with-graphs","label":"BFS with Graphs","html_id":"bfs-with-graphs","implicit":true,"key":"ZnIf0LQjsA"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Graphs library contains routines implementing breadth-first search","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"bN3LAhiI1W"}],"key":"Q5V3OZLWqO"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The main function is called ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MDsQXhJgSy"},{"type":"inlineCode","value":"bfs_tree","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"m2FK02vvF5"}],"key":"Rwp2ofmNfp"}],"key":"cdKXLMUSxs"}],"visibility":"show","key":"BjDaV3zlLq"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"bfs_carn = bfs_tree(arpa, node_ints[\"CARN\"])","key":"oojgVHvsyF"},{"type":"output","id":"TkwE5LL0dAlUS2AZzrfTO","data":[{"output_type":"execute_result","execution_count":27,"metadata":{},"data":{"text/plain":{"content":"{13, 12} directed simple Int64 graph","content_type":"text/plain"}}}],"key":"uPTUy6NsCe"}],"key":"WHgbT5345f"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice that the printout says we have a graph with 13 nodes, 12 edges and it is a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yuGL7FCBmG"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"directed","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rs3LuXZp5K"}],"key":"vZluXmpq6V"},{"type":"text","value":" graph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bTH4rgrBPz"}],"key":"yBkBohMIAa"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Thus far, all graphs we have considered have been undirected","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"xJDWCHMKvy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We have only been concerned about if a connection (edge) exists between nodes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hB6tauNG38"}],"key":"kq8fpqRzsY"}],"key":"mBK0iNLfjw"}],"key":"u3ozX6rhPt"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"A directed graph extends the notion of connecting nodes with a direction","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"UC9v6aiAg3"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We can now say that ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Cdj5rurtuM"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"things","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rFOjOOfQkb"}],"key":"To0kdFl0NO"},{"type":"text","value":" flow across edges from one node to another -- always in the same direction","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HH9uCnwrGW"}],"key":"qUHcVDUIr1"}],"key":"oxgpbeMivK"}],"key":"p3BMy8Wpnu"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Why would the breadth-first search routine return a directed graph instead of the undirected type we started with?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"JzECNRN8ui"}],"key":"TmnPD09jMm"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Let’s visualize it and see if we can understand why","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"iVQZoGhbHd"}],"key":"GI2oSPBlP3"}],"key":"YAysX7NDWL"}],"key":"fWNBN0cMtL"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"gplot(bfs_carn, nodelabel=first.(nodes))","visibility":"show","key":"KaRYzNO9Os"},{"type":"output","id":"1eeTPIj7fJ9AjbFM1G1VB","data":[{"output_type":"execute_result","execution_count":28,"metadata":{},"data":{"image/svg+xml":{"content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\"\n     xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n     version=\"1.2\"\n     width=\"100mm\" height=\"100mm\" viewBox=\"0 0 100 100\"\n     stroke=\"none\"\n     fill=\"#000000\"\n     stroke-width=\"0.3\"\n     font-size=\"3.88\"\n>\n<defs>\n  <marker id=\"arrow\" markerWidth=\"15\" markerHeight=\"7\" refX=\"5\" refY=\"3.5\" orient=\"auto\" markerUnits=\"strokeWidth\">\n    <path d=\"M0,0 L15,3.5 L0,7 z\" stroke=\"context-stroke\" fill=\"context-stroke\"/>\n  </marker>\n</defs>\n<g fill=\"#000000\" fill-opacity=\"0.000\" id=\"img-06f2568e-1\">\n  <g transform=\"translate(50,50)\">\n    <path d=\"M-50,-50 L50,-50 50,50 -50,50  z\" class=\"primitive\"/>\n  </g>\n</g>\n<g stroke-width=\"0.83\" stroke=\"#D3D3D3\" id=\"img-06f2568e-2\">\n</g>\n<g stroke-width=\"0.83\" stroke=\"#D3D3D3\" id=\"img-06f2568e-3\">\n  <g transform=\"translate(17.32,18.52)\">\n    <path fill=\"none\" d=\"M2.51,0.82 L-2.51,-0.82 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(17.95,22.16)\">\n    <path fill=\"none\" d=\"M1.96,-0.82 L-1.96,0.82 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(21.79,16.2)\">\n    <path fill=\"none\" d=\"M0.24,1.19 L-0.24,-1.19 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(34.26,25.27)\">\n    <path fill=\"none\" d=\"M5.44,2.35 L-5.44,-2.35 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(44.7,25.69)\">\n    <path fill=\"none\" d=\"M-0.59,0.78 L0.59,-0.78 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(82.27,39.65)\">\n    <path fill=\"none\" d=\"M-2.62,0.27 L2.62,-0.27 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(51.85,36.59)\">\n    <path fill=\"none\" d=\"M4.25,3.5 L-4.25,-3.5 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(65.6,41.25)\">\n    <path fill=\"none\" d=\"M-4.4,0.41 L4.4,-0.41 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(46.6,86.89)\">\n    <path fill=\"none\" d=\"M0.79,-0.61 L-0.79,0.61 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(53.15,76.71)\">\n    <path fill=\"none\" d=\"M0.71,-1.59 L-0.71,1.59 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(55.99,67.21)\">\n    <path fill=\"none\" d=\"M-0.44,2.42 L0.44,-2.42 \" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(57.89,51.97)\">\n    <path fill=\"none\" d=\"M-0.14,3.24 L0.14,-3.24 \" class=\"primitive\"/>\n  </g>\n</g>\n<g fill=\"#D3D3D3\" id=\"img-06f2568e-4\">\n</g>\n<g fill=\"#D3D3D3\" id=\"img-06f2568e-5\">\n  <g transform=\"translate(13.56,17.3)\">\n    <path d=\"M0.8,1.76 L-2.48,-0.81 1.68,-0.95  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(14.78,23.48)\">\n    <path d=\"M1.75,0.81 L-2.41,1 0.66,-1.82  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(21.3,13.73)\">\n    <path d=\"M-1.15,1.56 L-0.51,-2.56 1.65,1  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(27.63,22.41)\">\n    <path d=\"M0.63,1.83 L-2.4,-1.03 1.76,-0.79  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(46.09,23.88)\">\n    <path d=\"M-1.92,0.17 L1.59,-2.07 0.34,1.9  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(86.2,39.25)\">\n    <path d=\"M-1.44,-1.29 L2.6,-0.26 -1.15,1.55  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(46.6,32.26)\">\n    <path d=\"M0.1,1.93 L-2.01,-1.66 1.91,-0.27  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(71.3,40.72)\">\n    <path d=\"M-1.43,-1.3 L2.6,-0.24 -1.17,1.54  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(44.78,88.3)\">\n    <path d=\"M1.9,0.33 L-2.06,1.6 0.16,-1.93  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(51.91,79.49)\">\n    <path d=\"M1.83,-0.61 L-1.06,2.38 -0.77,-1.77  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(56.66,63.5)\">\n    <path d=\"M-1.63,1.03 L0.46,-2.57 1.17,1.54  z\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(58.09,47.42)\">\n    <path d=\"M-1.48,1.24 L0.11,-2.61 1.37,1.36  z\" class=\"primitive\"/>\n  </g>\n</g>\n<g font-size=\"4\" fill=\"#000000\" id=\"img-06f2568e-6\">\n</g>\n<g stroke-width=\"0\" stroke=\"#000000\" stroke-opacity=\"0.000\" fill=\"#40E0D0\" id=\"img-06f2568e-7\">\n  <g transform=\"translate(8.33,15.6)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(9.71,25.6)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(22.58,20.23)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(20.23,8.33)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(91.67,38.69)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(49.43,19.51)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(42.35,28.76)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(76.78,40.21)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(58.32,41.93)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(40.44,91.67)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(49.67,84.51)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(55.04,72.47)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n  <g transform=\"translate(57.63,58.09)\">\n    <circle cx=\"0\" cy=\"0\" r=\"2.77\" class=\"primitive\"/>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-06f2568e-8\">\n  <g transform=\"translate(8.33,15.6)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UCSB</text>\n    </g>\n  </g>\n  <g transform=\"translate(9.71,25.6)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">SRI</text>\n    </g>\n  </g>\n  <g transform=\"translate(22.58,20.23)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UCLA</text>\n    </g>\n  </g>\n  <g transform=\"translate(20.23,8.33)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">STAN</text>\n    </g>\n  </g>\n  <g transform=\"translate(91.67,38.69)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">UTAH</text>\n    </g>\n  </g>\n  <g transform=\"translate(49.43,19.51)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">SDC</text>\n    </g>\n  </g>\n  <g transform=\"translate(42.35,28.76)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">RAND</text>\n    </g>\n  </g>\n  <g transform=\"translate(76.78,40.21)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">MIT</text>\n    </g>\n  </g>\n  <g transform=\"translate(58.32,41.93)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">BBN</text>\n    </g>\n  </g>\n  <g transform=\"translate(40.44,91.67)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">LINC</text>\n    </g>\n  </g>\n  <g transform=\"translate(49.67,84.51)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">CASE</text>\n    </g>\n  </g>\n  <g transform=\"translate(55.04,72.47)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">CARN</text>\n    </g>\n  </g>\n  <g transform=\"translate(57.63,58.09)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\">HARV</text>\n    </g>\n  </g>\n</g>\n<g font-family=\"Helvetica\" font-size=\"4\" fill=\"#000000\" id=\"img-06f2568e-9\">\n  <g transform=\"translate(50,0)\">\n    <g class=\"primitive\">\n      <text text-anchor=\"middle\" dy=\"0.35em\"></text>\n    </g>\n  </g>\n</g>\n</svg>\n","content_type":"image/svg+xml"},"text/html":{"content_type":"text/html","hash":"5594b3fdf36b50c1bf9779164dd17bf1","path":"/build/5594b3fdf36b50c1bf9779164dd17bf1.html"},"text/plain":{"content":"Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([]), List([Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}}(Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}[Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}((-1.2cx, -1.2cy), 2.4cx, 2.4cy)], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.8320502943378437mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.7240181535520522cx, -0.7359172468078299cy), (-0.8446800404284641cx, -0.7751068708812073cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.7220640037608728cx, -0.6878025381647993cy), (-0.816279803108755cx, -0.6484979716331293cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.6715050142166779cx, -0.7825223937688603cy), (-0.6828136610679094cx, -0.8397873322323528cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.24721065231507144cx, -0.5372025661532454cy), (-0.5081297976589654cx, -0.6497951918121725cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.14143422510094256cx, -0.5648136497142359cy), (-0.11293625363988335cx, -0.6020881744736485cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.7116448520777986cx, -0.24207929471342726cy), (0.8375288554472768cx, -0.25486325110264174cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.14624732893795342cx, -0.23782432012156707cy), (-0.05754440165080266cx, -0.4058445677679924cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.2687835531063033cx, -0.2001624107768032cy), (0.48006266838117984cx, -0.21989090192939897cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.0626694362389883cx, 0.8707710251655282cy), (-0.10039708772857428cx, 0.8999949572148791cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.09264914815490916cx, 0.6027287885227649cy), (0.05860646939871855cx, 0.6791387787765284cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.13318330683011975cx, 0.4711579240437894cy), (0.1541742970235725cx, 0.3548634506561622cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.18614059141857695cx, 0.12487924071161349cy), (0.19277860670489158cx, -0.030557888501149377cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.8320502943378437mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.SimplePolygonPrimitive}(Compose.SimplePolygonPrimitive[Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.8552451913516793cx, -0.742577570698529cy), (-0.9340535581510339cx, -0.8041343844758713cy), (-0.8341148895052489cx, -0.8076361710638856cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.8031114855267883cx, -0.6169325919195003cy), (-0.9030049711084616cx, -0.6123183164244685cy), (-0.8294481206907217cx, -0.6800633513467582cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.7163676613216964cx, -0.8331611077135207cy), (-0.7010190633096373cx, -0.9319761902620073cy), (-0.6492596608141223cx, -0.846413556751185cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.5216808961406136cx, -0.6183922379010229cy), (-0.5944087044340228cx, -0.6870265288993068cy), (-0.49457869917731706cx, -0.6811981457233219cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.14010702894323954cx, -0.6228613965111572cy), (-0.05586229516251088cx, -0.676739266088695cy), (-0.08576547833652717cx, -0.5813149524361397cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.834073295545398cx, -0.28889025347090275cy), (0.9310172761058028cx, -0.26435732390462663cy), (0.8409844153491556cx, -0.2208362487343808cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.07930166351323323cx, -0.3794551884525417cy), (-0.13004862543342618cx, -0.46562215344418156cy), (-0.035787139788372085cx, -0.432233947083443cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.476882838752841cx, -0.25394477788999775cy), (0.5736249236278336cx, -0.22862741203097267cy), (0.48324249800951863cx, -0.18583702596880017cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.07945261886885571cx, 0.9270339477394788cy), (-0.17468610363975928cx, 0.9575394124694264cy), (-0.12134155658829285cx, 0.8729559666902795cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.08984810558726603cx, 0.6930577569239195cy), (0.020364391236879192cx, 0.764974468751379cy), (0.027364833210171084cx, 0.6652198006291373cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.12051617477279224cx, 0.3487882065494089cy), (0.17086589302455196cx, 0.2623885197909003cy), (0.18783241927435276cx, 0.3609386947629155cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.1586077378583466cx, -0.032017171433733255cy), (0.19678795361076132cx, -0.12444157906017717cy), (0.22694947555143657cx, -0.0290986055685655cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, -0.8255530472528335cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.9669972631662483cx, -0.5856222705584002cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.658071711703086cx, -0.7144985840308676cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.7144523658232291cx, -1.0cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, -0.2713627583543421cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.013748875217445167cx, -0.7318224047812463cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.1835476450460083cx, -0.5097305110216845cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.6426621281836014cx, -0.2350738602637118cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.19974634855053552cx, -0.1937159625440641cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.22950207589466698cx, 1.0cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-0.0078534639840806cx, 0.8283104376349546cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.12086700337586898cx, 0.5393928196391893cy), 0.06656402354702749cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.18318219647880274cx, 0.19415362419550042cy), 0.06656402354702749cx)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, -0.8255530472528335cy), \"UCSB\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.9669972631662483cx, -0.5856222705584002cy), \"SRI\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.658071711703086cx, -0.7144985840308676cy), \"UCLA\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.7144523658232291cx, -1.0cy), \"STAN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, -0.2713627583543421cy), \"UTAH\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.013748875217445167cx, -0.7318224047812463cy), \"SDC\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.1835476450460083cx, -0.5097305110216845cy), \"RAND\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.6426621281836014cx, -0.2350738602637118cy), \"MIT\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.19974634855053552cx, -0.1937159625440641cy), \"BBN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.22950207589466698cx, 1.0cy), \"LINC\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.0078534639840806cx, 0.8283104376349546cy), \"CASE\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.12086700337586898cx, 0.5393928196391893cy), \"CARN\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.18318219647880274cx, 0.19415362419550042cy), \"HARV\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0cx, -1.2cy), \"\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))","content_type":"text/plain"}}}],"visibility":"show","key":"TAGJLul6CS"}],"visibility":"show","key":"zdxG9yCg3d"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice that arrows only flow ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MVzJPJWyXj"},{"type":"emphasis","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"out","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"htWRBk2Jz4"}],"key":"OlAcWWAMcQ"},{"type":"text","value":" of ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"POLfTUHixz"},{"type":"inlineCode","value":"CARN","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V6Uny4IGhu"}],"key":"Xd3aJp7jum"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"They also always flow ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"DHKxjonTXm"},{"type":"emphasis","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"away","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"FRAuQehd9f"}],"key":"wON6FvsqoR"},{"type":"text","value":" from ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Rm20rnkbFW"},{"type":"inlineCode","value":"CARN","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ayT9usiaHy"}],"key":"f1roK0149M"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The use of directed edges allows Graphs to represent the shortest path from CARN to any other node","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aI6EyuJ4BT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HHH8tU68Xl"},{"type":"inlineCode","value":"STAN","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Qr5FrWty9t"},{"type":"text","value":": ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ydH4odrn4G"},{"type":"inlineCode","value":"CARN -> HARV -> BBN -> RAND -> UCLA -> STAN","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"brF4wQX8bl"}],"key":"ivf5UbuXmp"}],"key":"Jqzz7Ihrq0"}],"key":"aOOVkI3vRj"}],"key":"WdYIxabB5p"}],"key":"QNsbMaymut"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercise: Explore DiGraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gq8RXG4Edc"}],"identifier":"exercise-explore-digraph","label":"Exercise: Explore DiGraph","html_id":"exercise-explore-digraph","implicit":true,"key":"tFe6eBeq2T"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EavFC36YIt"},{"type":"inlineCode","value":"bfs_carn","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZM1hZMgJ6B"},{"type":"text","value":" object has type $(Markdown.Code(string(typeof(bfs_carn))))","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JD1RXbywEt"}],"key":"HyCiWeasz9"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Let’s view the names of its properties (properties)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pyCxg2ivII"}],"key":"EsNE3NqJJf"}],"key":"hMfEaUYnAL"}],"visibility":"show","key":"eJL1EPD0QY"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"propertynames(bfs_carn)","key":"iWNGUcxbpe"},{"type":"output","id":"qSXAokf3dvE5_93yzd6b-","data":[{"output_type":"execute_result","execution_count":29,"metadata":{},"data":{"text/plain":{"content":"(:ne, :fadjlist, :badjlist)","content_type":"text/plain"}}}],"key":"qqBO9ZRecb"}],"key":"REWafQg8kP"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"bfs_carn.fadjlist","key":"HXf413l5st"},{"type":"output","id":"wJ83lkvA2YugfnDa50V7H","data":[{"output_type":"execute_result","execution_count":30,"metadata":{},"data":{"text/plain":{"content":"13-element Vector{Vector{Int64}}:\n []\n []\n [1, 2, 4]\n []\n []\n []\n [3, 6]\n [5]\n [7, 8]\n []\n [10]\n [11, 13]\n [9]","content_type":"text/plain"}}}],"key":"GqB5ZnO0bT"}],"key":"F4avl13YSq"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"a42uoZUhuK"},{"type":"inlineCode","value":"fadjlist","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d22lIxEXDu"},{"type":"text","value":" (forward adjacency list) property is a ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RaR9TvklJq"},{"type":"inlineCode","value":"Vector{Vector{Int64}}","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q4PDk44iJX"}],"key":"rMPeV18D9h"},{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"inlineCode","value":"fadjlist","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"wwNJrYHvBx"},{"type":"text","value":" has one element per node (call index into outer Vector ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"S2EUADdEoI"},{"type":"inlineCode","value":"i","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IThsmzlq3N"},{"type":"text","value":" for node ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"FtUCiAAVqU"},{"type":"inlineCode","value":"i","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AGTcNgdU70"},{"type":"text","value":")","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cgRj7NYd8G"}],"key":"L1BlY2UVA0"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Each element is itself a vector containing node indices for all nodes ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"L9VaOxyHsP"},{"type":"inlineCode","value":"j","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tHkPMiKLhs"},{"type":"text","value":" for which there is an edge flowing from ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"j8sVp2qOzu"},{"type":"inlineCode","value":"i","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PYJqQx8SOa"},{"type":"text","value":" to ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ci3lWMB6UA"},{"type":"inlineCode","value":"j","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GKy1Rskvbu"}],"key":"R97AYPrOSt"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Below we have set up a new ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"P2LfhVOTXu"},{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"method","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"n9hK6WI3JN"}],"key":"X2FkThH26Z"},{"type":"text","value":" (see below) for the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BVTxBM0NLK"},{"type":"inlineCode","value":"breadth_first_distances","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"q19a7ijoql"},{"type":"text","value":" ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Dre7jX5kTU"},{"type":"strong","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"function","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pmsF9MMtBn"}],"key":"ZBFCgw4zfj"},{"type":"text","value":" that takes a ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"u7hjEzLUIr"},{"type":"inlineCode","value":"DiGraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uuOH7sQ4n8"},{"type":"text","value":" as an argument","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"TTnLGkrApL"}],"key":"kDpdR4OwRF"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Your task is to implement the the method so that it has the same return value as the previous method from above","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lUCJAdZ7Ca"}],"key":"qexRcKp0Mj"}],"key":"w79JdybhZ2"}],"key":"nGdoHwd1Tu"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"function breadth_first_distances(g::SimpleDiGraph, start::Int)\n\tout = Vector{Int}[]\n\t# use push!(out, new_nodes) to add to out\n\tdistance = 0\n\n\t# TODO: your code here...\n\n\t# return out\n\tout\nend","key":"c8Gq7e98bs"},{"type":"output","id":"aqPuYnrW0MgYVVD1FCPNS","data":[{"output_type":"execute_result","execution_count":31,"metadata":{},"data":{"text/plain":{"content":"breadth_first_distances (generic function with 2 methods)","content_type":"text/plain"}}}],"key":"q0GERUg5KS"}],"key":"XQGsDYJ8Nl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# test code\nfunction test_digraph_ex()\n\tval = breadth_first_distances(\n\t\tbfs_tree(arpa, node_ints[\"HARV\"]),\n\t\tnode_ints[\"HARV\"]\n\t)\n\twant = [[9, 12], [7, 8, 11], [3, 6, 5, 10], [1, 2, 4]]\n\ttest_bfd_methods(val, want)\nend","key":"FUwTorIDkb"},{"type":"output","id":"y7UZZ0cOUrF1s_LrDWk09","data":[{"output_type":"execute_result","execution_count":32,"metadata":{},"data":{"text/plain":{"content":"test_digraph_ex (generic function with 1 method)","content_type":"text/plain"}}}],"key":"ZZdlYss9MK"}],"key":"Us9O7W36jy"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment the code below when you are ready to test your code!\n# test_digraph_ex()","key":"CTwJ3oa6e8"},{"type":"output","id":"MuzYKmbAD9jrbKOW2Uvuq","data":[],"key":"Au308RAMSn"}],"key":"oAoB38tkGL"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Components","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CbavuPGYQd"}],"identifier":"components","label":"Components","html_id":"components","implicit":true,"key":"uY68Nf9IRr"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HPlQJUTAUj"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"component","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zBE45rioYQ"}],"key":"svaaWvydbC"},{"type":"text","value":" of a graph is a self-contained subset of the nodes","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pToyD4AKKn"}],"key":"j21j7bZ0kG"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"More precisely, a set of nodes is a component if","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"gDD6tviW6r"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Every node in the subset has a path to every other node in the subset","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DxhHNdEKa9"}],"key":"FMLdJscDJ3"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The subset is not part of a larger set with property (1)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"aXglxUk8zz"}],"key":"vL5hBtm9m1"}],"key":"n5cVj00Mrn"}],"key":"cBUpCDEcUh"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Example:","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"VSLBD96udA"}],"key":"WWJuArq47J"}],"key":"cDB8o3lZMh"},{"type":"image","url":"/build/3c71f9a9623dbfd292f88b8fd72919eb.png","alt":"components","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BpTrQetGCu","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/graph_components.png","urlOptimized":"/build/3c71f9a9623dbfd292f88b8fd72919eb.webp"}],"visibility":"show","key":"fCHS5yWO5H"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Example","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W0542TvkVi"}],"identifier":"example","label":"Example","html_id":"example","implicit":true,"key":"OpsmFgtyDf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"How many components are in this graph?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X9TLea0zgF"}],"key":"JIfjZqyb6Y"}],"key":"NzwMhhpcbi"},{"type":"image","url":"/build/67da0f12ba55fc4f00f8d721fc624b55.png","alt":"hs dating","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"h2v8IB0HoA","urlSource":"https://ucf-cap-6318-resources.s3.amazonaws.com/images/hs_dating_graph.png","urlOptimized":"/build/67da0f12ba55fc4f00f8d721fc624b55.webp"}],"visibility":"show","key":"Kl9BLCpiBg"}],"key":"wsG4sPHSzL"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Julia Types and Methods","url":"/l02-01-julia-types-methods","group":"Julia 2"},"next":{"title":"Strong and Weak Ties","url":"/l03-02-strong-weak-ties","group":"Graph Theory 1"}}},"domain":"http://localhost:3001"}