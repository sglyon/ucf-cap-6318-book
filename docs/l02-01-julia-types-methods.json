{"kind":"Notebook","sha256":"de47e1850dd85407547cf4d622d4200fa532dc4014693dc3851dad843b3a0d50","slug":"l02-01-julia-types-methods","location":"/week02/L02.01_julia_types_methods.ipynb","dependencies":[],"frontmatter":{"title":"Julia Types and Methods","content_includes_title":false,"kernelspec":{"name":"julia-1.10","language":"julia","display_name":"Julia 1.10.4"},"authors":[{"nameParsed":{"literal":"Spencer Lyon","given":"Spencer","family":"Lyon"},"name":"Spencer Lyon","orcid":"0009-0001-6461-885X","email":"spencer.lyon@ucf.edu","affiliations":["University of Central Florida","Valorum Data"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"affiliations":[{"id":"University of Central Florida","name":"University of Central Florida"},{"id":"Valorum Data","name":"Valorum Data"}],"exports":[{"format":"ipynb","filename":"L02.01_julia_types_methods.ipynb","url":"/build/L02.01_julia_types_m-61d0ae6ed139a627568b7c1e3640448c.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Computational Analysis of Social Complexity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YWUmOsTNqS"}],"key":"rLNeSspTC0"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fall 2024, Spencer Lyon","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PIczuEBn6Z"}],"key":"mdDgNumu0E"}],"key":"elYaALUrYA"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"PjSDuIN9nG"}],"key":"nmF9RjVL4a"}],"key":"R1Veq7LLnW"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Laptop or personal computer with internet connection","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ibBeBU2M4I"}],"key":"ClFBXmS4cU"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Julia intro lecture","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"QaZz3hqeUD"}],"key":"cQxj8yM75R"}],"key":"UgBdTyGMSl"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Outcomes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"J1vEvvvpyb"}],"key":"tNVd4dCfXY"}],"key":"TC58xlHd5J"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Understand key components of Julia’s type system: abstract types, primitive types, composite types, and parametric types","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"gJ3LVnrXMN"}],"key":"TbKXhZjrl6"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Be able to define our own custom types to hold data","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"rCFexl8ukP"}],"key":"pfECImrq7I"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Understand the concept of multiple dispatch","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"C8jgE7GXZv"}],"key":"PIYXpuLZRL"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Be able to leverage the mulitple dispatch system to define custom behavior for built-in and custom types","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"GHFqTKDHeh"}],"key":"Kx95D1bdkx"}],"key":"QzIE7qdOPi"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"nIxbhPoE30"}],"key":"O0VrlR5Ogg"}],"key":"yHH1KNyOPs"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Lecture notes","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"omR0Lv0Duu"}],"key":"blt96gGJTC"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Julia documentation on ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Sp1EiE73lm"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/types/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"h1DOW4OdWj"}],"urlSource":"https://docs.julialang.org/en/v1/manual/types/","key":"bHoGiUeoJZ"},{"type":"text","value":" and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"neCG3Vqj7C"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/methods/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"methods","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"s3i4huk04d"}],"urlSource":"https://docs.julialang.org/en/v1/manual/methods/","key":"rfp2jKylnx"},{"type":"text","value":" (these are technical, but comprehensive and well-written)","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Ni3LHOXGfx"}],"key":"kkUZ5cXggJ"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"QuantEcon lectures on ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"anweW2irJr"},{"type":"link","url":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"types and generic programming","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"DGas6fDFRa"}],"urlSource":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","key":"aNzoPX78L0"}],"key":"eKWGcyAvxB"}],"key":"G5nWkE0UZn"}],"visibility":"show","key":"pZSJN2qCqN"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types in Julia","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fSVrj9RpNH"}],"identifier":"types-in-julia","label":"Types in Julia","html_id":"types-in-julia","implicit":true,"key":"KfHiOye7Wo"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Julia is both very expressive and runtime efficient","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MlTia2pskz"}],"key":"HYuZXXnzRB"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This is made possible because of the underlying compiler technology","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Icn3XGGbNc"}],"key":"hKOFisPYag"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The main strategy for user interaction with the compiler is by defining custom types and methods that operate on those types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xJCBglFLji"}],"key":"ly8dWS95Xn"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Types and multiple dispatch go hand in hand and are key to effective Julia","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"aQpXdua3BL"}],"key":"z33LIfape6"}],"key":"oj71OAtBYl"}],"visibility":"show","key":"GgOeQWHbP4"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What is a type?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OnJrWr7OJW"}],"identifier":"what-is-a-type","label":"What is a type?","html_id":"what-is-a-type","implicit":true,"key":"nGjio5FwwP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Each piece of data in a program resides in memory (RAM) on the host computer","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"c8KLQ1w5tV"}],"key":"PIvpO92Gxg"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We often assign names to data, which we call variables (in ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ja1DFaLRmX"},{"type":"inlineCode","value":"x = \"hello\"","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MVLsH6D571"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MQMR05hgKt"},{"type":"inlineCode","value":"x","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oTaockG4hK"},{"type":"text","value":" is a variable)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YRqqJuXWkD"}],"key":"Steupj0abE"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"At its most basic level, a variable is composed of","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fdLYvV60w9"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"An arrangment of 0’s and 1’s called bits","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xsHxoGSQe7"}],"key":"NQdMCHMBzJ"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"An address to where in memory the data is recorded","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"KVe6cXH6hy"}],"key":"i9NyUDP4jH"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"xSeLkMgrGD"},{"type":"inlineCode","value":"Symbol","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"pVl6SIf0EU"},{"type":"text","value":" representing the name we gave the data","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Ki4Klsz0gr"}],"key":"yeMEMas2dp"}],"key":"lHaDfhAPGa"}],"key":"xGYYpjHvlo"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"WsiFbc9u5U"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"type","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"pR6Y2VPxWK"}],"key":"IIjXm1u8vQ"},{"type":"text","value":" in Julia represents what kind of object is represented at a certain memory address","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"M2B6xBs71h"}],"key":"mWGqi0jncO"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Julia uses this type information to enable syntax (e.g. the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"paZOkZ1aRo"},{"type":"inlineCode","value":"$","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"wIywoVwyfz"},{"type":"text","value":" in a string to interpolate or the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"krTkTB6nw9"},{"type":"inlineCode","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"V6ScuAN9ED"},{"type":"text","value":" access for an objects fields) and ultimiately decide what behaviors are defined to operate on the data","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"k26WaxokpU"}],"key":"UuHuj2Afjp"}],"key":"M1TsVbG70L"}],"visibility":"show","key":"xHHUA3bPeD"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Organizing types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CUUx3mXA84"}],"identifier":"organizing-types","label":"Organizing types","html_id":"organizing-types","implicit":true,"key":"guqr3ZkuKw"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In Julia types are organized into a hierarchy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gKhGaArwEH"}],"key":"m91LfY058t"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"At the top of the hierarcy is ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"AK3ayUudfP"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"eGi1fIGKg9"},{"type":"text","value":" -- all objects are instances of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"p1SwLdSFXg"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wLWxw8hWL3"}],"key":"hGKjud4mdV"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"At the bottom of the hierarchy is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NXUeTbMjsL"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"btcgfkxRxX"},{"type":"text","value":" -- no objects are instances of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BnDIP9sb2q"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"v8a0D81yFb"}],"key":"nKfmWv6W3o"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In between these endpoints we have a rich family of types","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"cXSnt8f9Y0"}],"key":"RUSRjcR8YC"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Each type can have at most one parent type (if not specified, default parent is ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JF8jKX8cju"},{"type":"inlineCode","value":"Any","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"cKY1XbH5dQ"},{"type":"text","value":")","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mGdwi7NWxt"}],"key":"pvF9Ky4YVh"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Types can actually come in a few different flavors...","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"zgi86DQaSG"}],"key":"iEiEk3346b"}],"key":"Mw88ojeOZ7"}],"visibility":"show","key":"OlnCF7DY0S"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types of Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PUAmMtjH9a"}],"identifier":"types-of-types","label":"Types of Types","html_id":"types-of-types","implicit":true,"key":"ejhAeBUDTa"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract Types: cannot be created directly, but serve as nodes in a type hierarchy. Help us organize types into families and provide shared behavior for all members of the family","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"g3Ri6PgGU9"}],"key":"C3I5rIgLd1"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Primitive types: provided to us by Julia and represent a collection of bits (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"cxegyNOIiJ"},{"type":"inlineCode","value":"Float64","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"br2RmfLpsp"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"oyaRpc5713"},{"type":"inlineCode","value":"Bool","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Horogv9UCT"},{"type":"text","value":", and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Bw4jVngNp5"},{"type":"inlineCode","value":"Int8","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"KLpYukUgpu"},{"type":"text","value":"). We ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MghpIxM7X9"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"could","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"bbjFfmOjfv"}],"key":"fCFk0jN5fS"},{"type":"text","value":" create them, but we won’t. We won’t say anything else about them here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"POKIFplqD1"}],"key":"vF0WJviVQu"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Composite Types: types that contain additional data called fields. An instance can be treated as a single value. This is what we typically define and use","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"oqIRRQl836"}],"key":"qMv0pDEmqj"}],"key":"vBVYfqiIfe"},{"type":"blockquote","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"NOTE: all objects in Julia are instances of either primitive or composite types, and can be related to one another by sharing common abstract type ancestors","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"r6O7JPWCMq"}],"key":"rhPPR4ksT2"}],"key":"KXEIvOXDZA"}],"visibility":"show","key":"eu14cDjJFh"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Abstract Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eP7WWQpxZE"}],"identifier":"abstract-types","label":"Abstract Types","html_id":"abstract-types","implicit":true,"key":"XgUQpaQbHh"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types help organize composite types into families","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"c4bzuVooTJ"}],"key":"BHFV3oF3bW"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example, the number system in Julia looks like this (really -- look ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wZdy8u8QwB"},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wM4F5w1Syd"}],"urlSource":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","data":{"kind":"file","org":"JuliaLang","repo":"julia","reference":"91f068c5c219275f1115056084417057a66240b7","file":"base/boot.jl","from":209,"to":214,"raw":"https://raw.githubusercontent.com/JuliaLang/julia/91f068c5c219275f1115056084417057a66240b7/base/boot.jl"},"internal":false,"protocol":"github","key":"Fk7x9ZfEoH"},{"type":"text","value":")","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"yrqemyqaEg"}],"key":"esKMRZtXuq"}],"key":"fSkNmqnAjS"},{"type":"code","lang":"julia","value":"abstract type Number end\nabstract type Real     <: Number end\nabstract type AbstractFloat <: Real end\nabstract type Integer  <: Real end\nabstract type Signed   <: Integer end\nabstract type Unsigned <: Integer end","position":{"start":{"line":5,"column":1},"end":{"line":12,"column":1}},"key":"wRY0ykscYF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"TJduytFVcm"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"inlineCode","value":"Number","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"GFPDHvfFkQ"},{"type":"text","value":"’s parent type is ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"LonnMavzmN"},{"type":"inlineCode","value":"Any","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"l7FFbLc9fo"}],"key":"HgNH1vopb4"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"inlineCode","value":"Real","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"SMLQ3Ljqv0"},{"type":"text","value":" is a special kind of ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mnSd94Thi9"},{"type":"inlineCode","value":"Number","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"ULI316F7KS"},{"type":"text","value":" and can be broken into two subgroups: ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mvgXpTWAfc"},{"type":"inlineCode","value":"AbstractFloat","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"l5bJJ3yjfs"},{"type":"text","value":" and ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"H8EZ9vzgis"},{"type":"inlineCode","value":"Integer","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mH55zauxri"}],"key":"h9nLlNuqtr"}],"key":"sZ1AnXbEo7"}],"key":"hN9fIZ6hdh"}],"key":"zk7QCJzrbz"}],"visibility":"show","key":"Yo5VHJhzQX"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why Abstract Types?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"m26PVMxEv1"}],"identifier":"why-abstract-types","label":"Why Abstract Types?","html_id":"why-abstract-types","implicit":true,"key":"FPbZUBSF9p"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We said before we can’t create an instance of abstract types...","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FPGSViInhV"}],"key":"ioV6z2aI2W"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"So, why do we have them?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"NPS2PMcwQu"}],"key":"raBt11uwLG"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The primary reason to have abstract types is to introduced shared functionality via methods defined on the abstract type","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HaL6zMHH33"}],"key":"hNN7dvINlc"}],"key":"fkzfbWNbMs"}],"visibility":"show","key":"zOXDm9Wt3q"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Example: suppose you needed to define a function ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Jr0ErYWyU0"},{"type":"inlineCode","value":"isint","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"M434NkSW0i"},{"type":"text","value":" to determine if an object is an integer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U35plwN8zP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Without abstract types, you could have a long sequence of checks for if a variable is any integer type:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"AzJxdX7tlG"}],"key":"qsY4rdYJiU"}],"key":"k3m9wVQv7e"}],"key":"cMkNmf896y"}],"key":"wIAhqz99KC"}],"visibility":"show","key":"ajRUihV8jw"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"function isint1(x)\n\tfor T in [\n\t\tInt8, UInt8, Int16, UInt16, \n\t\tInt32, UInt32, Int64, UInt64, \n\t\tInt128, UInt128\n\t]\n\t\tif isa(x, T)\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\nisint1(10), isint1(\"Hello\")","key":"hAW9Jf9BYH"},{"type":"output","id":"U78ehEMBmAtRXnQm2cUU9","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"vWDaCf9WTU"}],"key":"IlKsf2nnIh"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With abstract types we can define two methods:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VC2hWaZTk5"}],"key":"m0GQg7zf86"}],"visibility":"show","key":"Tr1PQP2hQg"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x) = false\nisint(x::Integer) = true\n\nisint(10), isint(\"Hello\")","key":"nCVh3uMJt7"},{"type":"output","id":"RW8Z3hXoKE6Uf1QnqItDb","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"fly3hZtgy5"}],"key":"jVGH0NHt77"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This has many benefits","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HcIhfXIPT0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Much simpler to write/reason about","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"hKplzDhC8P"}],"key":"kIJ0pvjWws"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"More “fool proof”: what if we forgot one of the “UIntXX” types?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xhEuF7PGKj"}],"key":"HgSr98d4J9"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"More “future proof”: what if a new type of integer gets introduced (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"b29aQHJCtd"},{"type":"inlineCode","value":"UInt256","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hFG7uU7beW"},{"type":"text","value":" like is widely used in blockchain data!)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RRY9nrOgCO"}],"key":"T4YrykNrOY"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Pushes work into the compiler:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eCbbUM7TOx"}],"key":"Uh04f17CSU"}],"key":"fYl3uxR8P4"}],"key":"qzkadL5Pd8"}],"key":"xC56b2sXBT"}],"visibility":"show","key":"VYGqGlIPlA"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(\"hello\")","visibility":"show","key":"KYXhHNVVWc"},{"type":"output","id":"frCx4eLgqMHvrjRlW3Jb3","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"aKyMm7LCom"}],"visibility":"show","key":"SfPmeWpIUd"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(UInt128(12341234123423134))","visibility":"show","key":"KXPW5ssvI4"},{"type":"output","id":"EFyorVg0U8GQxlIw8lcI9","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"MBBALHBb7K"}],"visibility":"show","key":"o2LaTM1Xji"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(\"hello\") ","visibility":"show","key":"xOkDb32igK"},{"type":"output","id":"X9Eqf2Oq7wUKGSHbedjwH","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"xR5MAHuZGu"}],"visibility":"show","key":"lMUj5iai1G"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","visibility":"show","key":"KmoH8ifIfS"},{"type":"output","id":"zIcnsuXjQqo9wIydT-sLR","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"visibility":"show","key":"gidB0ark5b"}],"visibility":"show","key":"D9OFYML1mb"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f2Gie0CkMF"}],"identifier":"composite-types","label":"Composite Types","html_id":"composite-types","implicit":true,"key":"matDDH2uoz"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types are very useful when used in conjunction with multiple dispatch (defining multiple methods of function with same name, but varying code depending on argument types)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rIdNxkA3lm"}],"key":"Bh3pAtb2Da"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"However, most often we create types to hold collections of related data together","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"h5EixKLCqN"}],"key":"ucUOfxSAHK"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We do this using composite types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"sSn6waedfp"}],"key":"DXJqy5N5ul"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"A composite type can be created as follows:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ILrdONIZGs"}],"key":"TEH2nOEBxu"}],"key":"lUpLafju2h"},{"type":"code","lang":"julia","value":"struct Name <: AbstractParentType\n    field1::Field1Type\n\t# more fields\nend","position":{"start":{"line":7,"column":1},"end":{"line":12,"column":1}},"key":"WjcT7mWAuD"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Note that the ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"NiuWIgtXY7"},{"type":"inlineCode","value":"<: AbstractParentType","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"qx3RJWqY3d"},{"type":"text","value":" is optional, as are types on all fields","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"tIcPIGRYSj"}],"key":"UBaEmeouUw"}],"key":"l8AFmMvIm5"}],"visibility":"show","key":"ZbOj5AHlmi"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types: Examples","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FlJ0dvG8CN"}],"identifier":"composite-types-examples","label":"Composite Types: Examples","html_id":"composite-types-examples","implicit":true,"key":"x2MD1M72QG"}],"visibility":"show","key":"hqzsVFAyAR"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"struct Foo\n   bar\n   baz::Int\n   qux::Float64\nend","key":"yKGBqTP2MH"},{"type":"output","id":"QKvqPiAuEqncdYrJv0OMy","data":[],"key":"Wra2E5SjqM"}],"key":"sRpEzmm6A3"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo = Foo(\"Hello, world.\", 23, 1.5)","key":"UOZ7pnnCs2"},{"type":"output","id":"Z5bNS0IqMhQNzC7ABOIDE","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"Foo(\"Hello, world.\", 23, 1.5)","content_type":"text/plain"}}}],"key":"nMfZLh4LE3"}],"key":"OMUVxHdY9f"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"typeof(foo)","key":"n3IJEQRqjF"},{"type":"output","id":"dzC2oIGmnrxvAFJKj0hjJ","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"Foo","content_type":"text/plain"}}}],"key":"P0obXWwyFp"}],"key":"PqIfI2u26v"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# this will not work. Uncomment and try it out\n# Foo((), 23.5, 1)","key":"Kbq5KvYgQj"},{"type":"output","id":"tj7ZHL4Ge5GrUIZm8NwMH","data":[],"key":"qQrJWAMsu3"}],"key":"fRAby4Ws7K"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"fieldnames(Foo)","key":"oUqyMWCU3J"},{"type":"output","id":"2KdnzCrhqMfrXBOuR6C1M","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"(:bar, :baz, :qux)","content_type":"text/plain"}}}],"key":"r9fnwNeBsB"}],"key":"ZrX6UbelZl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo.bar","key":"cPvskKinUv"},{"type":"output","id":"JGTfgIb4ZgdSj2hReFvCQ","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"\"Hello, world.\"","content_type":"text/plain"}}}],"key":"TGsU8I70II"}],"key":"tkQ2aqnEIk"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo.baz","key":"ppnDwLoAfN"},{"type":"output","id":"YgQJfFLXSKyWtbvttQYE7","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"23","content_type":"text/plain"}}}],"key":"sDFm0NQ8sh"}],"key":"inP4NMfx5s"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo.qux","key":"p5BZ8zHgkY"},{"type":"output","id":"nNUFxq_ZTnwjgYWnAwhng","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"1.5","content_type":"text/plain"}}}],"key":"TEW1USwq7G"}],"key":"IC89erA9TC"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types and Dispatch","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Q6W5Zl2wkZ"}],"identifier":"composite-types-and-dispatch","label":"Composite Types and Dispatch","html_id":"composite-types-and-dispatch","implicit":true,"key":"GjDBqbqR2g"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Above we saw an example of defining multiple methods of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"E8S5C46vuf"},{"type":"inlineCode","value":"isint","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fbOHYgveW2"},{"type":"text","value":", using an abstract type to route dispatch","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VGTnVKTa60"}],"key":"SXeRG83OH4"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We can also use composite types","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JHvhLV3LpC"}],"key":"nwZlFtwMHt"}],"key":"ODX1GWznxC"}],"visibility":"show","key":"O2N1MKXl5d"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x::Foo) = isint(x.bar)","key":"Jx99Xxjl5Z"},{"type":"output","id":"oonvpAYGC7KOoeu2M0DT4","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content":"isint (generic function with 3 methods)","content_type":"text/plain"}}}],"key":"s0O4GzQ6u0"}],"key":"H7XoBLxCdT"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(10), isint(1.0), isint(UInt128(234901324987213)), isint(Foo(\"not an int\", 12, 1.0))","key":"q13XHqVdMJ"},{"type":"output","id":"BaVwjXRJ_q0vg876kD3_c","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"(true, false, true, false)","content_type":"text/plain"}}}],"key":"HqphRVFp2w"}],"key":"rcycD6tnf1"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(Foo(\"not an int\", 12, 1.0))","key":"pv7ZcttWRV"},{"type":"output","id":"BO75m7A7pSyoRt_A4qHsS","data":[{"output_type":"execute_result","execution_count":26,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1 = Base.getproperty(x, :bar)\n\u001b[90m│  \u001b[39m %2 = Main.isint(%1)\n\u001b[90m└──\u001b[39m      return %2\n)","content_type":"text/plain"}}}],"key":"GuNyn0Pb2W"}],"key":"YCMDJE7JXo"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","key":"wLn1dFzJLT"},{"type":"output","id":"_akxVfLcP0J3KJqLjFdWp","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"key":"kuyjF5mZtl"}],"key":"OlpyD8ziq6"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(foo)","key":"T0pBdGoUc2"},{"type":"output","id":"vIlBUc1YBKXXpv4yiBa0d","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"false","content_type":"text/plain"}}}],"key":"anACYoqbSI"}],"key":"uMaI1KfSTb"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo, isint(foo)","key":"Qi2V2gpdNr"},{"type":"output","id":"3diGPY43oL0ckehVLs7Ph","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"(Foo(\"Hello, world.\", 23, 1.5), false)","content_type":"text/plain"}}}],"key":"mYW4yqnCGw"}],"key":"jQAcvr6kRj"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(Foo(1, 23, 1.5))","key":"VZUfJMvNnl"},{"type":"output","id":"y49NCLYIhISDPn1qy8tMs","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"true","content_type":"text/plain"}}}],"key":"k0bhScBFF3"}],"key":"ZEe9d8wotH"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pCKhrzZdRN"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"key":"kAg70li2TD"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create an abstract type called ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tCBJ5eEVuI"},{"type":"inlineCode","value":"Person","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EinjgoFfDc"}],"key":"wIYzfQWjkg"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Create two composite subtypes of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"iGBtkIDYv9"},{"type":"inlineCode","value":"Person","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YDPqDfan3h"},{"type":"text","value":" called ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"N7HnVxRKId"},{"type":"inlineCode","value":"Friend","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"kcuOX7ovbP"},{"type":"text","value":" and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"FOLmcvK5KO"},{"type":"inlineCode","value":"Foe","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Ydb70Peuzx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Each of these should have fields ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qUeZOWpTb3"},{"type":"inlineCode","value":"name","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"hA7z3uUHKl"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pBxIxiF10m"},{"type":"inlineCode","value":"height_inches","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"r0ZWgibkIo"}],"key":"ZLGBlSW83c"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"For friend you should also have a field ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"ZESpe570Iy"},{"type":"inlineCode","value":"favorite_color","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xlFhoPiFsf"}],"key":"ZdsAUtOVp3"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"MAKE SURE TO ADD TYPES FOR ALL FIELDS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"vOHdrKTrHK"}],"key":"au7hCU5BGM"}],"key":"mFXX0M4N5Y"}],"key":"f9vHYMTlDc"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Create a third composite subtype of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"FTZkFNtqn4"},{"type":"inlineCode","value":"Person","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"V8uU38ctP2"},{"type":"text","value":" called ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"PNW5xiJDhD"},{"type":"inlineCode","value":"Stranger","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"OOw0QVZ1Ej"},{"type":"text","value":", but without any fields","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"f7k2f8XgPf"}],"key":"DQwfM6nXhL"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Suppose we are trying to decide who to invite to a dinner party. Our rule is that friends should get a definite yes. Enemies a definite no. Strangers a 50%/50% toss up. However, if our spouse says we should invite a person, the answer is always yes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ET2mATD6uT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Create a function ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"PzQWUxF3f8"},{"type":"inlineCode","value":"should_invite_to_party","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"ZTbXsPmMGN"},{"type":"text","value":" that implements that logic","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"O7yjRwt4TE"}],"key":"g6Pk4Bu60a"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"HINT: you will need 4 methods. 3 of these have only one argument, the 4th has two","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"dkNS1fVut1"}],"key":"LGzEFMqIL0"}],"key":"Vj7UvVW3o8"}],"key":"nGXCCqvWoY"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"In the cell at the bottom we have written a test case. You will know you’ve done this correctly when all the tests pass","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"T4osL7wcYz"}],"key":"QYqSkXhUhC"}],"key":"sQFa1PBWaw"}],"visibility":"show","key":"ievDsWnosA"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# Your code here","key":"jxeYFzvypi"},{"type":"output","id":"cDpCqr1Z0e2LAJB5A39Tg","data":[],"key":"CXcNa0y1IG"}],"key":"z7KumUyZr5"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"using Test\n\nfunction tests()\n\t@testset \"people\" begin\n\t\n\t\t@test fieldnames(Friend) == (:name, :height_inches, :favorite_color)\n\t\t@test fieldnames(Foe) == (:name, :height_inches)\n\t\t@test fieldnames(Stranger) == tuple()\n\n\t\tjim = Friend(\"Jim\", 64, \"blue\")\n\t\tdwight = Foe(\"Dwight\", 61)\n\t\tcreed = Stranger()\n\n\t\t@test jim isa Person\n\t\t@test dwight isa Person\n\t\t@test creed isa Person\n\n\t\t@test should_invite_to_party(jim) \n\t\t@test !should_invite_to_party(dwight)\n\t\t@test should_invite_to_party(dwight, true)\n\t\t\n\t\tcreed_invites = map(i->should_invite_to_party(creed), 1:100)\n\t\t@test any(creed_invites)\n\t\t@test any(map(!, creed_invites))\n\n\t\tcreed_invites_spouse = map(i->should_invite_to_party(creed, true), 1:100)\n\t\t@test all(creed_invites_spouse)\t\n\tend\nend","key":"iS8k70jbbG"},{"type":"output","id":"4M-JgSAFuDQ-ZljdnSxhq","data":[{"output_type":"execute_result","execution_count":23,"metadata":{},"data":{"text/plain":{"content":"tests (generic function with 1 method)","content_type":"text/plain"}}}],"key":"Z8ZLGdIiNH"}],"key":"qtrv0jzq1X"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment and run this cell when you are ready to test your code\ntests()","key":"PqUpxOLHEP"},{"type":"output","id":"XFKxC7PdRQM_lTu04mldJ","data":[],"key":"eHbQdPQcfM"}],"key":"x9mpaMnszl"}],"key":"wdwceFhJ1q"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Julia Foundations","url":"/l01-03-julia-basics","group":"Julia 1"},"next":{"title":"Graphs","url":"/l03-01-graphs","group":"Graph Theory 1"}}},"domain":"http://localhost:3000"}