{"version":2,"kind":"Notebook","sha256":"f4dd3ae34cfea7085aa59122503ae08d494522b8270e0812d6faf6f78759dbb9","slug":"l02-01-julia-types-methods","location":"/week02/L02.01_julia_types_methods.ipynb","dependencies":[],"frontmatter":{"title":"Julia Types and Methods","content_includes_title":false,"kernelspec":{"name":"julia-1.10","display_name":"Julia 1.10.4","language":"julia"},"authors":[{"nameParsed":{"literal":"Spencer Lyon","given":"Spencer","family":"Lyon"},"name":"Spencer Lyon","orcid":"0009-0001-6461-885X","email":"spencer.lyon@ucf.edu","affiliations":["University of Central Florida","Valorum Data"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"affiliations":[{"id":"University of Central Florida","name":"University of Central Florida"},{"id":"Valorum Data","name":"Valorum Data"}],"numbering":{"title":{"offset":1}},"exports":[{"format":"ipynb","filename":"L02.01_julia_types_methods.ipynb","url":"/build/L02.01_julia_types_m-afe5826987ad038366545e6de9f21af0.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Computational Analysis of Social Complexity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"H13m5s4S67"}],"key":"dLkG0LhePF"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fall 2025, Spencer Lyon","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"YnZ28Sp3Cz"}],"key":"haG7PIYJdM"}],"key":"aoFywinsuV"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Pv6T2bAl9j"}],"key":"H11Fx6oJ62"}],"key":"Cr2OZGX335"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Laptop or personal computer with internet connection","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"XYrRoxfpYh"}],"key":"MH7CXtUdBf"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Julia intro lecture","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"TVlwwXwqfR"}],"key":"J6CAuJZtiZ"}],"key":"UmqdJP0T2I"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Outcomes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"pmwbBm8JWC"}],"key":"YrgBxtf2af"}],"key":"JPlb7GrYOt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Understand key components of Julia’s type system: abstract types, primitive types, composite types, and parametric types","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"P5rJfyKvlz"}],"key":"MeG3Te1lDM"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Be able to define our own custom types to hold data","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"rNKHqFZK10"}],"key":"LSiLx0dmPR"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Understand the concept of multiple dispatch","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"dj8KfNpBcB"}],"key":"w5aHfI2uAD"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Be able to leverage the mulitple dispatch system to define custom behavior for built-in and custom types","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"h9scXdEGXr"}],"key":"BD6cv3eANJ"}],"key":"qpOmm8JBR5"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"tFwxeeWF3l"}],"key":"GGIz39SHqw"}],"key":"asQKa6NQNF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Lecture notes","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"x4ptDQWup5"}],"key":"WI2Ar0hDGo"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Julia documentation on ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"luytdw9nEM"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/types/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"jnP3cYpJFD"}],"urlSource":"https://docs.julialang.org/en/v1/manual/types/","key":"MYHZy8p949"},{"type":"text","value":" and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"qva4KdQdzS"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/methods/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"methods","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"CMR3eJuSP7"}],"urlSource":"https://docs.julialang.org/en/v1/manual/methods/","key":"HASpa3O8RB"},{"type":"text","value":" (these are technical, but comprehensive and well-written)","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"M1G1IvDrnL"}],"key":"UGD7EsehOe"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"QuantEcon lectures on ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"vmNn4oUVs2"},{"type":"link","url":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"types and generic programming","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"WFFAbpJSIB"}],"urlSource":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","key":"hbjDS2K98l"}],"key":"qb7ijUtaPo"}],"key":"KSpyWf7KAB"}],"visibility":"show","key":"shaqsNxnTC"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types in Julia","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IQU8zmQRWQ"}],"identifier":"types-in-julia","label":"Types in Julia","html_id":"types-in-julia","implicit":true,"key":"Y1y3z2t74G"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Julia is both very expressive and runtime efficient","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yxxi4Es6wZ"}],"key":"aIUfXierIr"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This is made possible because of the underlying compiler technology","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Jd3FEhvfiy"}],"key":"n6pbjyMEYQ"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The main strategy for user interaction with the compiler is by defining custom types and methods that operate on those types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AvPfXupLrj"}],"key":"Krb2hDZ735"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Types and multiple dispatch go hand in hand and are key to effective Julia","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"UaqVA8hT9E"}],"key":"HoiGOASNSM"}],"key":"xXUyeLNxHh"}],"visibility":"show","key":"ZT45qnL9UE"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What is a type?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"V0h5ODfFhG"}],"identifier":"what-is-a-type","label":"What is a type?","html_id":"what-is-a-type","implicit":true,"key":"eORHezisqI"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Each piece of data in a program resides in memory (RAM) on the host computer","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wpa9Q1MURo"}],"key":"maajdqKX2s"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We often assign names to data, which we call variables (in ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hSqJOyZfkK"},{"type":"inlineCode","value":"x = \"hello\"","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YQ99qvGBkH"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qyoj6A6frU"},{"type":"inlineCode","value":"x","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Rg9NoyUCUa"},{"type":"text","value":" is a variable)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"KGMQUCCNUG"}],"key":"mhD74UfXU8"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"At its most basic level, a variable is composed of","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"msFrfMd61p"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"An arrangment of 0’s and 1’s called bits","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"wrrTVN6dRt"}],"key":"qZu89d7ML9"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"An address to where in memory the data is recorded","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"M6hgxrE4GQ"}],"key":"nzvk3lljXF"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"x6ql6hAeBM"},{"type":"inlineCode","value":"Symbol","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"HNydxvCoPA"},{"type":"text","value":" representing the name we gave the data","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"FHI0drCQWT"}],"key":"SvjrDhgpbl"}],"key":"hUaJWSWLYN"}],"key":"zsAY6ylj4v"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"n8UDXI5Xhw"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"type","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"NkgMebF8iq"}],"key":"pH6C7woiAm"},{"type":"text","value":" in Julia represents what kind of object is represented at a certain memory address","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"PVpqBpImhX"}],"key":"lV1YugOhUS"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Julia uses this type information to enable syntax (e.g. the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"ywKqdZnIMY"},{"type":"inlineCode","value":"$","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"e077sjaaQ9"},{"type":"text","value":" in a string to interpolate or the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"BJu68pgxMs"},{"type":"inlineCode","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"XD4QRefzvZ"},{"type":"text","value":" access for an objects fields) and ultimiately decide what behaviors are defined to operate on the data","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"mF3Rcr1LqA"}],"key":"m4wJDTsgkI"}],"key":"JcXnNs4Bfx"}],"visibility":"show","key":"xEsWzJ2bGx"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Organizing types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O1Jpdvi71X"}],"identifier":"organizing-types","label":"Organizing types","html_id":"organizing-types","implicit":true,"key":"OqizrSdlvH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In Julia types are organized into a hierarchy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Zuo6K1GQlI"}],"key":"E6TZjCqxts"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"At the top of the hierarcy is ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XOvcishRGd"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"zMXixTQiuV"},{"type":"text","value":" -- all objects are instances of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Fg0rZUIxoN"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ogjWAWheWN"}],"key":"t9nBvJgjcg"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"At the bottom of the hierarchy is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ib2Y4WIGC2"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eykQk9vv2O"},{"type":"text","value":" -- no objects are instances of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ulj5YRvuD8"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"qj8PvKxGBV"}],"key":"S1EyRy1LcJ"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In between these endpoints we have a rich family of types","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"lPqKKLt3TN"}],"key":"wT3PyQvNzG"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Each type can have at most one parent type (if not specified, default parent is ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xwH1Y7akJt"},{"type":"inlineCode","value":"Any","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ZTt4c3RUeO"},{"type":"text","value":")","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Mwhd1UgECY"}],"key":"Ag4WNRgXvp"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Types can actually come in a few different flavors...","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"QnT2FlyM9C"}],"key":"zH0IzquFKx"}],"key":"EQRBaBS4Y4"}],"visibility":"show","key":"Wavmtx5smW"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types of Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jrmzkllQC6"}],"identifier":"types-of-types","label":"Types of Types","html_id":"types-of-types","implicit":true,"key":"fl8qn66EYp"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract Types: cannot be created directly, but serve as nodes in a type hierarchy. Help us organize types into families and provide shared behavior for all members of the family","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jgCnRXfa6N"}],"key":"jGYvVppFAM"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Primitive types: provided to us by Julia and represent a collection of bits (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RbHQlPrjQJ"},{"type":"inlineCode","value":"Float64","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"NIiYRqn9IC"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GepPR6iUG1"},{"type":"inlineCode","value":"Bool","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BalO5hETDX"},{"type":"text","value":", and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RYBl34Nlep"},{"type":"inlineCode","value":"Int8","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mFyXJWQGIn"},{"type":"text","value":"). We ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"jYPU1fDRNr"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"could","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"O0rIikymtc"}],"key":"Xfja08vBwQ"},{"type":"text","value":" create them, but we won’t. We won’t say anything else about them here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OMzojBi7CC"}],"key":"mUaoQ7kgUU"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Composite Types: types that contain additional data called fields. An instance can be treated as a single value. This is what we typically define and use","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DLTUKzmu9m"}],"key":"PIxBSD6rhN"}],"key":"VTAVegrNYX"},{"type":"blockquote","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"NOTE: all objects in Julia are instances of either primitive or composite types, and can be related to one another by sharing common abstract type ancestors","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"NECyP5Y2uJ"}],"key":"l2rvFE2EL1"}],"key":"yjBeHAq5VL"}],"visibility":"show","key":"DuF7PLejGx"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Abstract Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qBoB67xqsY"}],"identifier":"abstract-types","label":"Abstract Types","html_id":"abstract-types","implicit":true,"key":"yYwaeWlXqQ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types help organize composite types into families","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pTyYnssF6r"}],"key":"BY6s62HJpi"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example, the number system in Julia looks like this (really -- look ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"KygyrjYxGr"},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"KWGhtJXwkz"}],"urlSource":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","data":{"kind":"file","org":"JuliaLang","repo":"julia","reference":"91f068c5c219275f1115056084417057a66240b7","file":"base/boot.jl","from":209,"to":214,"raw":"https://raw.githubusercontent.com/JuliaLang/julia/91f068c5c219275f1115056084417057a66240b7/base/boot.jl"},"internal":false,"protocol":"github","key":"SSbq47mu1U"},{"type":"text","value":")","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"My6JdBkens"}],"key":"FnuGs3wKmS"}],"key":"hiK1uPiehz"},{"type":"code","lang":"julia","value":"abstract type Number end\nabstract type Real     <: Number end\nabstract type AbstractFloat <: Real end\nabstract type Integer  <: Real end\nabstract type Signed   <: Integer end\nabstract type Unsigned <: Integer end","position":{"start":{"line":5,"column":1},"end":{"line":12,"column":1}},"key":"vJoch40ceF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"i7jblnbYzG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"inlineCode","value":"Number","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"x5KLvg52KC"},{"type":"text","value":"’s parent type is ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"HUWO3hwLm9"},{"type":"inlineCode","value":"Any","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"FBWrhpv4MM"}],"key":"Y6GpBziK0B"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"inlineCode","value":"Real","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mwAt3tMCRE"},{"type":"text","value":" is a special kind of ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"eS1qeUsZC8"},{"type":"inlineCode","value":"Number","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"aI3XRBhtse"},{"type":"text","value":" and can be broken into two subgroups: ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"PLQMCpipp6"},{"type":"inlineCode","value":"AbstractFloat","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mWUZ35kkyk"},{"type":"text","value":" and ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"c9IY9iefS5"},{"type":"inlineCode","value":"Integer","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"PDhZ03N6hP"}],"key":"LQZg7Hi3C5"}],"key":"rOYAMPC6ws"}],"key":"xaTQkQI52x"}],"key":"rwL2T3jm9f"}],"visibility":"show","key":"Wfx0Qk3mqa"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why Abstract Types?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bYiaIcEMdu"}],"identifier":"why-abstract-types","label":"Why Abstract Types?","html_id":"why-abstract-types","implicit":true,"key":"d9WX9wqzic"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We said before we can’t create an instance of abstract types...","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xU6NFVD5ER"}],"key":"E2N2tZcwdL"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"So, why do we have them?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"P9JrW3bDPF"}],"key":"odNxj1XusQ"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The primary reason to have abstract types is to introduced shared functionality via methods defined on the abstract type","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OlpA4Z4cK7"}],"key":"nYmP8r4a71"}],"key":"gzCbboDXiz"}],"visibility":"show","key":"JRYcKWp5lH"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Example: suppose you needed to define a function ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kBBnOWOz0W"},{"type":"inlineCode","value":"isint","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MbMVASE0Ti"},{"type":"text","value":" to determine if an object is an integer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"u361skFSZ6"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Without abstract types, you could have a long sequence of checks for if a variable is any integer type:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"SRaYZegVTj"}],"key":"i9E3DIpNwz"}],"key":"gfprVSvgvR"}],"key":"t1dN7LWFK6"}],"key":"ZJDL977Vtq"}],"visibility":"show","key":"DI2O4VySdh"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"function isint1(x)\n\tfor T in [\n\t\tInt8, UInt8, Int16, UInt16, \n\t\tInt32, UInt32, Int64, UInt64, \n\t\tInt128, UInt128\n\t]\n\t\tif isa(x, T)\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\nisint1(10), isint1(\"Hello\")","key":"ytDsJ7QptA"},{"type":"output","id":"CTJsYIYeVMtPf_q8Cxuxf","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"kzNFOGg2P4"}],"key":"T91urQeRFd"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With abstract types we can define two methods:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DZb12EsIXb"}],"key":"VvC16nLRI0"}],"visibility":"show","key":"jLnRJk0pPt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x) = false\nisint(x::Integer) = true\n\nisint(10), isint(\"Hello\")","key":"rs8oKZqQC6"},{"type":"output","id":"OFaEzqvaQkG4baUXqhRXi","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"IfCNo0HhUQ"}],"key":"OSW9dADHIh"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This has many benefits","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XwUngdoluM"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Much simpler to write/reason about","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"hmjMsmOly8"}],"key":"neeF42CerH"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"More “fool proof”: what if we forgot one of the “UIntXX” types?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vZFxBw4XDV"}],"key":"F4hRA4Y2cg"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"More “future proof”: what if a new type of integer gets introduced (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"CiMvHtj8Gr"},{"type":"inlineCode","value":"UInt256","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qfmt9fbD4K"},{"type":"text","value":" like is widely used in blockchain data!)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"EIa26yPM6i"}],"key":"e19F4vjlsX"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Pushes work into the compiler:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"C902693fbI"}],"key":"lWdKJJvaBL"}],"key":"tk4Ml8xDID"}],"key":"ziXsos0n1C"}],"key":"N6rg8v4s9l"}],"visibility":"show","key":"YVul1AF8Nx"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(\"hello\")","visibility":"show","key":"FaYsQm5Th6"},{"type":"output","id":"aodFsWVFOAWqOGktjrywe","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"joGmc4Dvlo"}],"visibility":"show","key":"aAifa21Nto"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(UInt128(12341234123423134))","visibility":"show","key":"Wy1rVciEFF"},{"type":"output","id":"h_Zl55oOrhBUZ-PTCPw3-","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"qts6fcxvWw"}],"visibility":"show","key":"oHW6FhsuR6"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(\"hello\") ","visibility":"show","key":"CAJ3aCz2vC"},{"type":"output","id":"RGKFIwaOinKLieKEOwzcD","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"l9xsNWAsMC"}],"visibility":"show","key":"wwZQVBcgwL"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","visibility":"show","key":"qKFoGhpoyZ"},{"type":"output","id":"gP86GnIlzE6N1Kq2m24EO","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"visibility":"show","key":"q4OxKSCH1D"}],"visibility":"show","key":"NAEgU1xTmt"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yJilR7WTzy"}],"identifier":"composite-types","label":"Composite Types","html_id":"composite-types","implicit":true,"key":"HtaBZDRDG8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types are very useful when used in conjunction with multiple dispatch (defining multiple methods of function with same name, but varying code depending on argument types)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"y6bLJ7UY7m"}],"key":"uOAC0i5HeW"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"However, most often we create types to hold collections of related data together","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"zGGN10cWdz"}],"key":"okRAGu48bm"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We do this using composite types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Af3nE69nrl"}],"key":"I4kRfphblL"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"A composite type can be created as follows:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"l4BU8MWFYy"}],"key":"LnMlAMUHEH"}],"key":"dZ0csYCmvA"},{"type":"code","lang":"julia","value":"struct Name <: AbstractParentType\n    field1::Field1Type\n\t# more fields\nend","position":{"start":{"line":7,"column":1},"end":{"line":12,"column":1}},"key":"sgjmEu8Opa"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Note that the ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"DGJZtl2Pt5"},{"type":"inlineCode","value":"<: AbstractParentType","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"eVmRnLlKhe"},{"type":"text","value":" is optional, as are types on all fields","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"OBh70YhK3D"}],"key":"bZOB5uLLb9"}],"key":"hXnOjHRAew"}],"visibility":"show","key":"O8efmBtyyy"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types: Examples","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sS2sFMgYV4"}],"identifier":"composite-types-examples","label":"Composite Types: Examples","html_id":"composite-types-examples","implicit":true,"key":"fhrTb9RorR"}],"visibility":"show","key":"U0SsSuRrh4"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"struct Foo\n   bar\n   baz::Int\n   qux::Float64\nend","key":"MRn0h6REdk"},{"type":"output","id":"b0CW7_mOcvb9oKDTbc1iY","data":[],"key":"Fiqdf45v5T"}],"key":"U0QN9mCtTF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo = Foo(\"Hello, world.\", 23, 1.5)","key":"ip5VHduKkl"},{"type":"output","id":"2_5a-JWp1f3sXztoIbtDW","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"Foo(\"Hello, world.\", 23, 1.5)","content_type":"text/plain"}}}],"key":"Tn1j981BpS"}],"key":"QQeDPgVSk7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"typeof(foo)","key":"XcY8Ew5oyT"},{"type":"output","id":"pZ25ODLTskDsjrWFFh114","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"Foo","content_type":"text/plain"}}}],"key":"YtVPvhKPxn"}],"key":"Rmv45OdTxt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# this will not work. Uncomment and try it out\n# Foo((), 23.5, 1)","key":"fYZ26lwyEF"},{"type":"output","id":"JF0i8L_9fR9MaslWX0YvE","data":[],"key":"aLkFLz3iQp"}],"key":"trj7ssZR1I"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"fieldnames(Foo)","key":"o77GsuavhL"},{"type":"output","id":"sqCoGjvMyP-iJc2oKyDtc","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"(:bar, :baz, :qux)","content_type":"text/plain"}}}],"key":"m2MrqVqjwL"}],"key":"VemKBAkcaH"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.bar","key":"GJSHA7laKv"},{"type":"output","id":"7eekyUuY8qrFzACGqu1bs","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"\"Hello, world.\"","content_type":"text/plain"}}}],"key":"UdIi53nd4m"}],"key":"ipW6jt1BzI"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.baz","key":"Tscec9k024"},{"type":"output","id":"mnQysO6qst5_s1Sfr-ZBy","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"23","content_type":"text/plain"}}}],"key":"xv0Gk2Wm2E"}],"key":"m3gHDmo7ae"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.qux","key":"Y7WGjBTYLG"},{"type":"output","id":"FDD2SzyiPEfi2pBUkFFhz","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"1.5","content_type":"text/plain"}}}],"key":"mkzHwbTAcb"}],"key":"cbxZYLLt6t"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types and Dispatch","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QxrXdL6twE"}],"identifier":"composite-types-and-dispatch","label":"Composite Types and Dispatch","html_id":"composite-types-and-dispatch","implicit":true,"key":"US5AWHekbT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Above we saw an example of defining multiple methods of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X8rxN02LJ2"},{"type":"inlineCode","value":"isint","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UCeEY0SL7s"},{"type":"text","value":", using an abstract type to route dispatch","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Iz1odOCuNq"}],"key":"HdU0Esk25T"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We can also use composite types","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hDeNjnRkdj"}],"key":"fIMiLSgFHO"}],"key":"jrSBWWzbVf"}],"visibility":"show","key":"sh1PCI3Px0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x::Foo) = isint(x.bar)","key":"ARQEJktutv"},{"type":"output","id":"Izo2BwY71mfy_3lajQvy4","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content":"isint (generic function with 3 methods)","content_type":"text/plain"}}}],"key":"LxCzJqqJck"}],"key":"Trqfkoe2ny"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(10), isint(1.0), isint(UInt128(234901324987213)), isint(Foo(\"not an int\", 12, 1.0))","key":"jW6Lp4WiG8"},{"type":"output","id":"5pRduDP7j-HFCB8W2Iazs","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"(true, false, true, false)","content_type":"text/plain"}}}],"key":"hOSbJ7z81E"}],"key":"imA8tjr9UB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(Foo(\"not an int\", 12, 1.0))","key":"LckXW0BVnd"},{"type":"output","id":"t87RBQJTtwJNtJR3IFE2m","data":[{"output_type":"execute_result","execution_count":26,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1 = Base.getproperty(x, :bar)\n\u001b[90m│  \u001b[39m %2 = Main.isint(%1)\n\u001b[90m└──\u001b[39m      return %2\n)","content_type":"text/plain"}}}],"key":"Qt3uGJyb7w"}],"key":"atVydQOKqN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","key":"ZAEdqGztGx"},{"type":"output","id":"iTVTtNK_CixIB-WyP30zA","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"key":"Nql8t8gZGs"}],"key":"ax7hihJHbF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(foo)","key":"pM8WAs7bLh"},{"type":"output","id":"3sNv4Ks7uKdxdmj55lAnu","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"false","content_type":"text/plain"}}}],"key":"TsDvisvAvB"}],"key":"daLelooGJM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo, isint(foo)","key":"q6frFep0dq"},{"type":"output","id":"TSSu1jQrc4EQ9Wju1l2o8","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"(Foo(\"Hello, world.\", 23, 1.5), false)","content_type":"text/plain"}}}],"key":"w6PQGjyjVr"}],"key":"CPNdxQYzXP"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(Foo(1, 23, 1.5))","key":"KdRDYR0EeZ"},{"type":"output","id":"Py3WFuxvXlsGtuLSNGECR","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"true","content_type":"text/plain"}}}],"key":"wSkrXIIedm"}],"key":"Fq9KyF6kQd"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"k7c2MxgxJA"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"key":"P5NidmoNcX"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create an abstract type called ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ts9hOhbqx0"},{"type":"inlineCode","value":"Person","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lUwXL4yuuI"}],"key":"hQLZ7BOJE7"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Create two composite subtypes of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"w8N5CiuwwI"},{"type":"inlineCode","value":"Person","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"f7gQ1sHt1a"},{"type":"text","value":" called ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wxzIvMGXwt"},{"type":"inlineCode","value":"Friend","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"o71o1Btech"},{"type":"text","value":" and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"bfjvEUffpt"},{"type":"inlineCode","value":"Foe","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"DAemcjrXjP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Each of these should have fields ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ed2HYSjc00"},{"type":"inlineCode","value":"name","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"U97ZPSwI81"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"pxVnug54XH"},{"type":"inlineCode","value":"height_inches","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"CC7IFOLPwJ"}],"key":"UKFDcCpU6z"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"For friend you should also have a field ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"zAx8W3eu8o"},{"type":"inlineCode","value":"favorite_color","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"sF4jea40H9"}],"key":"wOgEJmiu2n"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"MAKE SURE TO ADD TYPES FOR ALL FIELDS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"TRo1xR7TQH"}],"key":"wZCXYBCYoG"}],"key":"acjK1iOpeY"}],"key":"FrSqoud4Jo"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Create a third composite subtype of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"pfPBADyDNZ"},{"type":"inlineCode","value":"Person","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"q2YAVRreBB"},{"type":"text","value":" called ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"hdTnFvFwGa"},{"type":"inlineCode","value":"Stranger","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"hxJD5N1iT9"},{"type":"text","value":", but without any fields","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"KaN7w5ABtm"}],"key":"JmDXRGg8Gq"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Suppose we are trying to decide who to invite to a dinner party. Our rule is that friends should get a definite yes. Enemies a definite no. Strangers a 50%/50% toss up. However, if our spouse says we should invite a person, the answer is always yes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"INE7og4G1r"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Create a function ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"i4S3DoZnB8"},{"type":"inlineCode","value":"should_invite_to_party","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"WwWkMXrlZa"},{"type":"text","value":" that implements that logic","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"XWwUfsdsko"}],"key":"bKBL4lzgQV"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"HINT: you will need 4 methods. 3 of these have only one argument, the 4th has two","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"NYiIas80aE"}],"key":"r9qDO5lXST"}],"key":"xDFHWMheNl"}],"key":"fTnztVFiIh"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"In the cell at the bottom we have written a test case. You will know you’ve done this correctly when all the tests pass","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"iBV6Uazd8p"}],"key":"bA61L6U15X"}],"key":"XfaoS8gRmA"}],"visibility":"show","key":"hk14W3Kx5r"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# Your code here","key":"kSLqG4ZN52"},{"type":"output","id":"W_GzYJ8jUE9w_xz2xuwex","data":[],"key":"qjpcJuGCHz"}],"key":"UGYNp07Dy2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"using Test\n\nfunction tests()\n\t@testset \"people\" begin\n\t\n\t\t@test fieldnames(Friend) == (:name, :height_inches, :favorite_color)\n\t\t@test fieldnames(Foe) == (:name, :height_inches)\n\t\t@test fieldnames(Stranger) == tuple()\n\n\t\tjim = Friend(\"Jim\", 64, \"blue\")\n\t\tdwight = Foe(\"Dwight\", 61)\n\t\tcreed = Stranger()\n\n\t\t@test jim isa Person\n\t\t@test dwight isa Person\n\t\t@test creed isa Person\n\n\t\t@test should_invite_to_party(jim) \n\t\t@test !should_invite_to_party(dwight)\n\t\t@test should_invite_to_party(dwight, true)\n\t\t\n\t\tcreed_invites = map(i->should_invite_to_party(creed), 1:100)\n\t\t@test any(creed_invites)\n\t\t@test any(map(!, creed_invites))\n\n\t\tcreed_invites_spouse = map(i->should_invite_to_party(creed, true), 1:100)\n\t\t@test all(creed_invites_spouse)\t\n\tend\nend","key":"izWZ30M5so"},{"type":"output","id":"EMQa362ztTlddjLMEgP7a","data":[{"output_type":"execute_result","execution_count":23,"metadata":{},"data":{"text/plain":{"content":"tests (generic function with 1 method)","content_type":"text/plain"}}}],"key":"oFFEQhHy9D"}],"key":"OTHWSJRmhM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment and run this cell when you are ready to test your code\ntests()","key":"NdAguTutT5"},{"type":"output","id":"dkqc3SO840Om6E_WBArSL","data":[],"key":"I0zaAgKzIa"}],"key":"FOrwjzS3jy"}],"key":"KEvxyjnWIh"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Julia Foundations","url":"/l01-03-julia-basics","group":"Julia 1"},"next":{"title":"Julia Code Organization","url":"/l02-02-code-organization","group":"Julia 2"}}},"domain":"http://localhost:3000"}