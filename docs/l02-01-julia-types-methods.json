{"kind":"Notebook","sha256":"de47e1850dd85407547cf4d622d4200fa532dc4014693dc3851dad843b3a0d50","slug":"l02-01-julia-types-methods","location":"/week02/L02.01_julia_types_methods.ipynb","dependencies":[],"frontmatter":{"title":"Julia Types and Methods","content_includes_title":false,"kernelspec":{"name":"julia-1.10","language":"julia","display_name":"Julia 1.10.4"},"authors":[{"nameParsed":{"literal":"Spencer Lyon","given":"Spencer","family":"Lyon"},"name":"Spencer Lyon","orcid":"0009-0001-6461-885X","email":"spencer.lyon@ucf.edu","affiliations":["University of Central Florida","Valorum Data"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"affiliations":[{"id":"University of Central Florida","name":"University of Central Florida"},{"id":"Valorum Data","name":"Valorum Data"}],"exports":[{"format":"ipynb","filename":"L02.01_julia_types_methods.ipynb","url":"/build/L02.01_julia_types_m-61d0ae6ed139a627568b7c1e3640448c.ipynb"}]},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Computational Analysis of Social Complexity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uhDBetDxtK"}],"key":"ZxH8e54UX5"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fall 2024, Spencer Lyon","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Fw44D7lkjk"}],"key":"YAp6jNanGf"}],"key":"KAsU9E6yWu"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Oz1xjGu3rq"}],"key":"HyoFYMS6nA"}],"key":"goBpb6i9Hs"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Laptop or personal computer with internet connection","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"AtCMQCYVtK"}],"key":"XykFAv0rzb"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Julia intro lecture","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"dwnR01jRpO"}],"key":"R2AdgHDeVD"}],"key":"AoJfRyOxm8"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Outcomes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"RmVA2sNp0B"}],"key":"QfjVrIM1gq"}],"key":"Oy5TSQQT3N"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Understand key components of Julia’s type system: abstract types, primitive types, composite types, and parametric types","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"iR6wkYa1jk"}],"key":"NgX1bluLnT"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Be able to define our own custom types to hold data","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"YwyfsLAMzZ"}],"key":"cjZsU5yrfL"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Understand the concept of multiple dispatch","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"UMnnmJsL3P"}],"key":"rQihJedfMi"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Be able to leverage the mulitple dispatch system to define custom behavior for built-in and custom types","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"PvzuANseAd"}],"key":"b5GAI8dqeT"}],"key":"Q5ftDPGqEO"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"ECuGL255Hr"}],"key":"jt9vpmrQln"}],"key":"SGbwYGotGl"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Lecture notes","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"VQeqFdq6aC"}],"key":"Zoc8iCO5sj"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Julia documentation on ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"VulaAjEyyL"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/types/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"B15YDnW6Oe"}],"urlSource":"https://docs.julialang.org/en/v1/manual/types/","key":"s3D9d2yMJq"},{"type":"text","value":" and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"T2qXQv4YhW"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/methods/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"methods","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Cwx48kv6DN"}],"urlSource":"https://docs.julialang.org/en/v1/manual/methods/","key":"MmnYBkZcAh"},{"type":"text","value":" (these are technical, but comprehensive and well-written)","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"OMo0YL5TXh"}],"key":"v73m6vniF7"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"QuantEcon lectures on ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"Tz8M54T3gt"},{"type":"link","url":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"types and generic programming","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"lqnBLxZTJn"}],"urlSource":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","key":"UYzEDVw5QZ"}],"key":"Yrvc2Au5G9"}],"key":"rdb6x8QRhp"}],"visibility":"show","key":"atBtQ9KgKJ"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types in Julia","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Axxpag75do"}],"identifier":"types-in-julia","label":"Types in Julia","html_id":"types-in-julia","implicit":true,"key":"XHWWXHhjx9"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Julia is both very expressive and runtime efficient","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HnG8XsmYKq"}],"key":"ihCteRA5HQ"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This is made possible because of the underlying compiler technology","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"n9AoQJxcy4"}],"key":"uyLSCTtRWF"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The main strategy for user interaction with the compiler is by defining custom types and methods that operate on those types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rHJOwIeNXr"}],"key":"p6favsDsQl"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Types and multiple dispatch go hand in hand and are key to effective Julia","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"vNUgEjj2il"}],"key":"q3wX03ms5s"}],"key":"KCvsRWQyjO"}],"visibility":"show","key":"lPtdEPhwfC"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What is a type?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"K9qpNV7WGf"}],"identifier":"what-is-a-type","label":"What is a type?","html_id":"what-is-a-type","implicit":true,"key":"dOGg7Pc1H0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Each piece of data in a program resides in memory (RAM) on the host computer","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QoE5CEQXZa"}],"key":"RNZQsxuPMo"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We often assign names to data, which we call variables (in ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"DbPPfKko9T"},{"type":"inlineCode","value":"x = \"hello\"","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qYwO2WC0fz"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XKkThBqcy3"},{"type":"inlineCode","value":"x","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"fVfVVjqKm2"},{"type":"text","value":" is a variable)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JenjntWYe7"}],"key":"snCFdNuSiW"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"At its most basic level, a variable is composed of","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"t9eE9VjRes"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"An arrangment of 0’s and 1’s called bits","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"nBvi4SEzXZ"}],"key":"rgPGNsdakY"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"An address to where in memory the data is recorded","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"G0Wz6JnexH"}],"key":"hxx3gz3cTm"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"hB5oWBwipC"},{"type":"inlineCode","value":"Symbol","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"BxqQZcx4be"},{"type":"text","value":" representing the name we gave the data","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"GGc5MzjFVU"}],"key":"L1Xn6Ixd4b"}],"key":"NYoJkMcwCc"}],"key":"p8iQwCIG1L"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"O90YYBoX6M"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"type","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BF6IHcpH3g"}],"key":"u1ZetrDfuz"},{"type":"text","value":" in Julia represents what kind of object is represented at a certain memory address","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"yiWvXwLH7F"}],"key":"zJ0Uws1gEU"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Julia uses this type information to enable syntax (e.g. the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"RgfiYPaR2b"},{"type":"inlineCode","value":"$","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"FT9FQFO9Rl"},{"type":"text","value":" in a string to interpolate or the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"cRaeSBvkcR"},{"type":"inlineCode","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"lv8G3TCDhs"},{"type":"text","value":" access for an objects fields) and ultimiately decide what behaviors are defined to operate on the data","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"HJ8SewGMXD"}],"key":"pK2EVIPiR9"}],"key":"ZubiK27Gjw"}],"visibility":"show","key":"UhR9lQIFvY"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Organizing types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xX3n8PFfOw"}],"identifier":"organizing-types","label":"Organizing types","html_id":"organizing-types","implicit":true,"key":"BmHd6UevhN"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In Julia types are organized into a hierarchy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yRKLwYtE15"}],"key":"CFqXTY97JF"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"At the top of the hierarcy is ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"aiAKLWwwTP"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YlwECigau4"},{"type":"text","value":" -- all objects are instances of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Rj1jbvD0Ft"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SBnXwfrMBx"}],"key":"KJ76cYuU2g"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"At the bottom of the hierarchy is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PfAcgRwRFV"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PoERZOAdQO"},{"type":"text","value":" -- no objects are instances of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HJPpA2ntc3"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Z3kdIpMXjw"}],"key":"sdPTu6z37n"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In between these endpoints we have a rich family of types","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"FDwgFqKF10"}],"key":"dCUple8Z5x"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Each type can have at most one parent type (if not specified, default parent is ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sYAaUgBoWO"},{"type":"inlineCode","value":"Any","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"eTP7OPNbFi"},{"type":"text","value":")","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"dIHX56mWSl"}],"key":"OBgJ3CAN1P"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Types can actually come in a few different flavors...","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"nvvtAv97ZR"}],"key":"DF9hDGwc23"}],"key":"ut0BTzFLOM"}],"visibility":"show","key":"HPmhTT0CQY"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types of Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tonKquTAqw"}],"identifier":"types-of-types","label":"Types of Types","html_id":"types-of-types","implicit":true,"key":"LCftPdebZJ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract Types: cannot be created directly, but serve as nodes in a type hierarchy. Help us organize types into families and provide shared behavior for all members of the family","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ni1aYI4vbr"}],"key":"Q1tMacWGcg"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Primitive types: provided to us by Julia and represent a collection of bits (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"d9rffWslQV"},{"type":"inlineCode","value":"Float64","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"K68gqqpBHO"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"IJjCJeFrqQ"},{"type":"inlineCode","value":"Bool","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XZVIhZuDAx"},{"type":"text","value":", and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"nzjk8CW8IC"},{"type":"inlineCode","value":"Int8","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"lQBiZEKdkw"},{"type":"text","value":"). We ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"aVR96fijSR"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"could","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MgMK2WSkt6"}],"key":"eKGyJM1XM6"},{"type":"text","value":" create them, but we won’t. We won’t say anything else about them here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wj6oP4tlFv"}],"key":"hTw5Fuucjn"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Composite Types: types that contain additional data called fields. An instance can be treated as a single value. This is what we typically define and use","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"S9QIBvMNrw"}],"key":"iprFauHDhn"}],"key":"mq9EiSIFQ2"},{"type":"blockquote","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"NOTE: all objects in Julia are instances of either primitive or composite types, and can be related to one another by sharing common abstract type ancestors","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"SzsFs1DM70"}],"key":"zWdpBb2PS5"}],"key":"POsvWc5LOe"}],"visibility":"show","key":"DPb4DGTez8"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Abstract Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"POjO5096mp"}],"identifier":"abstract-types","label":"Abstract Types","html_id":"abstract-types","implicit":true,"key":"daY0CXrb37"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types help organize composite types into families","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QjVQtdbSjT"}],"key":"inI46OXmkT"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example, the number system in Julia looks like this (really -- look ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"No4Rmjo9lT"},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"P4SdrhiqG8"}],"urlSource":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","data":{"kind":"file","org":"JuliaLang","repo":"julia","reference":"91f068c5c219275f1115056084417057a66240b7","file":"base/boot.jl","from":209,"to":214,"raw":"https://raw.githubusercontent.com/JuliaLang/julia/91f068c5c219275f1115056084417057a66240b7/base/boot.jl"},"internal":false,"protocol":"github","key":"mO2ftI3yKw"},{"type":"text","value":")","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wDD6mzAM46"}],"key":"IsnoOpjkKO"}],"key":"ZuMbmsAJRv"},{"type":"code","lang":"julia","value":"abstract type Number end\nabstract type Real     <: Number end\nabstract type AbstractFloat <: Real end\nabstract type Integer  <: Real end\nabstract type Signed   <: Integer end\nabstract type Unsigned <: Integer end","position":{"start":{"line":5,"column":1},"end":{"line":12,"column":1}},"key":"oM3VcqgKT4"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"UZo630RQEf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"inlineCode","value":"Number","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"zV0s3yNDip"},{"type":"text","value":"’s parent type is ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"iCsprgTlbt"},{"type":"inlineCode","value":"Any","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"eBvGZMnNgZ"}],"key":"EB3eel2G0F"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"inlineCode","value":"Real","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"FDwXMpUJf9"},{"type":"text","value":" is a special kind of ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"hjLOK1zEYF"},{"type":"inlineCode","value":"Number","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"HLngHk4I4v"},{"type":"text","value":" and can be broken into two subgroups: ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"zrkfWmGbiF"},{"type":"inlineCode","value":"AbstractFloat","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Xkg427rYqx"},{"type":"text","value":" and ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"oHx0kDZJeV"},{"type":"inlineCode","value":"Integer","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"c9mYSsfZKg"}],"key":"R16EStDftg"}],"key":"DEnIldXMhb"}],"key":"aLOX6nf4An"}],"key":"DB01zQGvF2"}],"visibility":"show","key":"zak4kEIzR4"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why Abstract Types?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QEjZRCIowG"}],"identifier":"why-abstract-types","label":"Why Abstract Types?","html_id":"why-abstract-types","implicit":true,"key":"teJGMyqXtY"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We said before we can’t create an instance of abstract types...","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X8fRkOlssF"}],"key":"QiEUTAfR0g"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"So, why do we have them?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hByRKP0VFo"}],"key":"Ux8TPzZ5Kf"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The primary reason to have abstract types is to introduced shared functionality via methods defined on the abstract type","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"c6zosEHaUe"}],"key":"Y50FxKoBYq"}],"key":"TsN6Dkrcit"}],"visibility":"show","key":"SVvtmk6PjM"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Example: suppose you needed to define a function ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VN4DuH6fMM"},{"type":"inlineCode","value":"isint","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"q4LHuZRh1z"},{"type":"text","value":" to determine if an object is an integer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ijFf0GRlDF"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Without abstract types, you could have a long sequence of checks for if a variable is any integer type:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"aHHahs8PPv"}],"key":"bdZYFL0wsO"}],"key":"pBkkBMukX3"}],"key":"MdmHaxoaEP"}],"key":"USKSuFEsWB"}],"visibility":"show","key":"GjUKa6U50o"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"function isint1(x)\n\tfor T in [\n\t\tInt8, UInt8, Int16, UInt16, \n\t\tInt32, UInt32, Int64, UInt64, \n\t\tInt128, UInt128\n\t]\n\t\tif isa(x, T)\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\nisint1(10), isint1(\"Hello\")","key":"lEpPFj2XH5"},{"type":"output","id":"lxC0vqwKuc0JQPz6bpp_7","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"fl5Xj6GGsF"}],"key":"m647wkZhjS"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With abstract types we can define two methods:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sCO9gmpPgm"}],"key":"VkVFxCTZbR"}],"visibility":"show","key":"SnPfLmghk6"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x) = false\nisint(x::Integer) = true\n\nisint(10), isint(\"Hello\")","key":"E6vwhetUqg"},{"type":"output","id":"53m7BybjGIk0mWa3H66du","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"eBDt9uq3eQ"}],"key":"GGsHTuwJZJ"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This has many benefits","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L9XHk3ONL3"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Much simpler to write/reason about","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UI9kzePXyw"}],"key":"B6r5u3eTY9"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"More “fool proof”: what if we forgot one of the “UIntXX” types?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PH2aLvAVTr"}],"key":"NSv7Lm7S8N"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"More “future proof”: what if a new type of integer gets introduced (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OLfzPBCrcm"},{"type":"inlineCode","value":"UInt256","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"eo54NsVQji"},{"type":"text","value":" like is widely used in blockchain data!)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BgCvwzP6Ey"}],"key":"H1Pve4k1s8"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Pushes work into the compiler:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"yAC2pY0jjI"}],"key":"guRLXGVqts"}],"key":"EkCKmwBFTt"}],"key":"EcywBAvmkF"}],"key":"VpIsnmCmEm"}],"visibility":"show","key":"GfeV54afR3"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(\"hello\")","visibility":"show","key":"SNOeRJSwfD"},{"type":"output","id":"CJmnsG1GpmqZaLEJuAtdQ","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"VGrAcs6QQ5"}],"visibility":"show","key":"xNJAkDM96S"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(UInt128(12341234123423134))","visibility":"show","key":"zm4S2Ntash"},{"type":"output","id":"9-BhnnCvZzbBcI0mUH-ZL","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"cPyFFmszpr"}],"visibility":"show","key":"MPSgCWXTnY"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(\"hello\") ","visibility":"show","key":"Ubl656RM7c"},{"type":"output","id":"cr8QPkWFsmQjMTCxIwCzD","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"cpWQtIxZcs"}],"visibility":"show","key":"FcAHBhSPXQ"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","visibility":"show","key":"H0Sg1A9Juj"},{"type":"output","id":"OVf8K4Ygwj9A27fZaMMCw","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"visibility":"show","key":"G75Xa7WZmA"}],"visibility":"show","key":"QJEaHpjsQM"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vzY0udOzeY"}],"identifier":"composite-types","label":"Composite Types","html_id":"composite-types","implicit":true,"key":"spJ9hu9hNe"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types are very useful when used in conjunction with multiple dispatch (defining multiple methods of function with same name, but varying code depending on argument types)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yRjAMPb77B"}],"key":"NKShtQiDXJ"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"However, most often we create types to hold collections of related data together","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qwc9Q54goR"}],"key":"Sio1sBMXrf"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We do this using composite types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QjaDKCdaJv"}],"key":"u6ArzgvzEo"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"A composite type can be created as follows:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"n9tqFtFLnw"}],"key":"lRdrBTjUnS"}],"key":"uwUOqFdkbZ"},{"type":"code","lang":"julia","value":"struct Name <: AbstractParentType\n    field1::Field1Type\n\t# more fields\nend","position":{"start":{"line":7,"column":1},"end":{"line":12,"column":1}},"key":"aIvGZr9cmO"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Note that the ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"oGs5O8W8lO"},{"type":"inlineCode","value":"<: AbstractParentType","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"d030dBQO5R"},{"type":"text","value":" is optional, as are types on all fields","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"CbWvybIX8p"}],"key":"KmFRovK5gf"}],"key":"ohVHOiSrDC"}],"visibility":"show","key":"iC04hros7g"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types: Examples","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZpBNlzyNa1"}],"identifier":"composite-types-examples","label":"Composite Types: Examples","html_id":"composite-types-examples","implicit":true,"key":"ns5GTJyUDQ"}],"visibility":"show","key":"Z9VNs3dHZX"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"struct Foo\n   bar\n   baz::Int\n   qux::Float64\nend","key":"R1OQqU5J1K"},{"type":"output","id":"z02uK_2c57t5OgYKT3f_J","data":[],"key":"SiE2e6lyqM"}],"key":"XeQ1pBZ4Dg"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo = Foo(\"Hello, world.\", 23, 1.5)","key":"wCas25IK15"},{"type":"output","id":"wKwtZD5rqqUW5irblvDF-","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"Foo(\"Hello, world.\", 23, 1.5)","content_type":"text/plain"}}}],"key":"JIwyPLayBO"}],"key":"QAGtnFlagM"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"typeof(foo)","key":"uaZtNHm2Vt"},{"type":"output","id":"q_il1yGrsXYozHU7w0uTM","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"Foo","content_type":"text/plain"}}}],"key":"Fs5if9wcvs"}],"key":"nnMCiY6huR"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# this will not work. Uncomment and try it out\n# Foo((), 23.5, 1)","key":"VjiK9VoeoB"},{"type":"output","id":"zQ18x49R9i4cuYwIJGqxV","data":[],"key":"M9ai4f9Did"}],"key":"TE29sdRwJq"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"fieldnames(Foo)","key":"VYlI9f15yB"},{"type":"output","id":"dKGswNX36ccujijhU143g","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"(:bar, :baz, :qux)","content_type":"text/plain"}}}],"key":"nHByOOTCVk"}],"key":"k9axf6vRju"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo.bar","key":"yT637olzfE"},{"type":"output","id":"fBp5hwq9_fipsrhv-72TS","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"\"Hello, world.\"","content_type":"text/plain"}}}],"key":"b1DSvRdqNl"}],"key":"utXMaGKCN8"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo.baz","key":"jux6h3U9Ej"},{"type":"output","id":"k1YRdx2Xv65vn_WJdPA5y","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"23","content_type":"text/plain"}}}],"key":"LZ91SOp5dr"}],"key":"Iwhrjx3u3w"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo.qux","key":"YKOsTIBSOo"},{"type":"output","id":"V87U4JUn4qH9__K6jRNPD","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"1.5","content_type":"text/plain"}}}],"key":"WUuldho4e4"}],"key":"ioIZlluDW7"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types and Dispatch","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"BYIDKPzhSZ"}],"identifier":"composite-types-and-dispatch","label":"Composite Types and Dispatch","html_id":"composite-types-and-dispatch","implicit":true,"key":"BHPsM4D0zT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Above we saw an example of defining multiple methods of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"b7LQIkZDQx"},{"type":"inlineCode","value":"isint","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xWavkpXyyL"},{"type":"text","value":", using an abstract type to route dispatch","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rxZInF6NF7"}],"key":"pRavqOZJRD"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We can also use composite types","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YTBpGBj5Mm"}],"key":"irgdUDM6gn"}],"key":"oeaclrheVT"}],"visibility":"show","key":"DvirIxkMKU"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x::Foo) = isint(x.bar)","key":"dm2GkdnJ83"},{"type":"output","id":"a5Qo1rQGeR99Gmcq1O8pz","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content":"isint (generic function with 3 methods)","content_type":"text/plain"}}}],"key":"qOzAzMYBWh"}],"key":"VWhavGs3Rz"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(10), isint(1.0), isint(UInt128(234901324987213)), isint(Foo(\"not an int\", 12, 1.0))","key":"fMflZarEQs"},{"type":"output","id":"vsVS2aSclQpcIx0GK99eB","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"(true, false, true, false)","content_type":"text/plain"}}}],"key":"Smd74Q3p6b"}],"key":"boTFnBjVt2"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(Foo(\"not an int\", 12, 1.0))","key":"hZK4PTtYII"},{"type":"output","id":"rYfYtBoBPZljNUBpCVBsv","data":[{"output_type":"execute_result","execution_count":26,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1 = Base.getproperty(x, :bar)\n\u001b[90m│  \u001b[39m %2 = Main.isint(%1)\n\u001b[90m└──\u001b[39m      return %2\n)","content_type":"text/plain"}}}],"key":"EPfrIubPKh"}],"key":"b4cWlE8KHy"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","key":"uULlqOqxZ7"},{"type":"output","id":"6uMvRP7LjYuzLGfvQNNVS","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"key":"WThy4COiMS"}],"key":"xPPAd3veHl"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(foo)","key":"IqfU9EtG8w"},{"type":"output","id":"waQLXXe262KKCFAroaxiq","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"false","content_type":"text/plain"}}}],"key":"dIYNBOrvcE"}],"key":"UmdCtRFvIj"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"foo, isint(foo)","key":"nzhZnBBpXP"},{"type":"output","id":"7ilj8qRxcpL0gzMa3e1v5","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"(Foo(\"Hello, world.\", 23, 1.5), false)","content_type":"text/plain"}}}],"key":"dNOTVQsCcq"}],"key":"fMHR508gCz"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"isint(Foo(1, 23, 1.5))","key":"ZPpKsh4gtW"},{"type":"output","id":"_LD9NelZoQFQt3L1F6G5n","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"true","content_type":"text/plain"}}}],"key":"ygz5HA9exU"}],"key":"eg56bdMMDj"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sk6shWSVDC"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"key":"mwykdFsRyF"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create an abstract type called ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dC376fZE1f"},{"type":"inlineCode","value":"Person","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ApqnasVYll"}],"key":"REp262dG9H"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Create two composite subtypes of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"n6eYAUhle5"},{"type":"inlineCode","value":"Person","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"sSBqPBG2iB"},{"type":"text","value":" called ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"xpgxlqMFYx"},{"type":"inlineCode","value":"Friend","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"irDrGqJLFj"},{"type":"text","value":" and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"YyWhjBCFrz"},{"type":"inlineCode","value":"Foe","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"QqQU9x3qRY"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Each of these should have fields ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dYjxjfvgV6"},{"type":"inlineCode","value":"name","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"t3gG8V2v3u"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PqrhAFWpJZ"},{"type":"inlineCode","value":"height_inches","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EoOsMN49LE"}],"key":"iJywLqLYaW"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"For friend you should also have a field ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"yL4VEjQhkh"},{"type":"inlineCode","value":"favorite_color","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xkHpvvhFt9"}],"key":"yh6lYMVatK"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"MAKE SURE TO ADD TYPES FOR ALL FIELDS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"vIKissYv1K"}],"key":"YC7sqNAjoa"}],"key":"WlHrsT5iTA"}],"key":"UndcmLYmUu"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Create a third composite subtype of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Rsk4wPZ0qk"},{"type":"inlineCode","value":"Person","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"wSiK5FNqip"},{"type":"text","value":" called ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Zm3tzc0Akr"},{"type":"inlineCode","value":"Stranger","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"qVZqrwkKK3"},{"type":"text","value":", but without any fields","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"zLXIFijH1R"}],"key":"IXZEq3ogSi"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Suppose we are trying to decide who to invite to a dinner party. Our rule is that friends should get a definite yes. Enemies a definite no. Strangers a 50%/50% toss up. However, if our spouse says we should invite a person, the answer is always yes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"NUHJiszta0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Create a function ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"PJclcUCPXi"},{"type":"inlineCode","value":"should_invite_to_party","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"NoLsjQRErN"},{"type":"text","value":" that implements that logic","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"fDFbYPlAPF"}],"key":"Mbi8m9LKqp"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"HINT: you will need 4 methods. 3 of these have only one argument, the 4th has two","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"kinLagrkyo"}],"key":"JsxxwHGJ2G"}],"key":"N8fxNQ6IWI"}],"key":"YRnjWEXJHp"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"In the cell at the bottom we have written a test case. You will know you’ve done this correctly when all the tests pass","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"soFGGcbREj"}],"key":"civnGo3vTZ"}],"key":"pAjzO1nmUG"}],"visibility":"show","key":"z3bSjhECbU"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# Your code here","key":"WE7sBr3JyN"},{"type":"output","id":"OFSwM3w1QpW5xY9rUaWdP","data":[],"key":"HhgXi9WB07"}],"key":"g7PdMzQGQS"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"using Test\n\nfunction tests()\n\t@testset \"people\" begin\n\t\n\t\t@test fieldnames(Friend) == (:name, :height_inches, :favorite_color)\n\t\t@test fieldnames(Foe) == (:name, :height_inches)\n\t\t@test fieldnames(Stranger) == tuple()\n\n\t\tjim = Friend(\"Jim\", 64, \"blue\")\n\t\tdwight = Foe(\"Dwight\", 61)\n\t\tcreed = Stranger()\n\n\t\t@test jim isa Person\n\t\t@test dwight isa Person\n\t\t@test creed isa Person\n\n\t\t@test should_invite_to_party(jim) \n\t\t@test !should_invite_to_party(dwight)\n\t\t@test should_invite_to_party(dwight, true)\n\t\t\n\t\tcreed_invites = map(i->should_invite_to_party(creed), 1:100)\n\t\t@test any(creed_invites)\n\t\t@test any(map(!, creed_invites))\n\n\t\tcreed_invites_spouse = map(i->should_invite_to_party(creed, true), 1:100)\n\t\t@test all(creed_invites_spouse)\t\n\tend\nend","key":"GMFO9mFlHK"},{"type":"output","id":"e5ld8OAJ5s4RE9PKis_gD","data":[{"output_type":"execute_result","execution_count":23,"metadata":{},"data":{"text/plain":{"content":"tests (generic function with 1 method)","content_type":"text/plain"}}}],"key":"FnLKaAHcCp"}],"key":"bFMLjZbwOY"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment and run this cell when you are ready to test your code\ntests()","key":"ihUHIeNJTm"},{"type":"output","id":"YIRtcJ6YV6Uw2T2d5uHaI","data":[],"key":"XuUTDNzSRr"}],"key":"fTHeu13QrN"}],"key":"UfD6jpCFGc"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Julia Foundations","url":"/l01-03-julia-basics","group":"Julia 1"},"next":{"title":"Graphs","url":"/l03-01-graphs","group":"Graph Theory 1"}}},"domain":"http://localhost:3000"}