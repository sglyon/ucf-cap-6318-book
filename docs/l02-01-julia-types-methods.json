{"version":2,"kind":"Notebook","sha256":"f4dd3ae34cfea7085aa59122503ae08d494522b8270e0812d6faf6f78759dbb9","slug":"l02-01-julia-types-methods","location":"/week02/L02.01_julia_types_methods.ipynb","dependencies":[],"frontmatter":{"title":"Julia Types and Methods","content_includes_title":false,"kernelspec":{"name":"julia-1.10","display_name":"Julia 1.10.4","language":"julia"},"authors":[{"nameParsed":{"literal":"Spencer Lyon","given":"Spencer","family":"Lyon"},"name":"Spencer Lyon","orcid":"0009-0001-6461-885X","email":"spencer.lyon@ucf.edu","affiliations":["University of Central Florida","Valorum Data"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"affiliations":[{"id":"University of Central Florida","name":"University of Central Florida"},{"id":"Valorum Data","name":"Valorum Data"}],"numbering":{"title":{"offset":1}},"exports":[{"format":"ipynb","filename":"L02.01_julia_types_methods.ipynb","url":"/build/L02.01_julia_types_m-afe5826987ad038366545e6de9f21af0.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Computational Analysis of Social Complexity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oX2gWCxOcA"}],"key":"EzQH1fw4qz"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fall 2025, Spencer Lyon","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"y8Icx3SBeK"}],"key":"jeDuih7vFO"}],"key":"VFpEYwDNf4"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Qzpr4LUzVP"}],"key":"rixmZ9rZWG"}],"key":"nQbk2qj8YD"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Laptop or personal computer with internet connection","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"mGZ7RkBUbF"}],"key":"ZF2Y6OfKzM"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Julia intro lecture","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Fl8qjt6HR7"}],"key":"NepIiiCpjX"}],"key":"lp5snFxXVp"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Outcomes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"JnEIJavuhQ"}],"key":"dOzRso6NAL"}],"key":"NC7ws7IFer"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Understand key components of Julia’s type system: abstract types, primitive types, composite types, and parametric types","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"pertasxXc9"}],"key":"wYA4BxVmJp"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Be able to define our own custom types to hold data","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Ij54Wlugdb"}],"key":"My2ioau9LB"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Understand the concept of multiple dispatch","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"nJZkpGCdFC"}],"key":"TJENWc6r9W"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Be able to leverage the mulitple dispatch system to define custom behavior for built-in and custom types","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"ChyhDtkCox"}],"key":"rXv34uTnhG"}],"key":"L85xDKYagp"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"CPaWkLIJoE"}],"key":"LJD3oQyRgJ"}],"key":"hc0ANV4CBz"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Lecture notes","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"Fzl6Iba3Ko"}],"key":"CFGCwsKffm"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Julia documentation on ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"SIutfhO0rd"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/types/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"GjFqwhpBXF"}],"urlSource":"https://docs.julialang.org/en/v1/manual/types/","key":"xFDB6T6Gef"},{"type":"text","value":" and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"zqbAezjz5D"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/methods/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"methods","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"zcTQMq5pYY"}],"urlSource":"https://docs.julialang.org/en/v1/manual/methods/","key":"S6r7pYgq9A"},{"type":"text","value":" (these are technical, but comprehensive and well-written)","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Lu2ppKntjP"}],"key":"VQERkwbgxC"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"QuantEcon lectures on ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"ACHCozsSJY"},{"type":"link","url":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"types and generic programming","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"xD3YYelNix"}],"urlSource":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","key":"eA1syhy7TX"}],"key":"HHLOyH8GlL"}],"key":"oGXbGWe0vQ"}],"visibility":"show","key":"ljd4LLkAvb"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types in Julia","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sUVLO2LD3M"}],"identifier":"types-in-julia","label":"Types in Julia","html_id":"types-in-julia","implicit":true,"key":"fToO1Tl1K8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Julia is both very expressive and runtime efficient","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hCKaZkA4Zp"}],"key":"oEUlj7GOA1"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This is made possible because of the underlying compiler technology","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"bH6NXtDGvF"}],"key":"z8xuVBRjbU"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The main strategy for user interaction with the compiler is by defining custom types and methods that operate on those types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ayU5kjiFsM"}],"key":"UwnFyrOmUK"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Types and multiple dispatch go hand in hand and are key to effective Julia","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jlc22qzkTN"}],"key":"Yh1yZcYFCn"}],"key":"gVoa66b1YM"}],"visibility":"show","key":"fDhfm0l4Ce"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What is a type?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"xPAeLVLAWa"}],"identifier":"what-is-a-type","label":"What is a type?","html_id":"what-is-a-type","implicit":true,"key":"IaNfiiX7V0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Each piece of data in a program resides in memory (RAM) on the host computer","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l6H8hKSZKm"}],"key":"laWsDgy86E"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We often assign names to data, which we call variables (in ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dRPk7H8Ls5"},{"type":"inlineCode","value":"x = \"hello\"","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"LGkVfAwk6J"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Qr0gvyulJl"},{"type":"inlineCode","value":"x","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"L4mDno8pex"},{"type":"text","value":" is a variable)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"xSKPW3bNZ5"}],"key":"QOOguu3FHM"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"At its most basic level, a variable is composed of","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"bV4qLbsmLr"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"An arrangment of 0’s and 1’s called bits","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"wXjemipjAS"}],"key":"J2ah4mePCo"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"An address to where in memory the data is recorded","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sizIeMKZCP"}],"key":"jb27DT6d4x"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"CSUL8H7shx"},{"type":"inlineCode","value":"Symbol","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"bBQM1wgAZO"},{"type":"text","value":" representing the name we gave the data","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"lyjNvjTbJ9"}],"key":"rQfZbr3tNg"}],"key":"GYkBUW0s1J"}],"key":"q5q68Fat6o"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ffXGGqATHX"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"type","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"cWwFp29Gbk"}],"key":"BOqGPgIUL4"},{"type":"text","value":" in Julia represents what kind of object is represented at a certain memory address","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"c4Pc7n6mE8"}],"key":"ijhDqxhQhK"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Julia uses this type information to enable syntax (e.g. the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"AGH3urunPg"},{"type":"inlineCode","value":"$","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"HudrnwrxJe"},{"type":"text","value":" in a string to interpolate or the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"OmVhKWaTVW"},{"type":"inlineCode","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"JoJELfnt7S"},{"type":"text","value":" access for an objects fields) and ultimiately decide what behaviors are defined to operate on the data","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"nu6IDMoEEC"}],"key":"wIFsi2mGqf"}],"key":"b3xO9rJUtS"}],"visibility":"show","key":"O5PmAcujTL"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Organizing types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VXhNd1Qe2a"}],"identifier":"organizing-types","label":"Organizing types","html_id":"organizing-types","implicit":true,"key":"Ge7zz0vDD0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In Julia types are organized into a hierarchy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kVCIT6zANz"}],"key":"HLno0cjgMJ"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"At the top of the hierarcy is ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"iRlGtFxqYX"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mSKnl0XsVV"},{"type":"text","value":" -- all objects are instances of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mQfJoiA0yy"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HW8XqCOTE6"}],"key":"Cuz8GCyvd9"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"At the bottom of the hierarchy is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rKPupeYdli"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GqBfRTm1V0"},{"type":"text","value":" -- no objects are instances of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"nopOd9hd2j"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"QS1x6jERWI"}],"key":"fViZcWHcjj"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In between these endpoints we have a rich family of types","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"izFZ3UY2vY"}],"key":"kIPy1R0fkl"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Each type can have at most one parent type (if not specified, default parent is ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"KNLNd1KbQT"},{"type":"inlineCode","value":"Any","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"lZEzOx9pYX"},{"type":"text","value":")","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"UJ5ldd9fww"}],"key":"WOqkAIOBuY"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Types can actually come in a few different flavors...","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"eBxLJvOLBu"}],"key":"lxxcRr5JPv"}],"key":"kr14dzwPBh"}],"visibility":"show","key":"wkA7acs6fD"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types of Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ydbvbS6EWC"}],"identifier":"types-of-types","label":"Types of Types","html_id":"types-of-types","implicit":true,"key":"tPsvkdEAsW"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract Types: cannot be created directly, but serve as nodes in a type hierarchy. Help us organize types into families and provide shared behavior for all members of the family","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OQjMjZ0Vpl"}],"key":"hzkgOZiKKG"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Primitive types: provided to us by Julia and represent a collection of bits (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Qi1TLjL0es"},{"type":"inlineCode","value":"Float64","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wEt8BhEUr3"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"q5nlxC78AM"},{"type":"inlineCode","value":"Bool","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mfItJbsAok"},{"type":"text","value":", and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HpKaMcX3am"},{"type":"inlineCode","value":"Int8","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"lBUjVLLBxf"},{"type":"text","value":"). We ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Xu9pGXJ1DG"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"could","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ez33QEhGTX"}],"key":"p9Wvfkd5nn"},{"type":"text","value":" create them, but we won’t. We won’t say anything else about them here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"VLj4YNwoPN"}],"key":"YtXPq18Xyk"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Composite Types: types that contain additional data called fields. An instance can be treated as a single value. This is what we typically define and use","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"J9PzaQ6hq2"}],"key":"KRlwNQ7NhZ"}],"key":"Mq7HT0ZlzQ"},{"type":"blockquote","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"NOTE: all objects in Julia are instances of either primitive or composite types, and can be related to one another by sharing common abstract type ancestors","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bM5Tw3Gh3l"}],"key":"R5c4tJ6BQ4"}],"key":"MAvz4Ql4FF"}],"visibility":"show","key":"JxEMrDNSOp"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Abstract Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QmBlJHDoWj"}],"identifier":"abstract-types","label":"Abstract Types","html_id":"abstract-types","implicit":true,"key":"SE1Wz79dPh"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types help organize composite types into families","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xXSXR7BcMJ"}],"key":"os4VCBo5Re"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example, the number system in Julia looks like this (really -- look ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"kvssgYUZnw"},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"eBKGpzPJd0"}],"urlSource":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","data":{"kind":"file","org":"JuliaLang","repo":"julia","reference":"91f068c5c219275f1115056084417057a66240b7","file":"base/boot.jl","from":209,"to":214,"raw":"https://raw.githubusercontent.com/JuliaLang/julia/91f068c5c219275f1115056084417057a66240b7/base/boot.jl"},"internal":false,"protocol":"github","key":"IjYEyxTkGu"},{"type":"text","value":")","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mFPH3rIFye"}],"key":"yLoh9a0S51"}],"key":"hXAVfslBx2"},{"type":"code","lang":"julia","value":"abstract type Number end\nabstract type Real     <: Number end\nabstract type AbstractFloat <: Real end\nabstract type Integer  <: Real end\nabstract type Signed   <: Integer end\nabstract type Unsigned <: Integer end","position":{"start":{"line":5,"column":1},"end":{"line":12,"column":1}},"key":"kmlg73P5NR"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"vge3gNYnBG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"inlineCode","value":"Number","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"nRpiNBccTg"},{"type":"text","value":"’s parent type is ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"bHYvNeDUsl"},{"type":"inlineCode","value":"Any","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"yDJGz2IwF0"}],"key":"M8iaCF5sYu"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"inlineCode","value":"Real","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"Pkf3DVLUSt"},{"type":"text","value":" is a special kind of ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"h8VX8FcjvJ"},{"type":"inlineCode","value":"Number","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"aWQWrz3KSN"},{"type":"text","value":" and can be broken into two subgroups: ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"AxwIoB7MUb"},{"type":"inlineCode","value":"AbstractFloat","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"QBE5ttizIs"},{"type":"text","value":" and ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"DuXGWccKlm"},{"type":"inlineCode","value":"Integer","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"EbO61d4LI3"}],"key":"h5rnEk9EDh"}],"key":"MotrNIaxnp"}],"key":"obQxVH0hhc"}],"key":"OAdi9bgA34"}],"visibility":"show","key":"Kpy4skMJks"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why Abstract Types?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"gTgz7kNII1"}],"identifier":"why-abstract-types","label":"Why Abstract Types?","html_id":"why-abstract-types","implicit":true,"key":"JlXTxEtwE7"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We said before we can’t create an instance of abstract types...","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"KTuVfG4KnE"}],"key":"Soz135JU1W"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"So, why do we have them?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"AlmLDdYDNL"}],"key":"tCei5IZS9Y"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The primary reason to have abstract types is to introduced shared functionality via methods defined on the abstract type","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jDf4Z6Pxp0"}],"key":"OmgvWEuyp7"}],"key":"fIupwpqder"}],"visibility":"show","key":"vP7wutwkWX"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Example: suppose you needed to define a function ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"khJkuLFBYc"},{"type":"inlineCode","value":"isint","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JPpJDNYhgd"},{"type":"text","value":" to determine if an object is an integer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pBs8sVTIpb"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Without abstract types, you could have a long sequence of checks for if a variable is any integer type:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"GbUHtcrNCz"}],"key":"DkHSb0xws0"}],"key":"hnG7ta6h8B"}],"key":"LfzAIQsbft"}],"key":"FCjHU7ScR5"}],"visibility":"show","key":"jn2nYGS4W2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"function isint1(x)\n\tfor T in [\n\t\tInt8, UInt8, Int16, UInt16, \n\t\tInt32, UInt32, Int64, UInt64, \n\t\tInt128, UInt128\n\t]\n\t\tif isa(x, T)\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\nisint1(10), isint1(\"Hello\")","key":"NsrrgPr4iu"},{"type":"output","id":"Xb-M5uyahS0p_qEdM8TuV","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"JUY0XrQWe5"}],"key":"oUeHFDQZcC"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With abstract types we can define two methods:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v9RgmDTacp"}],"key":"KfqOrRrrs3"}],"visibility":"show","key":"zphTqxFkN0"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x) = false\nisint(x::Integer) = true\n\nisint(10), isint(\"Hello\")","key":"eeeCOGD7lf"},{"type":"output","id":"_ob9Do_UVvcCImf7r1_1q","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"az2D5N0Gyx"}],"key":"w7jgHvwh7w"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This has many benefits","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DOTHoGaMhv"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Much simpler to write/reason about","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"sFhgvQohcV"}],"key":"vZbXqt9yO5"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"More “fool proof”: what if we forgot one of the “UIntXX” types?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"a42FvfE4dt"}],"key":"QjXFjK9ccw"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"More “future proof”: what if a new type of integer gets introduced (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"nyMDbOBxee"},{"type":"inlineCode","value":"UInt256","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"afTQpNXaRs"},{"type":"text","value":" like is widely used in blockchain data!)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"m2HCobIoIx"}],"key":"RtqC0n1N9I"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Pushes work into the compiler:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xmft9CkXXv"}],"key":"xvBIlYuQXq"}],"key":"nSl8RGoBfk"}],"key":"GedVYw2XWN"}],"key":"M0fnCNc0Wn"}],"visibility":"show","key":"HjYaGDxscV"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(\"hello\")","visibility":"show","key":"yZVWvVPXFk"},{"type":"output","id":"U9v7MoLebkdhlxpZfcST_","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"rOzBv5vVPV"}],"visibility":"show","key":"umXNQK1VSL"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(UInt128(12341234123423134))","visibility":"show","key":"h2RXKLDqb2"},{"type":"output","id":"olL3SExHwFpnuh33NOoMu","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"qtYfLvBw76"}],"visibility":"show","key":"nmZDEHTila"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(\"hello\") ","visibility":"show","key":"HMzxFicFir"},{"type":"output","id":"P8v2YQ5KNl1Xo4xcgvqnj","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"O3W6bsxk4A"}],"visibility":"show","key":"NVDkwSfChr"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","visibility":"show","key":"X2lDqR2vzW"},{"type":"output","id":"YWCKUhEdIAD1FaweW_gVi","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"visibility":"show","key":"pI69KnJ2Lg"}],"visibility":"show","key":"OkLi71Wg7Y"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"A3cuJfUHsU"}],"identifier":"composite-types","label":"Composite Types","html_id":"composite-types","implicit":true,"key":"zHQ74pNEaQ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types are very useful when used in conjunction with multiple dispatch (defining multiple methods of function with same name, but varying code depending on argument types)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MUP7VaD1MP"}],"key":"P6YpyJpMtY"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"However, most often we create types to hold collections of related data together","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"hF8mdNAEbk"}],"key":"EOv17qIfy6"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We do this using composite types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eM5HrNVqQv"}],"key":"r5G4wvdvF0"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"A composite type can be created as follows:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"mWeewswzll"}],"key":"mAVVDehF0m"}],"key":"DZKjzmZvq8"},{"type":"code","lang":"julia","value":"struct Name <: AbstractParentType\n    field1::Field1Type\n\t# more fields\nend","position":{"start":{"line":7,"column":1},"end":{"line":12,"column":1}},"key":"Jj7uKGJKyH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Note that the ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"YENH0TUCBZ"},{"type":"inlineCode","value":"<: AbstractParentType","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"E5NcgHjHop"},{"type":"text","value":" is optional, as are types on all fields","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"QqfFdu862N"}],"key":"aA4AyGWiKp"}],"key":"RJcTjB1bWv"}],"visibility":"show","key":"CWLy5hbgSY"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types: Examples","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qztAeQaUwf"}],"identifier":"composite-types-examples","label":"Composite Types: Examples","html_id":"composite-types-examples","implicit":true,"key":"XenZ1YWjHT"}],"visibility":"show","key":"vr5XtxXECI"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"struct Foo\n   bar\n   baz::Int\n   qux::Float64\nend","key":"r02vUGeuCS"},{"type":"output","id":"gqMomKIPjdStRO7Ujrpxg","data":[],"key":"Pl24JfJAOS"}],"key":"mFOPpHBLjk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo = Foo(\"Hello, world.\", 23, 1.5)","key":"UzOBfRjoIR"},{"type":"output","id":"UKqRijNvRwdwCpWDCv6ym","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"Foo(\"Hello, world.\", 23, 1.5)","content_type":"text/plain"}}}],"key":"y4s3NBlwVt"}],"key":"KI8M7vrBoM"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"typeof(foo)","key":"CLSV5gNs5d"},{"type":"output","id":"TXtDGB3UCh-Q_qruUAhE-","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"Foo","content_type":"text/plain"}}}],"key":"N6RwAODWpQ"}],"key":"yZGUjFIVSD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# this will not work. Uncomment and try it out\n# Foo((), 23.5, 1)","key":"ycUdhoxl5z"},{"type":"output","id":"1qp8NaKuzWKsnNbdQjFv3","data":[],"key":"jNu6s4CvHc"}],"key":"Z72dcowph7"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"fieldnames(Foo)","key":"E5i5Ud2wTA"},{"type":"output","id":"Lr9CTKv8xRhL9b83iO5nz","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"(:bar, :baz, :qux)","content_type":"text/plain"}}}],"key":"nC3NfS553L"}],"key":"jubLiF6kft"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.bar","key":"tLC4YWMJjq"},{"type":"output","id":"n1l4rBbpTMQutYnByYQUZ","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"\"Hello, world.\"","content_type":"text/plain"}}}],"key":"zhh4LJQNCq"}],"key":"mLELQS6qDk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.baz","key":"QK6tgYNTYC"},{"type":"output","id":"yq6v-10jccIzvg5NLyUg1","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"23","content_type":"text/plain"}}}],"key":"CEhQnmdytU"}],"key":"RzXIk5If53"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.qux","key":"BqVKT22COs"},{"type":"output","id":"YXnTh6IfRNYgk7ofKc9cr","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"1.5","content_type":"text/plain"}}}],"key":"P4DZLwA2Tf"}],"key":"XMuhMJEepJ"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types and Dispatch","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ge4U6QMV8O"}],"identifier":"composite-types-and-dispatch","label":"Composite Types and Dispatch","html_id":"composite-types-and-dispatch","implicit":true,"key":"xybVgXo3Gu"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Above we saw an example of defining multiple methods of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"tA1ZhvC3aj"},{"type":"inlineCode","value":"isint","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pHQsGYTG8T"},{"type":"text","value":", using an abstract type to route dispatch","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HtEyUfEni4"}],"key":"lZLFZ178EY"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We can also use composite types","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"bA4Efosff0"}],"key":"A37AKFVJ6B"}],"key":"trtWg3pFgO"}],"visibility":"show","key":"dqYeIchPzU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x::Foo) = isint(x.bar)","key":"geFbBHx4a8"},{"type":"output","id":"nihgA-RD1DSlyBthnP5qf","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content":"isint (generic function with 3 methods)","content_type":"text/plain"}}}],"key":"CeFWDi0iqd"}],"key":"BcYxF1rjtx"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(10), isint(1.0), isint(UInt128(234901324987213)), isint(Foo(\"not an int\", 12, 1.0))","key":"Jweqoqu8tD"},{"type":"output","id":"sGAXfywXTSSmg8D1dDzvq","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"(true, false, true, false)","content_type":"text/plain"}}}],"key":"r9WCKClYib"}],"key":"ArWiXII8rz"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(Foo(\"not an int\", 12, 1.0))","key":"ZThk8ennPp"},{"type":"output","id":"xhuXR0UhGPDZNdzFu9kSj","data":[{"output_type":"execute_result","execution_count":26,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1 = Base.getproperty(x, :bar)\n\u001b[90m│  \u001b[39m %2 = Main.isint(%1)\n\u001b[90m└──\u001b[39m      return %2\n)","content_type":"text/plain"}}}],"key":"oxsqXlwvi0"}],"key":"TbDyWoJ0yv"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","key":"xxUQLTTRbx"},{"type":"output","id":"6SQq61Q9y1FJ7ShaEJraP","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"key":"WmzXDBlPJj"}],"key":"aG8lmV017d"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(foo)","key":"AijRqJJ80o"},{"type":"output","id":"U_dURWwVahGD9ikjFVByW","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"false","content_type":"text/plain"}}}],"key":"cWw4czOYJa"}],"key":"l4P9kdkYdX"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo, isint(foo)","key":"cLPsEgGGNP"},{"type":"output","id":"ihfRqdZXv2qOaRs88E7Yp","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"(Foo(\"Hello, world.\", 23, 1.5), false)","content_type":"text/plain"}}}],"key":"COdNnI8Q9v"}],"key":"GuyMBBnMzN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(Foo(1, 23, 1.5))","key":"njI4onMYmI"},{"type":"output","id":"gtHxN-P5SFPPKoHSht23x","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"true","content_type":"text/plain"}}}],"key":"cVCQ4s33NK"}],"key":"C3LBuIAGsx"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"x97OUlLwh9"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"key":"YcUyNXZHDW"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create an abstract type called ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Wn4mePVBAm"},{"type":"inlineCode","value":"Person","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Lc6EHeaWc1"}],"key":"kl5ERIiCmq"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Create two composite subtypes of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"QB16cQIJwP"},{"type":"inlineCode","value":"Person","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"R5SD597ozc"},{"type":"text","value":" called ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Fn2lq8C27H"},{"type":"inlineCode","value":"Friend","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"szmaDRQyJS"},{"type":"text","value":" and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Y3jqKYbEKT"},{"type":"inlineCode","value":"Foe","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"RimsYkRsm8"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Each of these should have fields ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"eD1vUXJ4DH"},{"type":"inlineCode","value":"name","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WsIu89du7V"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JW6Fd37PFd"},{"type":"inlineCode","value":"height_inches","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dlKOPG71Dj"}],"key":"r3TRyFGRp7"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"For friend you should also have a field ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"lRIXkBQVyN"},{"type":"inlineCode","value":"favorite_color","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xVv0Y49jgP"}],"key":"yAsZ4cfhjQ"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"MAKE SURE TO ADD TYPES FOR ALL FIELDS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Yp1skIS14O"}],"key":"aXsJYJPQuC"}],"key":"AdRj9EOyqb"}],"key":"HOJwKdiCPn"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Create a third composite subtype of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"yShfRAVxjI"},{"type":"inlineCode","value":"Person","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"wG3p7wSdZV"},{"type":"text","value":" called ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"o1mru8IvAb"},{"type":"inlineCode","value":"Stranger","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"obqr9oSqG5"},{"type":"text","value":", but without any fields","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"dOHMP6RhUm"}],"key":"FCWRukaoSR"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Suppose we are trying to decide who to invite to a dinner party. Our rule is that friends should get a definite yes. Enemies a definite no. Strangers a 50%/50% toss up. However, if our spouse says we should invite a person, the answer is always yes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"b4Vm6FX8Nu"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Create a function ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"OHI9EIuooL"},{"type":"inlineCode","value":"should_invite_to_party","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"JpsxmYyUCg"},{"type":"text","value":" that implements that logic","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"EIzR9JGBVO"}],"key":"WQg47uH1vM"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"HINT: you will need 4 methods. 3 of these have only one argument, the 4th has two","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"BfJXBRSvdj"}],"key":"xeQytmUb96"}],"key":"yQX54Iqdni"}],"key":"SAaCcg3GcD"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"In the cell at the bottom we have written a test case. You will know you’ve done this correctly when all the tests pass","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"Imhbn1Gf12"}],"key":"lE2Kd6t5Dc"}],"key":"Md8Tk9GG4A"}],"visibility":"show","key":"cLg7CKQHGa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# Your code here","key":"LAZYAtWySm"},{"type":"output","id":"SR_ChO8BCC-jzvijZpas7","data":[],"key":"Ihr6qfvOyx"}],"key":"EJcAFm576q"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"using Test\n\nfunction tests()\n\t@testset \"people\" begin\n\t\n\t\t@test fieldnames(Friend) == (:name, :height_inches, :favorite_color)\n\t\t@test fieldnames(Foe) == (:name, :height_inches)\n\t\t@test fieldnames(Stranger) == tuple()\n\n\t\tjim = Friend(\"Jim\", 64, \"blue\")\n\t\tdwight = Foe(\"Dwight\", 61)\n\t\tcreed = Stranger()\n\n\t\t@test jim isa Person\n\t\t@test dwight isa Person\n\t\t@test creed isa Person\n\n\t\t@test should_invite_to_party(jim) \n\t\t@test !should_invite_to_party(dwight)\n\t\t@test should_invite_to_party(dwight, true)\n\t\t\n\t\tcreed_invites = map(i->should_invite_to_party(creed), 1:100)\n\t\t@test any(creed_invites)\n\t\t@test any(map(!, creed_invites))\n\n\t\tcreed_invites_spouse = map(i->should_invite_to_party(creed, true), 1:100)\n\t\t@test all(creed_invites_spouse)\t\n\tend\nend","key":"oXRWrrTbjA"},{"type":"output","id":"9llMAQed3qbub3RQttD6E","data":[{"output_type":"execute_result","execution_count":23,"metadata":{},"data":{"text/plain":{"content":"tests (generic function with 1 method)","content_type":"text/plain"}}}],"key":"dzGKzcsp7s"}],"key":"pGt6d05rYD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment and run this cell when you are ready to test your code\ntests()","key":"u12iAGG5Ll"},{"type":"output","id":"fHzj-KZ6mzW8nD_Si4wZE","data":[],"key":"J0iLZ7oCGr"}],"key":"HnaicW8MWc"}],"key":"AEFiH2I5JE"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Julia Foundations","url":"/l01-03-julia-basics","group":"Julia 1"},"next":{"title":"Julia Code Organization","url":"/l02-02-code-organization","group":"Julia 2"}}},"domain":"http://localhost:3000"}