{"version":2,"kind":"Notebook","sha256":"f4dd3ae34cfea7085aa59122503ae08d494522b8270e0812d6faf6f78759dbb9","slug":"l02-01-julia-types-methods","location":"/week02/L02.01_julia_types_methods.ipynb","dependencies":[],"frontmatter":{"title":"Julia Types and Methods","content_includes_title":false,"kernelspec":{"name":"julia-1.10","display_name":"Julia 1.10.4","language":"julia"},"authors":[{"nameParsed":{"literal":"Spencer Lyon","given":"Spencer","family":"Lyon"},"name":"Spencer Lyon","orcid":"0009-0001-6461-885X","email":"spencer.lyon@ucf.edu","affiliations":["University of Central Florida","Valorum Data"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"affiliations":[{"id":"University of Central Florida","name":"University of Central Florida"},{"id":"Valorum Data","name":"Valorum Data"}],"numbering":{"title":{"offset":1}},"exports":[{"format":"ipynb","filename":"L02.01_julia_types_methods.ipynb","url":"/build/L02.01_julia_types_m-afe5826987ad038366545e6de9f21af0.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Computational Analysis of Social Complexity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZM6HkQqNds"}],"key":"EneIAI5jPf"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fall 2025, Spencer Lyon","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cR5fKwgDGu"}],"key":"L25cOy2mR1"}],"key":"HL6LtmQCEb"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sU2zXgmd7G"}],"key":"exmfVtrAMq"}],"key":"h4EkAfg95w"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Laptop or personal computer with internet connection","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BlIVuyEFy7"}],"key":"sb4wmgy1V3"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Julia intro lecture","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"JPrXzTRQPR"}],"key":"Q4QRsHq6mI"}],"key":"NnVhCve8Yg"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Outcomes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"x2H06wtm8x"}],"key":"gPeDAtFuzb"}],"key":"ImjKs39UcB"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Understand key components of Julia’s type system: abstract types, primitive types, composite types, and parametric types","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Af01wkRhE8"}],"key":"CCuUpTgejo"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Be able to define our own custom types to hold data","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"cbaseJWMZ2"}],"key":"toUBrN5vWr"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Understand the concept of multiple dispatch","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"OYqnvApUdB"}],"key":"XN0I8nzHGz"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Be able to leverage the mulitple dispatch system to define custom behavior for built-in and custom types","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"jFTVhznoKp"}],"key":"X15EQu4lZT"}],"key":"G3YSN0BVbf"},{"type":"paragraph","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"strong","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"sQ8YwMGHeZ"}],"key":"zCwXTilL9t"}],"key":"Z5jCbcsx2Q"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Lecture notes","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"gfBmvbeGqf"}],"key":"NVhftKrUM1"},{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Julia documentation on ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"nlNpSWLjdx"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/types/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"CUdtSGlI0P"}],"urlSource":"https://docs.julialang.org/en/v1/manual/types/","key":"RYkCuUSiwo"},{"type":"text","value":" and ","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"di1vjK0RtV"},{"type":"link","url":"https://docs.julialang.org/en/v1/manual/methods/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"methods","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"tTGrxoMZKq"}],"urlSource":"https://docs.julialang.org/en/v1/manual/methods/","key":"yckmnZmjac"},{"type":"text","value":" (these are technical, but comprehensive and well-written)","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"WYrV1AV8Ab"}],"key":"m1NkC2haSd"},{"type":"listItem","spread":true,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"QuantEcon lectures on ","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"uzu9blXXtK"},{"type":"link","url":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"types and generic programming","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"X33GSjBTyv"}],"urlSource":"https://julia.quantecon.org/getting_started_julia/introduction_to_types.html","key":"RRJrAoOmPs"}],"key":"AkGV6jmqxM"}],"key":"pxVRAbUQOT"}],"visibility":"show","key":"hNcwW8yTCP"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types in Julia","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DZotxZbnV0"}],"identifier":"types-in-julia","label":"Types in Julia","html_id":"types-in-julia","implicit":true,"key":"ovU1Lsknbi"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Julia is both very expressive and runtime efficient","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZktpbxzJxb"}],"key":"AWJ8qJL2Dv"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"This is made possible because of the underlying compiler technology","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"s0TVuHIugg"}],"key":"b6x6kaxNRi"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The main strategy for user interaction with the compiler is by defining custom types and methods that operate on those types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"lt8wWA4eaT"}],"key":"g33UtcjxnX"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Types and multiple dispatch go hand in hand and are key to effective Julia","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"hVJRqyLo8P"}],"key":"t0PzuC4cQK"}],"key":"VsHbCEtSV7"}],"visibility":"show","key":"fQp8LJXnOt"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"What is a type?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oEUf56I407"}],"identifier":"what-is-a-type","label":"What is a type?","html_id":"what-is-a-type","implicit":true,"key":"I2eFMouulL"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Each piece of data in a program resides in memory (RAM) on the host computer","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OyHuWeT7YL"}],"key":"FaaIK9d7L9"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We often assign names to data, which we call variables (in ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uGyvplY12W"},{"type":"inlineCode","value":"x = \"hello\"","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"toj7NhqwSg"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ykOK4zqUkj"},{"type":"inlineCode","value":"x","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"vRyJ4kDXRm"},{"type":"text","value":" is a variable)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"DZFEY3cD65"}],"key":"odpRHF1sXL"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"At its most basic level, a variable is composed of","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"VrZc28lwPG"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"An arrangment of 0’s and 1’s called bits","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"bdIw08fy7f"}],"key":"up35QVHrnp"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"An address to where in memory the data is recorded","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WGviolYiTw"}],"key":"bEQN3HFXev"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"U8ioyGsi07"},{"type":"inlineCode","value":"Symbol","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"WMAtT6G2jG"},{"type":"text","value":" representing the name we gave the data","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"JVP45qthOV"}],"key":"DE96baYUwc"}],"key":"IWnI1AM5BK"}],"key":"YuExPpnFry"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"VLrSYw3f6f"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"type","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"oLLOzIPs9M"}],"key":"GxHWD6CKqB"},{"type":"text","value":" in Julia represents what kind of object is represented at a certain memory address","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BCRolGIHOy"}],"key":"pSg1Y35MYc"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Julia uses this type information to enable syntax (e.g. the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"sSxJTjiTjE"},{"type":"inlineCode","value":"$","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"pAtUXR5iFU"},{"type":"text","value":" in a string to interpolate or the ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"rFAxFoDcMM"},{"type":"inlineCode","value":".","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"QQJMBAAPWH"},{"type":"text","value":" access for an objects fields) and ultimiately decide what behaviors are defined to operate on the data","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"Pz3cod7AjA"}],"key":"ManXfb8zw1"}],"key":"FGlVFKyKfM"}],"visibility":"show","key":"K9fIUyWPXi"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Organizing types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZfDhd2Rwsz"}],"identifier":"organizing-types","label":"Organizing types","html_id":"organizing-types","implicit":true,"key":"Sp6NcwivCP"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In Julia types are organized into a hierarchy","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wJqExFcfSO"}],"key":"FRHNiRPmux"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"At the top of the hierarcy is ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"tYmtwJgEXf"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HFwVdLIPgg"},{"type":"text","value":" -- all objects are instances of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Pk1hdBwiSN"},{"type":"inlineCode","value":"Any","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"mPGtLLLqiu"}],"key":"f5pvJgoffC"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"At the bottom of the hierarchy is ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BFOxSemnzU"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fOFG1UxSBU"},{"type":"text","value":" -- no objects are instances of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xlFH7AtTFY"},{"type":"inlineCode","value":"Union{}","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RpfZJ02oxJ"}],"key":"fPjXnfsBJN"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In between these endpoints we have a rich family of types","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"n3mhA8Rpjr"}],"key":"o6a5F6h1ZE"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Each type can have at most one parent type (if not specified, default parent is ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FVjnMrmdW6"},{"type":"inlineCode","value":"Any","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"RXXyY0azaC"},{"type":"text","value":")","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"sjTxZ2wPk6"}],"key":"HpQ7JTlafG"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Types can actually come in a few different flavors...","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gslvGeX4mO"}],"key":"fdC0Ozwlim"}],"key":"Er0zK8LxJb"}],"visibility":"show","key":"NisBE5qnOg"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Types of Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"v1kGfhswzc"}],"identifier":"types-of-types","label":"Types of Types","html_id":"types-of-types","implicit":true,"key":"JLbeXLYiPb"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract Types: cannot be created directly, but serve as nodes in a type hierarchy. Help us organize types into families and provide shared behavior for all members of the family","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rXmCHW8yKu"}],"key":"GgcZ0uExVv"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Primitive types: provided to us by Julia and represent a collection of bits (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JxtCVsVB4S"},{"type":"inlineCode","value":"Float64","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OsAJqD94to"},{"type":"text","value":", ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"sEL5MW1Zum"},{"type":"inlineCode","value":"Bool","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"s31Zoz1q81"},{"type":"text","value":", and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BDQsln3Eve"},{"type":"inlineCode","value":"Int8","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MGrD83fYcM"},{"type":"text","value":"). We ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"eHQiH6jpPJ"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"could","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dnbkUdevM9"}],"key":"YyiZj3BTuA"},{"type":"text","value":" create them, but we won’t. We won’t say anything else about them here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GRp1R9BkHY"}],"key":"x1ha1zRW1m"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Composite Types: types that contain additional data called fields. An instance can be treated as a single value. This is what we typically define and use","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"K68JlisVFI"}],"key":"HSv594OdU4"}],"key":"upAnulvZ9a"},{"type":"blockquote","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"NOTE: all objects in Julia are instances of either primitive or composite types, and can be related to one another by sharing common abstract type ancestors","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"LaOons3Qx7"}],"key":"s4qPCB1FRD"}],"key":"GnZ8dYMlUr"}],"visibility":"show","key":"w2xZpPzbxK"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Abstract Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"x9ZCx9sedT"}],"identifier":"abstract-types","label":"Abstract Types","html_id":"abstract-types","implicit":true,"key":"FPKzuWunxU"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types help organize composite types into families","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"GnyRkQjMAv"}],"key":"dbHUYDeq7o"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"For example, the number system in Julia looks like this (really -- look ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XhVHB8JFJn"},{"type":"link","url":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SChhlsB8ip"}],"urlSource":"https://github.com/JuliaLang/julia/blob/91f068c5c219275f1115056084417057a66240b7/base/boot.jl#L209-L214","data":{"kind":"file","org":"JuliaLang","repo":"julia","reference":"91f068c5c219275f1115056084417057a66240b7","file":"base/boot.jl","from":209,"to":214,"raw":"https://raw.githubusercontent.com/JuliaLang/julia/91f068c5c219275f1115056084417057a66240b7/base/boot.jl"},"internal":false,"protocol":"github","key":"so7xyyfd1v"},{"type":"text","value":")","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"roVGyjMxnH"}],"key":"iyu8GwZq4B"}],"key":"Z5QYP7Vin7"},{"type":"code","lang":"julia","value":"abstract type Number end\nabstract type Real     <: Number end\nabstract type AbstractFloat <: Real end\nabstract type Integer  <: Real end\nabstract type Signed   <: Integer end\nabstract type Unsigned <: Integer end","position":{"start":{"line":5,"column":1},"end":{"line":12,"column":1}},"key":"Aw4KeWi70x"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Note:","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"EfwrdJJg00"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"inlineCode","value":"Number","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Xftq3qcP3C"},{"type":"text","value":"’s parent type is ","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"sLWVUxyfZa"},{"type":"inlineCode","value":"Any","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"pKO3ttjPQe"}],"key":"BOgKoOEcCL"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"inlineCode","value":"Real","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"gsb9IokDjw"},{"type":"text","value":" is a special kind of ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"CXllC7lM86"},{"type":"inlineCode","value":"Number","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"BARcnxexWI"},{"type":"text","value":" and can be broken into two subgroups: ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"POo1aREvCh"},{"type":"inlineCode","value":"AbstractFloat","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"BgqJUEaiRr"},{"type":"text","value":" and ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"ZaP6flghKz"},{"type":"inlineCode","value":"Integer","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"CGWa7VsRtc"}],"key":"G41Y9eH8zJ"}],"key":"HOWEyDT4KY"}],"key":"iZzUTl7QM1"}],"key":"LpEUmZEDj1"}],"visibility":"show","key":"bIK009kb3R"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Why Abstract Types?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D3lxhWhvkj"}],"identifier":"why-abstract-types","label":"Why Abstract Types?","html_id":"why-abstract-types","implicit":true,"key":"iON0YXiwnq"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We said before we can’t create an instance of abstract types...","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"K9tChecMHg"}],"key":"YAz0dYac6S"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"So, why do we have them?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"IW5gTo2mkZ"}],"key":"rwLO78EKHf"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The primary reason to have abstract types is to introduced shared functionality via methods defined on the abstract type","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"USYxcVUIzp"}],"key":"HY8FH6fwpT"}],"key":"p7DUDZZg4a"}],"visibility":"show","key":"yKZTD6DAF1"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Example: suppose you needed to define a function ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tJqFf5XRtK"},{"type":"inlineCode","value":"isint","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hHSThQSiwc"},{"type":"text","value":" to determine if an object is an integer","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fqCdN6Jgo5"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Without abstract types, you could have a long sequence of checks for if a variable is any integer type:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"gQtn3XaEeA"}],"key":"ymQ9HAxcmf"}],"key":"YhuiI9CJPa"}],"key":"YULV5u265k"}],"key":"d2FpV2OZyk"}],"visibility":"show","key":"V6pLdbNVAY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"function isint1(x)\n\tfor T in [\n\t\tInt8, UInt8, Int16, UInt16, \n\t\tInt32, UInt32, Int64, UInt64, \n\t\tInt128, UInt128\n\t]\n\t\tif isa(x, T)\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\nend\n\nisint1(10), isint1(\"Hello\")","key":"P7nnLMI0oC"},{"type":"output","id":"zRBHL-VV5jeiIAxNUkfNn","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"pFlE6CrRAH"}],"key":"v091LyqJNI"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"With abstract types we can define two methods:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kXftbG9oVu"}],"key":"yZKaARsmAe"}],"visibility":"show","key":"erE4Fi0v9E"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x) = false\nisint(x::Integer) = true\n\nisint(10), isint(\"Hello\")","key":"z7Le8q1Nk9"},{"type":"output","id":"_WKmSa4-zN1gAARp3JMSu","data":[{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"(true, false)","content_type":"text/plain"}}}],"key":"XSO7dtnc6b"}],"key":"FnoCVyFRcq"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"This has many benefits","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VFpcQ7ncSD"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Much simpler to write/reason about","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZYLUc6RiuY"}],"key":"t4roUvoywC"},{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"More “fool proof”: what if we forgot one of the “UIntXX” types?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qKVMFgSLZh"}],"key":"FjxANFSisJ"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"More “future proof”: what if a new type of integer gets introduced (e.g. ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"STvZEyZN2c"},{"type":"inlineCode","value":"UInt256","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"BdlzlKdC7V"},{"type":"text","value":" like is widely used in blockchain data!)","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"kXj3o9RIpV"}],"key":"UTWahjWUIO"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Pushes work into the compiler:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HEg5Y2Ni0n"}],"key":"WXCguWymk8"}],"key":"EIHD4eq86B"}],"key":"hvr0DOJcgL"}],"key":"oibRdLR2WC"}],"visibility":"show","key":"GCIfRE6D4n"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(\"hello\")","visibility":"show","key":"N8SFHhMSkS"},{"type":"output","id":"1ilb3t2qAUT1gzXsobnva","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"kZqBhtFHOq"}],"visibility":"show","key":"KXXhbIKQsO"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint1(UInt128(12341234123423134))","visibility":"show","key":"UO61K6pGyt"},{"type":"output","id":"UyQ2pkW4NHAHUCccA3ujp","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1  = Base.vect(Main.Int8, Main.UInt8, Main.Int16, Main.UInt16, Main.Int32, Main.UInt32, Main.Int64, Main.UInt64, Main.Int128, Main.UInt128)\n\u001b[90m│  \u001b[39m       @_3 = Base.iterate(%1)\n\u001b[90m│  \u001b[39m %3  = @_3 === nothing\n\u001b[90m│  \u001b[39m %4  = Base.not_int(%3)\n\u001b[90m└──\u001b[39m       goto #6 if not %4\n\u001b[90m2 ┄\u001b[39m %6  = @_3\n\u001b[90m│  \u001b[39m       T = Core.getfield(%6, 1)\n\u001b[90m│  \u001b[39m %8  = Core.getfield(%6, 2)\n\u001b[90m│  \u001b[39m %9  = x isa T\n\u001b[90m└──\u001b[39m       goto #4 if not %9\n\u001b[90m3 ─\u001b[39m       return true\n\u001b[90m4 ─\u001b[39m       @_3 = Base.iterate(%1, %8)\n\u001b[90m│  \u001b[39m %13 = @_3 === nothing\n\u001b[90m│  \u001b[39m %14 = Base.not_int(%13)\n\u001b[90m└──\u001b[39m       goto #6 if not %14\n\u001b[90m5 ─\u001b[39m       goto #2\n\u001b[90m6 ┄\u001b[39m       return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"isXGrViwvk"}],"visibility":"show","key":"ZLFXQ6D1Ew"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(\"hello\") ","visibility":"show","key":"h2rwdBCsJ8"},{"type":"output","id":"BilpP22y-JTMWZl_Wde32","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return false\n)","content_type":"text/plain"}}}],"visibility":"show","key":"kilJlGcqg4"}],"visibility":"show","key":"HZBNcyGENT"},{"type":"block","kind":"notebook-code","data":{"slideshow":{"slide_type":"fragment"},"tags":[]},"children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","visibility":"show","key":"Dt070B5bAx"},{"type":"output","id":"sP6XLB0-09W6S4lr1b2IZ","data":[{"output_type":"execute_result","execution_count":8,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"visibility":"show","key":"NlOM7QCQtF"}],"visibility":"show","key":"ePUvO5qh81"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"},"tags":[]},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lFXSa2zAm0"}],"identifier":"composite-types","label":"Composite Types","html_id":"composite-types","implicit":true,"key":"GZgQS81jem"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Abstract types are very useful when used in conjunction with multiple dispatch (defining multiple methods of function with same name, but varying code depending on argument types)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DZwB3LwW2t"}],"key":"PXLwiGiYv8"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"However, most often we create types to hold collections of related data together","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ps5Bb1kwj8"}],"key":"kgHEA4C8O6"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We do this using composite types","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"kKttTEMaUq"}],"key":"raLRGJt0f1"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"A composite type can be created as follows:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jASbw7fZIP"}],"key":"EkSGuBxfMJ"}],"key":"MyUa2RgESm"},{"type":"code","lang":"julia","value":"struct Name <: AbstractParentType\n    field1::Field1Type\n\t# more fields\nend","position":{"start":{"line":7,"column":1},"end":{"line":12,"column":1}},"key":"ZIrJov4G8O"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Note that the ","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"ruTBTB554b"},{"type":"inlineCode","value":"<: AbstractParentType","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Z9qJGfJepU"},{"type":"text","value":" is optional, as are types on all fields","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"OcgmEUKOmj"}],"key":"YmU9q69IYR"}],"key":"TJR1yiXSmS"}],"visibility":"show","key":"btVrdNW2xa"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types: Examples","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W590Wm73g5"}],"identifier":"composite-types-examples","label":"Composite Types: Examples","html_id":"composite-types-examples","implicit":true,"key":"R5iQ92e7ip"}],"visibility":"show","key":"pi0W7r9fat"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"struct Foo\n   bar\n   baz::Int\n   qux::Float64\nend","key":"fAVo43JHQS"},{"type":"output","id":"yDKCN-vZCcEzbkysJNx_d","data":[],"key":"CYqBZUmjdn"}],"key":"CW4DTFQ47s"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo = Foo(\"Hello, world.\", 23, 1.5)","key":"IkPCdy3xoT"},{"type":"output","id":"Olnj2XlhjGph-rZRi_Qp1","data":[{"output_type":"execute_result","execution_count":11,"metadata":{},"data":{"text/plain":{"content":"Foo(\"Hello, world.\", 23, 1.5)","content_type":"text/plain"}}}],"key":"WAEjKWDyRg"}],"key":"qd5huGDns1"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"typeof(foo)","key":"F7Kxyi304O"},{"type":"output","id":"FMpzyfNm85DAges7JRYB_","data":[{"output_type":"execute_result","execution_count":12,"metadata":{},"data":{"text/plain":{"content":"Foo","content_type":"text/plain"}}}],"key":"VP589oTJ82"}],"key":"pzc7Iduohc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# this will not work. Uncomment and try it out\n# Foo((), 23.5, 1)","key":"vnt13UkcxI"},{"type":"output","id":"v3BMAmNUHooGtJIX0txFi","data":[],"key":"MblDnyI42H"}],"key":"BR0WIklpZ8"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"fieldnames(Foo)","key":"yEOU5HQvpX"},{"type":"output","id":"DquXelAbXjgdsH-eyoxcc","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"(:bar, :baz, :qux)","content_type":"text/plain"}}}],"key":"SprKeXNZwV"}],"key":"vZxuFyoeR6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.bar","key":"i1f5U0UPat"},{"type":"output","id":"unHF_WMF1WfmfLu8-Jg9U","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"\"Hello, world.\"","content_type":"text/plain"}}}],"key":"QxlexZ6HqF"}],"key":"KdxI7NdGlB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.baz","key":"xWXNnxyb1A"},{"type":"output","id":"zO7wWwgdtWaKV-AvXhDF0","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"23","content_type":"text/plain"}}}],"key":"cnFkuJ4ZdE"}],"key":"HzRAfmS0SC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo.qux","key":"gDRQEbRxFh"},{"type":"output","id":"HJMLZWZY9YK7AB9AkD7Ur","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"1.5","content_type":"text/plain"}}}],"key":"soy1JrgPOv"}],"key":"vwJzGWLNf6"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Composite Types and Dispatch","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ne6E38NTg7"}],"identifier":"composite-types-and-dispatch","label":"Composite Types and Dispatch","html_id":"composite-types-and-dispatch","implicit":true,"key":"o59nEia1OA"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Above we saw an example of defining multiple methods of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ZP910UcRaV"},{"type":"inlineCode","value":"isint","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XGGdLGho0U"},{"type":"text","value":", using an abstract type to route dispatch","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SsPs2rs2ym"}],"key":"PEWEd8eOY4"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"We can also use composite types","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"WGDTD1cqKf"}],"key":"jaHaSRc1LJ"}],"key":"fACtV4snUf"}],"visibility":"show","key":"bAJTn4GpOt"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(x::Foo) = isint(x.bar)","key":"Uli8kNHSzJ"},{"type":"output","id":"hljbzxcW214tM4MGwRiyO","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content":"isint (generic function with 3 methods)","content_type":"text/plain"}}}],"key":"rVRxmcyzlC"}],"key":"uXmCR6GWJ9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(10), isint(1.0), isint(UInt128(234901324987213)), isint(Foo(\"not an int\", 12, 1.0))","key":"Hwji0n6CJC"},{"type":"output","id":"J9yZzHGZ4f5R945p7p2bc","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"(true, false, true, false)","content_type":"text/plain"}}}],"key":"eEwr6UhNeb"}],"key":"fcWGaMTR7i"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(Foo(\"not an int\", 12, 1.0))","key":"TV8rGiUSWp"},{"type":"output","id":"QsNqOQO9FPKnUrXHnxtEI","data":[{"output_type":"execute_result","execution_count":26,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m %1 = Base.getproperty(x, :bar)\n\u001b[90m│  \u001b[39m %2 = Main.isint(%1)\n\u001b[90m└──\u001b[39m      return %2\n)","content_type":"text/plain"}}}],"key":"qb1nFA5cBd"}],"key":"DQtb6DYzeb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"@code_lowered isint(UInt128(12341234123423134))","key":"bUCicOIf9B"},{"type":"output","id":"SCzUeIUdTeeqiK6TaIOo-","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"CodeInfo(\n\u001b[90m1 ─\u001b[39m     return true\n)","content_type":"text/plain"}}}],"key":"Ww5WdNiRnY"}],"key":"JXzXDtCSYW"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(foo)","key":"NzvrRYMJyW"},{"type":"output","id":"I-pZ_PttJS1kqmNK3ATmZ","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"false","content_type":"text/plain"}}}],"key":"pf2EotkDiy"}],"key":"Ri298d2NGA"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"foo, isint(foo)","key":"mdFCAYIUJH"},{"type":"output","id":"F0SKjqocTOzLDcBzMgfLU","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"(Foo(\"Hello, world.\", 23, 1.5), false)","content_type":"text/plain"}}}],"key":"FVim211VHo"}],"key":"UAZSJbD2BL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"isint(Foo(1, 23, 1.5))","key":"dc1PcxlChk"},{"type":"output","id":"0yQYy1GFDXKVP6AuikZJc","data":[{"output_type":"execute_result","execution_count":21,"metadata":{},"data":{"text/plain":{"content":"true","content_type":"text/plain"}}}],"key":"aqPGcaGphX"}],"key":"ZwVR14PgVg"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"},"tags":[]},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercises","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dbjHVvZgRj"}],"identifier":"exercises","label":"Exercises","html_id":"exercises","implicit":true,"key":"BXryybV8Cc"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Create an abstract type called ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xBa00F0c2t"},{"type":"inlineCode","value":"Person","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"J2Ai7AV9Ov"}],"key":"CxHRVrXw9y"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Create two composite subtypes of ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Jv1Ump8eIw"},{"type":"inlineCode","value":"Person","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"JuJKGrJFe2"},{"type":"text","value":" called ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"tvjx0Vssp8"},{"type":"inlineCode","value":"Friend","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qIOvZ7i1xd"},{"type":"text","value":" and ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"O2f8z2wwBN"},{"type":"inlineCode","value":"Foe","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"bfTLQdajOx"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Each of these should have fields ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"N7jM8pbksw"},{"type":"inlineCode","value":"name","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"M9coIWZoMH"},{"type":"text","value":" and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DP5lznzMh7"},{"type":"inlineCode","value":"height_inches","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"AsozcUf1Yp"}],"key":"BeHIGyKnQT"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"For friend you should also have a field ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"BEku8eH5Yh"},{"type":"inlineCode","value":"favorite_color","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"elqHlAdl3u"}],"key":"L2FV6lK3LL"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"MAKE SURE TO ADD TYPES FOR ALL FIELDS","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xb1t2dckMS"}],"key":"HtrCrog1iA"}],"key":"Ai07pX6WKd"}],"key":"VMl8dc7YQL"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Create a third composite subtype of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"yqgDnkBSGK"},{"type":"inlineCode","value":"Person","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"TPhM8gE57h"},{"type":"text","value":" called ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"gO3pPJVeBJ"},{"type":"inlineCode","value":"Stranger","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"fhq15Hq9Fo"},{"type":"text","value":", but without any fields","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"zLExdyHH52"}],"key":"C0YRNLYeIX"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Suppose we are trying to decide who to invite to a dinner party. Our rule is that friends should get a definite yes. Enemies a definite no. Strangers a 50%/50% toss up. However, if our spouse says we should invite a person, the answer is always yes","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uFabtVslKW"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Create a function ","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"cuJO7Pl3Er"},{"type":"inlineCode","value":"should_invite_to_party","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"o5X5qaxMdt"},{"type":"text","value":" that implements that logic","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"M9CrZFjBkd"}],"key":"FG9RD5293i"},{"type":"listItem","spread":true,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"HINT: you will need 4 methods. 3 of these have only one argument, the 4th has two","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"gZrRAEdZIa"}],"key":"HCy2QlV2gq"}],"key":"DHR36UaUwW"}],"key":"OLugFhKSKu"},{"type":"listItem","spread":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"In the cell at the bottom we have written a test case. You will know you’ve done this correctly when all the tests pass","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"XKYU3yN6FF"}],"key":"gAa73ce796"}],"key":"uPQ8M0e57R"}],"visibility":"show","key":"XYK0EHmz4z"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# Your code here","key":"mjieSEsvxL"},{"type":"output","id":"854XM1-to2OjZZkKqN8kp","data":[],"key":"yjKxSevtNY"}],"key":"KIdSm0Dywe"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"using Test\n\nfunction tests()\n\t@testset \"people\" begin\n\t\n\t\t@test fieldnames(Friend) == (:name, :height_inches, :favorite_color)\n\t\t@test fieldnames(Foe) == (:name, :height_inches)\n\t\t@test fieldnames(Stranger) == tuple()\n\n\t\tjim = Friend(\"Jim\", 64, \"blue\")\n\t\tdwight = Foe(\"Dwight\", 61)\n\t\tcreed = Stranger()\n\n\t\t@test jim isa Person\n\t\t@test dwight isa Person\n\t\t@test creed isa Person\n\n\t\t@test should_invite_to_party(jim) \n\t\t@test !should_invite_to_party(dwight)\n\t\t@test should_invite_to_party(dwight, true)\n\t\t\n\t\tcreed_invites = map(i->should_invite_to_party(creed), 1:100)\n\t\t@test any(creed_invites)\n\t\t@test any(map(!, creed_invites))\n\n\t\tcreed_invites_spouse = map(i->should_invite_to_party(creed, true), 1:100)\n\t\t@test all(creed_invites_spouse)\t\n\tend\nend","key":"cc2ZN4M8D0"},{"type":"output","id":"-s9MqOCwmZaAo3P_69ARw","data":[{"output_type":"execute_result","execution_count":23,"metadata":{},"data":{"text/plain":{"content":"tests (generic function with 1 method)","content_type":"text/plain"}}}],"key":"g7sHqyRupl"}],"key":"vbhqKWDa9J"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"# uncomment and run this cell when you are ready to test your code\ntests()","key":"TGgWL9cUq4"},{"type":"output","id":"Yb6Li4x1i6bkQs9UFCW9H","data":[],"key":"hlGGbCPSY6"}],"key":"V0s1AETjDr"}],"key":"y7I9pSyzhZ"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Julia Foundations","url":"/l01-03-julia-basics","group":"Julia 1"},"next":{"title":"Julia Code Organization","url":"/l02-02-code-organization","group":"Julia 2"}}},"domain":"http://localhost:3000"}