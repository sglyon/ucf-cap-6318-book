{"version":2,"kind":"Notebook","sha256":"6e6c5370ed74ed80d36a50db9880c56cddb6ccee2268d0c943120df9e7e4f1dc","slug":"l08-02-network-traffic","location":"/week08/L08.02_network_traffic.ipynb","dependencies":[],"frontmatter":{"title":"Network Traffic with Game Theory","content_includes_title":false,"kernelspec":{"name":"julia-1.10","display_name":"Julia 1.10.4","language":"julia"},"authors":[{"nameParsed":{"literal":"Spencer Lyon","given":"Spencer","family":"Lyon"},"name":"Spencer Lyon","orcid":"0009-0001-6461-885X","email":"spencer.lyon@ucf.edu","affiliations":["University of Central Florida","Valorum Data"],"id":"contributors-myst-generated-uid-0","corresponding":true}],"affiliations":[{"id":"University of Central Florida","name":"University of Central Florida"},{"id":"Valorum Data","name":"Valorum Data"}],"numbering":{"title":{"offset":1}},"thumbnail":"/build/424d6f26a2e0b40ca12376f2698b2418.png","thumbnailOptimized":"/build/424d6f26a2e0b40ca12376f2698b2418.webp","exports":[{"format":"ipynb","filename":"L08.02_network_traffic.ipynb","url":"/build/L08.02_network_traff-6f13cdbcfa096bfb886901c022106d30.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"}},"children":[{"type":"blockquote","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Computational Analysis of Social Complexity","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DljlQEkSWJ"}],"key":"Vjaw7nnoS4"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Fall 2025, Spencer Lyon","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"o0AVRpvWio"}],"key":"YjOlukr2W9"}],"key":"VZvsJiNZGC"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"MRMVuJ4asX"}],"key":"dwM11D1f3B"}],"key":"sb5N051ItS"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Networks","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"uidsvUOwMR"}],"key":"PTXCnKX6rI"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Game Theory","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"oSs07kfCSy"}],"key":"GEj1GLuhrj"}],"key":"kRuv7p16l4"},{"type":"paragraph","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"strong","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Outcomes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"G0YGjk4gmf"}],"key":"EnRf4FhnUw"}],"key":"otXwXx1olh"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":14,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Represent network traffic weighted DiGraph","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"FwLdDtdiCk"}],"key":"MnXP7N4SVw"},{"type":"listItem","spread":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Analyze equilibrium network outcomes using the concept of Nash Equilibirum","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"kt0hrwXkKB"}],"key":"wBRGkQpif9"},{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Understand Braes’ paradox","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"lXLvj9QWnC"}],"key":"jZbUCXrD7O"},{"type":"listItem","spread":true,"position":{"start":{"line":17,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Learn about the concept of social welfare and a social planners","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"n5i4Bz9mB9"}],"key":"BHqakqLQRn"}],"key":"Mk76eGx53z"},{"type":"paragraph","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"strong","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"References","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"fLdH4EocS6"}],"key":"jKE6HHa7el"}],"key":"YZmVWI4Bwd"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"link","url":"https://www.cs.cornell.edu/home/kleinber/networks-book/","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Easley and Kleinberg","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"DpYj5dhiC6"}],"urlSource":"https://www.cs.cornell.edu/home/kleinber/networks-book/","key":"cYN345k7O1"},{"type":"text","value":" chapter 8","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"ZehNd12o0t"}],"key":"KWFOBYjxsr"}],"key":"AWgIgsT8Pp"}],"key":"AWXzw2izZQ"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Congestion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lUvnfoPBWj"}],"identifier":"congestion","label":"Congestion","html_id":"congestion","implicit":true,"key":"D8mCRWgyNY"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"We regularly use physical networks of all kinds","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ITHAhl3Qns"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Power grids","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"yNngRLWyJE"}],"key":"lJNwPMaWoY"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The internet","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HVKnjyFKMQ"}],"key":"qkUQXC4b5e"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Streets","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"TYvRZoXuaU"}],"key":"geGeSoVxJv"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Railroads","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"eYaqY1FAs6"}],"key":"Dm0hDumQTs"}],"key":"Q1BAo2d0GO"}],"key":"qCUIpmdTFc"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"What happens when the networks get congested?","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"oT4GwbCifo"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Typically -- flow across the network slows down","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"li0jryuzRE"}],"key":"GqOoEEkDMS"}],"key":"eCltOGjuwB"}],"key":"mjenUQzuAH"},{"type":"listItem","spread":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Today we’ll study how game theoretic ideas are helpful when analyzing how a network with finite capacity or increasing costs","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"MAaO9fuWZB"}],"key":"MtT4xbZ8V3"}],"key":"T0iWZV4pzg"}],"key":"WyP10uUTsW"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"A Traffic Network","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"recSiXIqaY"}],"identifier":"a-traffic-network","label":"A Traffic Network","html_id":"a-traffic-network","implicit":true,"key":"WPO2y6N9PE"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We’ll start by considering a traffic network","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RbUmQKdQs5"}],"key":"yg9naT2A7k"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The figure caption has extra detail -- so be sure to read it!\n","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"rjeqASyvbD"},{"type":"image","url":"/build/424d6f26a2e0b40ca12376f2698b2418.png","alt":"https://compsosci-resources.s3.amazonaws.com/game_theory_lectures/traffic_graph.png","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"U5ajj59ovh","urlSource":"https://compsosci-resources.s3.amazonaws.com/game_theory_lectures/traffic_graph.png","urlOptimized":"/build/424d6f26a2e0b40ca12376f2698b2418.webp"}],"key":"AOez15CgXZ"}],"key":"XFLVGUl2FA"}],"key":"ku2h0Ogs1d"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We’ll write up some helper Julia functions that will let us create and visualize the traffic network for arbitrary values of x","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MUocrzpru0"}],"key":"bA3XR5w4vZ"}],"key":"LfxFBd3VHm"}],"key":"hNwaAFbJU6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"using Graphs, SimpleWeightedGraphs, GraphPlot, Interact","key":"ebdQGtbnf3"},{"type":"output","id":"uMdRPmlChAXONEWixyQj6","data":[{"output_type":"display_data","metadata":{"@webio":{"kernelId":"81393f39-e2c9-4e18-bc8c-aecdc2714b72"}},"data":{"application/vnd.webio.node+json":{"content":"{\"children\":[],\"instanceArgs\":{\"namespace\":\"html\",\"tag\":\"div\"},\"nodeType\":\"DOM\",\"props\":{},\"type\":\"node\"}","content_type":"application/vnd.webio.node+json"},"text/html":{"content":"<div style=\"padding: 1em; background-color: #f8d6da; border: 1px solid #f5c6cb; font-weight: bold;\">\n<p>The WebIO Jupyter extension was not detected. See the\n<a href=\"https://juliagizmos.github.io/WebIO.jl/latest/providers/ijulia/\" target=\"_blank\">\n    WebIO Jupyter integration documentation\n</a>\nfor more information.\n</div>\n","content_type":"text/html"},"text/plain":{"content":"WebIO._IJuliaInit()","content_type":"text/plain"}}}],"key":"xSHEvGuIxE"}],"key":"Tm5qDKpQzT"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"function traffic_graph1(x)\n    A = [\n        0 0 x/100 45;\n        0 0 0 0;\n        0 45 0 0;\n        0 x/100 0 0\n        ]\n    SimpleWeightedDiGraph(A)\nend","key":"W7NoE5iWcA"},{"type":"output","id":"EGA6-gmxefCmpoWMfqSMg","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/plain":{"content":"traffic_graph1 (generic function with 1 method)","content_type":"text/plain"}}}],"key":"ppODseobRh"}],"key":"mRsjptBF92"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"function plot_traffic_graph(g::SimpleWeightedDiGraph)\n    locs_x = [1.0, 3, 2, 2]\n    locs_y = [1.0, 1, 0, 2]\n    labels = collect('A':'Z')[1:nv(g)]\n    gplot(g, locs_x, locs_y, nodelabel=labels, edgelabel=weight.(edges(g)))\nend","key":"VgOuO3iPsk"},{"type":"output","id":"8MagZjVTFiFG3cgg3VUpN","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"plot_traffic_graph (generic function with 1 method)","content_type":"text/plain"}}}],"key":"IIhnxeTurN"}],"key":"IT1R8uOWHL"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"@manipulate for x=10:10:4000\n    plot_traffic_graph(traffic_graph1(x))\nend","key":"v6BxyyrAYc"},{"type":"output","id":"6cbl3C2HYrjgjxTMcfVby","data":[{"name":"stderr","output_type":"stream","text":"\u001b[33m\u001b[1m┌ \u001b[22m\u001b[39m\u001b[33m\u001b[1mWarning: \u001b[22m\u001b[39mattempting to remove probably stale pidfile\n\u001b[33m\u001b[1m│ \u001b[22m\u001b[39m  path = \"/Users/sglyon/.jlassetregistry.lock\"\n\u001b[33m\u001b[1m└ \u001b[22m\u001b[39m\u001b[90m@ Pidfile ~/.julia/packages/Pidfile/DDu3M/src/Pidfile.jl:260\u001b[39m\n"},{"output_type":"execute_result","execution_count":4,"metadata":{"@webio":{"kernelId":"81393f39-e2c9-4e18-bc8c-aecdc2714b72"}},"data":{"application/vnd.webio.node+json":{"content_type":"application/vnd.webio.node+json","hash":"313dca52c369008fd8381122a6e4eb59","path":"/build/313dca52c369008fd8381122a6e4eb59.json"},"text/html":{"content_type":"text/html","hash":"f5ce9bed1291e422c6803844e740b0ae","path":"/build/f5ce9bed1291e422c6803844e740b0ae.html"},"text/plain":{"content":"Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Scope(Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :label), Any[\"x\"], Dict{Symbol, Any}(:className => \"interact \", :style => Dict{Any, Any}(:padding => \"5px 10px 0px 10px\")))], Dict{Symbol, Any}(:className => \"interact-flex-row-left\")), Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :input), Any[], Dict{Symbol, Any}(:max => 400, :min => 1, :attributes => Dict{Any, Any}(:type => \"range\", Symbol(\"data-bind\") => \"numericValue: index, valueUpdate: 'input', event: {change: function (){this.changes(this.changes()+1)}}\", \"orient\" => \"horizontal\"), :step => 1, :className => \"slider slider is-fullwidth\", :style => Dict{Any, Any}()))], Dict{Symbol, Any}(:className => \"interact-flex-row-center\")), Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :p), Any[], Dict{Symbol, Any}(:attributes => Dict(\"data-bind\" => \"text: formatted_val\")))], Dict{Symbol, Any}(:className => \"interact-flex-row-right\"))], Dict{Symbol, Any}(:className => \"interact-flex-row interact-widget\")), Dict{String, Tuple{AbstractObservable, Union{Nothing, Bool}}}(\"changes\" => (Observable(0), nothing), \"index\" => (Observable{Any}(200), nothing)), Set{String}(), nothing, Asset[Asset(\"js\", \"knockout\", \"/Users/sglyon/.julia/packages/Knockout/HReiN/src/../assets/knockout.js\"), Asset(\"js\", \"knockout_punches\", \"/Users/sglyon/.julia/packages/Knockout/HReiN/src/../assets/knockout_punches.js\"), Asset(\"js\", nothing, \"/Users/sglyon/.julia/packages/InteractBase/LJXv3/src/../assets/all.js\"), Asset(\"css\", nothing, \"/Users/sglyon/.julia/packages/InteractBase/LJXv3/src/../assets/style.css\"), Asset(\"css\", nothing, \"/Users/sglyon/.julia/packages/Interact/PENUy/src/../assets/bulma_confined.min.css\")], Dict{Any, Any}(\"changes\" => Any[WebIO.JSString(\"(function (val){return (val!=this.model[\\\"changes\\\"]()) ? (this.valueFromJulia[\\\"changes\\\"]=true, this.model[\\\"changes\\\"](val)) : undefined})\")], \"index\" => Any[WebIO.JSString(\"(function (val){return (val!=this.model[\\\"index\\\"]()) ? (this.valueFromJulia[\\\"index\\\"]=true, this.model[\\\"index\\\"](val)) : undefined})\")]), WebIO.ConnectionPool(Channel{Any}(32), Set{AbstractConnection}(), Base.GenericCondition{ReentrantLock}(Base.IntrusiveLinkedList{Task}(Task (runnable) @0x0000000332de3530, Task (runnable) @0x0000000332de3530), ReentrantLock(nothing, 0x00000000, 0x00, Base.GenericCondition{Base.Threads.SpinLock}(Base.IntrusiveLinkedList{Task}(nothing, nothing), Base.Threads.SpinLock(0)), (0, 13746631488, 0)))), WebIO.JSString[WebIO.JSString(\"function () {\\n    var handler = (function (ko, koPunches) {\\n    ko.punches.enableAll();\\n    ko.bindingHandlers.numericValue = {\\n        init: function(element, valueAccessor, allBindings, data, context) {\\n            var stringified = ko.observable(ko.unwrap(valueAccessor()));\\n            stringified.subscribe(function(value) {\\n                var val = parseFloat(value);\\n                if (!isNaN(val)) {\\n                    valueAccessor()(val);\\n                }\\n            });\\n            valueAccessor().subscribe(function(value) {\\n                var str = JSON.stringify(value);\\n                if ((str == \\\"0\\\") && ([\\\"-0\\\", \\\"-0.\\\"].indexOf(stringified()) >= 0))\\n                     return;\\n                 if ([\\\"null\\\", \\\"\\\"].indexOf(str) >= 0)\\n                     return;\\n                stringified(str);\\n            });\\n            ko.applyBindingsToNode(\\n                element,\\n                {\\n                    value: stringified,\\n                    valueUpdate: allBindings.get('valueUpdate'),\\n                },\\n                context,\\n            );\\n        }\\n    };\\n    var json_data = {\\\"formatted_vals\\\":[\\\"10\\\",\\\"20\\\",\\\"30\\\",\\\"40\\\",\\\"50\\\",\\\"60\\\",\\\"70\\\",\\\"80\\\",\\\"90\\\",\\\"100\\\",\\\"110\\\",\\\"120\\\",\\\"130\\\",\\\"140\\\",\\\"150\\\",\\\"160\\\",\\\"170\\\",\\\"180\\\",\\\"190\\\",\\\"200\\\",\\\"210\\\",\\\"220\\\",\\\"230\\\",\\\"240\\\",\\\"250\\\",\\\"260\\\",\\\"270\\\",\\\"280\\\",\\\"290\\\",\\\"300\\\",\\\"310\\\",\\\"320\\\",\\\"330\\\",\\\"340\\\",\\\"350\\\",\\\"360\\\",\\\"370\\\",\\\"380\\\",\\\"390\\\",\\\"400\\\",\\\"410\\\",\\\"420\\\",\\\"430\\\",\\\"440\\\",\\\"450\\\",\\\"460\\\",\\\"470\\\",\\\"480\\\",\\\"490\\\",\\\"500\\\",\\\"510\\\",\\\"520\\\",\\\"530\\\",\\\"540\\\",\\\"550\\\",\\\"560\\\",\\\"570\\\",\\\"580\\\",\\\"590\\\",\\\"600\\\",\\\"610\\\",\\\"620\\\",\\\"630\\\",\\\"640\\\",\\\"650\\\",\\\"660\\\",\\\"670\\\",\\\"680\\\",\\\"690\\\",\\\"700\\\",\\\"710\\\",\\\"720\\\",\\\"730\\\",\\\"740\\\",\\\"750\\\",\\\"760\\\",\\\"770\\\",\\\"780\\\",\\\"790\\\",\\\"800\\\",\\\"810\\\",\\\"820\\\",\\\"830\\\",\\\"840\\\",\\\"850\\\",\\\"860\\\",\\\"870\\\",\\\"880\\\",\\\"890\\\",\\\"900\\\",\\\"910\\\",\\\"920\\\",\\\"930\\\",\\\"940\\\",\\\"950\\\",\\\"960\\\",\\\"970\\\",\\\"980\\\",\\\"990\\\",\\\"1000\\\",\\\"1010\\\",\\\"1020\\\",\\\"1030\\\",\\\"1040\\\",\\\"1050\\\",\\\"1060\\\",\\\"1070\\\",\\\"1080\\\",\\\"1090\\\",\\\"1100\\\",\\\"1110\\\",\\\"1120\\\",\\\"1130\\\",\\\"1140\\\",\\\"1150\\\",\\\"1160\\\",\\\"1170\\\",\\\"1180\\\",\\\"1190\\\",\\\"1200\\\",\\\"1210\\\",\\\"1220\\\",\\\"1230\\\",\\\"1240\\\",\\\"1250\\\",\\\"1260\\\",\\\"1270\\\",\\\"1280\\\",\\\"1290\\\",\\\"1300\\\",\\\"1310\\\",\\\"1320\\\",\\\"1330\\\",\\\"1340\\\",\\\"1350\\\",\\\"1360\\\",\\\"1370\\\",\\\"1380\\\",\\\"1390\\\",\\\"1400\\\",\\\"1410\\\",\\\"1420\\\",\\\"1430\\\",\\\"1440\\\",\\\"1450\\\",\\\"1460\\\",\\\"1470\\\",\\\"1480\\\",\\\"1490\\\",\\\"1500\\\",\\\"1510\\\",\\\"1520\\\",\\\"1530\\\",\\\"1540\\\",\\\"1550\\\",\\\"1560\\\",\\\"1570\\\",\\\"1580\\\",\\\"1590\\\",\\\"1600\\\",\\\"1610\\\",\\\"1620\\\",\\\"1630\\\",\\\"1640\\\",\\\"1650\\\",\\\"1660\\\",\\\"1670\\\",\\\"1680\\\",\\\"1690\\\",\\\"1700\\\",\\\"1710\\\",\\\"1720\\\",\\\"1730\\\",\\\"1740\\\",\\\"1750\\\",\\\"1760\\\",\\\"1770\\\",\\\"1780\\\",\\\"1790\\\",\\\"1800\\\",\\\"1810\\\",\\\"1820\\\",\\\"1830\\\",\\\"1840\\\",\\\"1850\\\",\\\"1860\\\",\\\"1870\\\",\\\"1880\\\",\\\"1890\\\",\\\"1900\\\",\\\"1910\\\",\\\"1920\\\",\\\"1930\\\",\\\"1940\\\",\\\"1950\\\",\\\"1960\\\",\\\"1970\\\",\\\"1980\\\",\\\"1990\\\",\\\"2000\\\",\\\"2010\\\",\\\"2020\\\",\\\"2030\\\",\\\"2040\\\",\\\"2050\\\",\\\"2060\\\",\\\"2070\\\",\\\"2080\\\",\\\"2090\\\",\\\"2100\\\",\\\"2110\\\",\\\"2120\\\",\\\"2130\\\",\\\"2140\\\",\\\"2150\\\",\\\"2160\\\",\\\"2170\\\",\\\"2180\\\",\\\"2190\\\",\\\"2200\\\",\\\"2210\\\",\\\"2220\\\",\\\"2230\\\",\\\"2240\\\",\\\"2250\\\",\\\"2260\\\",\\\"2270\\\",\\\"2280\\\",\\\"2290\\\",\\\"2300\\\",\\\"2310\\\",\\\"2320\\\",\\\"2330\\\",\\\"2340\\\",\\\"2350\\\",\\\"2360\\\",\\\"2370\\\",\\\"2380\\\",\\\"2390\\\",\\\"2400\\\",\\\"2410\\\",\\\"2420\\\",\\\"2430\\\",\\\"2440\\\",\\\"2450\\\",\\\"2460\\\",\\\"2470\\\",\\\"2480\\\",\\\"2490\\\",\\\"2500\\\",\\\"2510\\\",\\\"2520\\\",\\\"2530\\\",\\\"2540\\\",\\\"2550\\\",\\\"2560\\\",\\\"2570\\\",\\\"2580\\\",\\\"2590\\\",\\\"2600\\\",\\\"2610\\\",\\\"2620\\\",\\\"2630\\\",\\\"2640\\\",\\\"2650\\\",\\\"2660\\\",\\\"2670\\\",\\\"2680\\\",\\\"2690\\\",\\\"2700\\\",\\\"2710\\\",\\\"2720\\\",\\\"2730\\\",\\\"2740\\\",\\\"2750\\\",\\\"2760\\\",\\\"2770\\\",\\\"2780\\\",\\\"2790\\\",\\\"2800\\\",\\\"2810\\\",\\\"2820\\\",\\\"2830\\\",\\\"2840\\\",\\\"2850\\\",\\\"2860\\\",\\\"2870\\\",\\\"2880\\\",\\\"2890\\\",\\\"2900\\\",\\\"2910\\\",\\\"2920\\\",\\\"2930\\\",\\\"2940\\\",\\\"2950\\\",\\\"2960\\\",\\\"2970\\\",\\\"2980\\\",\\\"2990\\\",\\\"3000\\\",\\\"3010\\\",\\\"3020\\\",\\\"3030\\\",\\\"3040\\\",\\\"3050\\\",\\\"3060\\\",\\\"3070\\\",\\\"3080\\\",\\\"3090\\\",\\\"3100\\\",\\\"3110\\\",\\\"3120\\\",\\\"3130\\\",\\\"3140\\\",\\\"3150\\\",\\\"3160\\\",\\\"3170\\\",\\\"3180\\\",\\\"3190\\\",\\\"3200\\\",\\\"3210\\\",\\\"3220\\\",\\\"3230\\\",\\\"3240\\\",\\\"3250\\\",\\\"3260\\\",\\\"3270\\\",\\\"3280\\\",\\\"3290\\\",\\\"3300\\\",\\\"3310\\\",\\\"3320\\\",\\\"3330\\\",\\\"3340\\\",\\\"3350\\\",\\\"3360\\\",\\\"3370\\\",\\\"3380\\\",\\\"3390\\\",\\\"3400\\\",\\\"3410\\\",\\\"3420\\\",\\\"3430\\\",\\\"3440\\\",\\\"3450\\\",\\\"3460\\\",\\\"3470\\\",\\\"3480\\\",\\\"3490\\\",\\\"3500\\\",\\\"3510\\\",\\\"3520\\\",\\\"3530\\\",\\\"3540\\\",\\\"3550\\\",\\\"3560\\\",\\\"3570\\\",\\\"3580\\\",\\\"3590\\\",\\\"3600\\\",\\\"3610\\\",\\\"3620\\\",\\\"3630\\\",\\\"3640\\\",\\\"3650\\\",\\\"3660\\\",\\\"3670\\\",\\\"3680\\\",\\\"3690\\\",\\\"3700\\\",\\\"3710\\\",\\\"3720\\\",\\\"3730\\\",\\\"3740\\\",\\\"3750\\\",\\\"3760\\\",\\\"3770\\\",\\\"3780\\\",\\\"3790\\\",\\\"3800\\\",\\\"3810\\\",\\\"3820\\\",\\\"3830\\\",\\\"3840\\\",\\\"3850\\\",\\\"3860\\\",\\\"3870\\\",\\\"3880\\\",\\\"3890\\\",\\\"3900\\\",\\\"3910\\\",\\\"3920\\\",\\\"3930\\\",\\\"3940\\\",\\\"3950\\\",\\\"3960\\\",\\\"3970\\\",\\\"3980\\\",\\\"3990\\\",\\\"4000\\\"],\\\"changes\\\":WebIO.getval({\\\"name\\\":\\\"changes\\\",\\\"scope\\\":\\\"5931290471893739690\\\",\\\"id\\\":\\\"3\\\",\\\"type\\\":\\\"observable\\\"}),\\\"index\\\":WebIO.getval({\\\"name\\\":\\\"index\\\",\\\"scope\\\":\\\"5931290471893739690\\\",\\\"id\\\":\\\"2\\\",\\\"type\\\":\\\"observable\\\"})};\\n    var self = this;\\n    function AppViewModel() {\\n        for (var key in json_data) {\\n            var el = json_data[key];\\n            this[key] = Array.isArray(el) ? ko.observableArray(el) : ko.observable(el);\\n        }\\n        \\n        [this[\\\"formatted_val\\\"]=ko.computed(    function(){\\n        return this.formatted_vals()[parseInt(this.index())-(1)];\\n    }\\n,this)]\\n        [this[\\\"changes\\\"].subscribe((function (val){!(this.valueFromJulia[\\\"changes\\\"]) ? (WebIO.setval({\\\"name\\\":\\\"changes\\\",\\\"scope\\\":\\\"5931290471893739690\\\",\\\"id\\\":\\\"3\\\",\\\"type\\\":\\\"observable\\\"},val)) : undefined; return this.valueFromJulia[\\\"changes\\\"]=false}),self),this[\\\"index\\\"].subscribe((function (val){!(this.valueFromJulia[\\\"index\\\"]) ? (WebIO.setval({\\\"name\\\":\\\"index\\\",\\\"scope\\\":\\\"5931290471893739690\\\",\\\"id\\\":\\\"2\\\",\\\"type\\\":\\\"observable\\\"},val)) : undefined; return this.valueFromJulia[\\\"index\\\"]=false}),self)]\\n        \\n    }\\n    self.model = new AppViewModel();\\n    self.valueFromJulia = {};\\n    for (var key in json_data) {\\n        self.valueFromJulia[key] = false;\\n    }\\n    ko.applyBindings(self.model, self.dom);\\n}\\n);\\n    (WebIO.importBlock({\\\"data\\\":[{\\\"name\\\":\\\"knockout\\\",\\\"type\\\":\\\"js\\\",\\\"url\\\":\\\"/assetserver/4575a034256ec339146e6daeff2960a3bbd35de4-knockout.js\\\"},{\\\"name\\\":\\\"knockout_punches\\\",\\\"type\\\":\\\"js\\\",\\\"url\\\":\\\"/assetserver/3281ad6795af640cef0c8173b46220de46df1952-knockout_punches.js\\\"}],\\\"type\\\":\\\"async_block\\\"})).then((imports) => handler.apply(this, imports));\\n}\\n\")])], Dict{Symbol, Any}(:className => \"field interact-widget\")), Observable(Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([]), List([Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}}(Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}[Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}((-1.2cx, -1.2cy), 2.4cx, 2.4cy)], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(1.5mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.9116116523516815cx, -0.08838834764831843cy), (-0.1548346500871859cx, -0.845165349912814cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.9116116523516815cx, 0.08838834764831843cy), (-0.15483465008718594cx, 0.845165349912814cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.08838834764831845cx, -0.9116116523516815cy), (0.845165349912814cx, -0.1548346500871859cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.08838834764831845cx, 0.9116116523516815cy), (0.845165349912814cx, 0.15483465008718592cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(1.5mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.SimplePolygonPrimitive}(Compose.SimplePolygonPrimitive[Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.17901912635198342cx, -0.8693498261776116cy), (-0.08838834764831843cx, -0.9116116523516815cy), (-0.1306501738223884cx, -0.8209808736480165cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.13065017382238842cx, 0.8209808736480165cy), (-0.08838834764831846cx, 0.9116116523516815cy), (-0.17901912635198347cx, 0.8693498261776116cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.8693498261776116cx, -0.17901912635198342cy), (0.9116116523516815cx, -0.08838834764831843cy), (0.8209808736480165cx, -0.1306501738223884cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.8209808736480165cx, 0.1306501738223884cy), (0.9116116523516815cx, 0.08838834764831845cy), (0.8693498261776116cx, 0.17901912635198344cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5cx, -0.5cy), \"20.0\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5cx, 0.5cy), \"45.0\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5cx, -0.5cy), \"45.0\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5cx, 0.5cy), \"20.0\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, 0.0cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, 0.0cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.0cx, -1.0cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.0cx, 1.0cy), 0.12cx)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, 0.0cy), \"A\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, 0.0cy), \"B\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.0cx, -1.0cy), \"C\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.0cx, 1.0cy), \"D\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0cx, -1.2cy), \"\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))], Dict{Symbol, Any}(:className => \"interact-flex-row interact-widget\")))], Dict{Symbol, Any}())","content_type":"text/plain"}}}],"key":"oORe3F17bY"}],"key":"yUGYpJ36wc"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"-"}},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Play around with the slider and watch the weights on our graph change","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mS7Msi3rfP"}],"key":"saXuXAxVB0"}],"key":"EQ1yCPGwoc"}],"key":"foJW7kmwkY"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The Game","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"W2cr20051e"}],"identifier":"the-game","label":"The Game","html_id":"the-game","implicit":true,"key":"qCNsKGNtVo"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now suppose, as indicated in the figure caption, that we have 4,000 drivers that need to commute from A to B in the morning","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"u5zJtQVYlP"}],"key":"seSd2LfSpu"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"If all take the upper route (A-C-B) we get a total time of 40 + 45 = 85 minutes","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Z4hedXa3cI"}],"key":"W3Na3feilz"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"If all take the lower route (A-D-B) we get a total time of 40 + 45 = 85 minutes","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cxjl6ZVYb0"}],"key":"xabVWBgpjy"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"If, however, they evenly divide we get a total time of 20 + 45 = 65 minutes","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"GX2FGXGZm3"}],"key":"Mf7xsoNB4g"}],"key":"dVLadUhuHj"}],"key":"kK0Eo1DPpR"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Equilibrium","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"R0nMHCdCWX"}],"identifier":"equilibrium","label":"Equilibrium","html_id":"equilibrium","implicit":true,"key":"MS2JAt29zw"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Recall that for a set of strategies (here driving paths) to be a Nash Equilibrium, each player’s strategy must be a best response to the strategy of all other players","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iNO1V9s4r9"}],"key":"GfKzwR1bFW"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We’ll argue that the only NE of this commuting game is that 2,000 drivers take (A-C-B) and 2,000 take (A-D-B) and everyone takes 65 mintues to commute","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"j5Ki5Y35T4"}],"key":"ULSbDn1Uf9"}],"key":"ZnxyZsKfLf"}],"key":"sh0ch8Us7u"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercise","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DY3gWv4EZk"}],"identifier":"exercise","label":"Exercise","html_id":"exercise","implicit":true,"key":"HH64lp6lL0"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Show that this strategy (2,000 drivers take (A-C-B) and 2,000 take (A-D-B)) is indeed a Nash equilibrium","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PDRreCIHbu"}],"key":"NWGYKJKhqh"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"To do this recognize that the game is symmetric for all drivers","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"giW5KtPCOP"}],"key":"rYnF8jWV85"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Then, argue that if 3,999 drivers are following that strategy, the best response for the last driver is also to follow the strategy","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ERcE5Ue07G"}],"key":"Lkah95sKgJ"}],"key":"LsmNrOqMqS"}],"key":"qvk0hwNMVu"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Your work HERE!","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HSFPQBtOkH"}],"key":"RW9xVL8RGr"}],"key":"VYUtlO0Isl"}],"key":"Dzyu3Yr6TJ"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Discussion","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Ojnxu4tvMU"}],"identifier":"discussion","label":"Discussion","html_id":"discussion","implicit":true,"key":"Ni4p4Qo7Iy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Note a powerful outcome here -- without any coordination by a central authority, drivers  will automatically balance perfectly in equilibrium","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hIXrE8tfhB"}],"key":"XnQDdzQtVL"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"The only assumptions we made were:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"pyyyc8FJyM"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Drivers want to minimize driving time","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jg3cOpbkKW"}],"key":"X6Ym3dUXqt"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Drivers are allowed to respond to the decisions of others","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"VI5Xnqc9IW"}],"key":"r2Zn0TT4HV"}],"key":"IVqC9X9ByB"}],"key":"i47rtfrajE"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"The first assumption is very plausable -- nobody wants to sit in more traffic than necessary","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"AoCpF52CDd"}],"key":"Pyl9qgpk0N"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"The second highlights a key facet of our modern society...","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"GY9hikBilq"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Information availability (here decisions of other drivers) can (and does!) lead to optimal outcomes without the need for further regulation or policing","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"PX254Abl9g"}],"key":"fIsJ5keMUv"}],"key":"tZhBapH2JA"}],"key":"C4oLqrsjpv"}],"key":"ef8QGHMsr5"}],"key":"ZToim3obGJ"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Adding a “warp tunnel”","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"MjQDMeKXLz"}],"identifier":"adding-a-warp-tunnel","label":"Adding a “warp tunnel”","html_id":"adding-a-warp-tunnel","implicit":true,"key":"n2XIwwm7PC"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now suppose that we modify the network and add a new edge between C-D that has ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"hYuTTyb6Uo"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"zero cost","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QSFOlGAFWm"}],"key":"ZK9LpSViQs"}],"key":"cFEfb5piP4"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Effectively we add a wormhole that connects C to D","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"SkyzKC7PPp"}],"key":"xPWQSkOPT3"}],"key":"Ko01idMU8L"}],"key":"C14wZDSYVs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"function traffic_graph2(x)\n    G = traffic_graph1(x)\n    # need to add an edge with minimal weight so it shows up in plot\n    add_edge!(G, 3, 4, 1e-16)\n    G\nend","key":"yMWQvzibEn"},{"type":"output","id":"T9raRMELqfJm3eBWzCcRi","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"traffic_graph2 (generic function with 1 method)","content_type":"text/plain"}}}],"key":"FmORXF70Hk"}],"key":"NWz4tsv6pZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"julia","executable":true,"value":"@manipulate for x2=10:10:4000\n    plot_traffic_graph(traffic_graph2(x2))\nend","key":"cZj53zCui7"},{"type":"output","id":"zuXVZVX8T2pIe1ntuRPaM","data":[{"output_type":"execute_result","execution_count":6,"metadata":{"@webio":{"kernelId":"81393f39-e2c9-4e18-bc8c-aecdc2714b72"}},"data":{"application/vnd.webio.node+json":{"content_type":"application/vnd.webio.node+json","hash":"9794e6090c495075df6c3fbdb5d8aba5","path":"/build/9794e6090c495075df6c3fbdb5d8aba5.json"},"text/html":{"content_type":"text/html","hash":"8484b49db48f9cacb6e9eef03d2d74da","path":"/build/8484b49db48f9cacb6e9eef03d2d74da.html"},"text/plain":{"content":"Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Scope(Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :label), Any[\"x2\"], Dict{Symbol, Any}(:className => \"interact \", :style => Dict{Any, Any}(:padding => \"5px 10px 0px 10px\")))], Dict{Symbol, Any}(:className => \"interact-flex-row-left\")), Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :input), Any[], Dict{Symbol, Any}(:max => 400, :min => 1, :attributes => Dict{Any, Any}(:type => \"range\", Symbol(\"data-bind\") => \"numericValue: index, valueUpdate: 'input', event: {change: function (){this.changes(this.changes()+1)}}\", \"orient\" => \"horizontal\"), :step => 1, :className => \"slider slider is-fullwidth\", :style => Dict{Any, Any}()))], Dict{Symbol, Any}(:className => \"interact-flex-row-center\")), Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Node{WebIO.DOM}(WebIO.DOM(:html, :p), Any[], Dict{Symbol, Any}(:attributes => Dict(\"data-bind\" => \"text: formatted_val\")))], Dict{Symbol, Any}(:className => \"interact-flex-row-right\"))], Dict{Symbol, Any}(:className => \"interact-flex-row interact-widget\")), Dict{String, Tuple{AbstractObservable, Union{Nothing, Bool}}}(\"changes\" => (Observable(0), nothing), \"index\" => (Observable{Any}(200), nothing)), Set{String}(), nothing, Asset[Asset(\"js\", \"knockout\", \"/Users/sglyon/.julia/packages/Knockout/HReiN/src/../assets/knockout.js\"), Asset(\"js\", \"knockout_punches\", \"/Users/sglyon/.julia/packages/Knockout/HReiN/src/../assets/knockout_punches.js\"), Asset(\"js\", nothing, \"/Users/sglyon/.julia/packages/InteractBase/LJXv3/src/../assets/all.js\"), Asset(\"css\", nothing, \"/Users/sglyon/.julia/packages/InteractBase/LJXv3/src/../assets/style.css\"), Asset(\"css\", nothing, \"/Users/sglyon/.julia/packages/Interact/PENUy/src/../assets/bulma_confined.min.css\")], Dict{Any, Any}(\"changes\" => Any[WebIO.JSString(\"(function (val){return (val!=this.model[\\\"changes\\\"]()) ? (this.valueFromJulia[\\\"changes\\\"]=true, this.model[\\\"changes\\\"](val)) : undefined})\")], \"index\" => Any[WebIO.JSString(\"(function (val){return (val!=this.model[\\\"index\\\"]()) ? (this.valueFromJulia[\\\"index\\\"]=true, this.model[\\\"index\\\"](val)) : undefined})\")]), WebIO.ConnectionPool(Channel{Any}(32), Set{AbstractConnection}(), Base.GenericCondition{ReentrantLock}(Base.IntrusiveLinkedList{Task}(Task (runnable) @0x000000010a5fd2d0, Task (runnable) @0x000000010a5fd2d0), ReentrantLock(nothing, 0x00000000, 0x00, Base.GenericCondition{Base.Threads.SpinLock}(Base.IntrusiveLinkedList{Task}(nothing, nothing), Base.Threads.SpinLock(0)), (2, 4337667104, 13735327024)))), WebIO.JSString[WebIO.JSString(\"function () {\\n    var handler = (function (ko, koPunches) {\\n    ko.punches.enableAll();\\n    ko.bindingHandlers.numericValue = {\\n        init: function(element, valueAccessor, allBindings, data, context) {\\n            var stringified = ko.observable(ko.unwrap(valueAccessor()));\\n            stringified.subscribe(function(value) {\\n                var val = parseFloat(value);\\n                if (!isNaN(val)) {\\n                    valueAccessor()(val);\\n                }\\n            });\\n            valueAccessor().subscribe(function(value) {\\n                var str = JSON.stringify(value);\\n                if ((str == \\\"0\\\") && ([\\\"-0\\\", \\\"-0.\\\"].indexOf(stringified()) >= 0))\\n                     return;\\n                 if ([\\\"null\\\", \\\"\\\"].indexOf(str) >= 0)\\n                     return;\\n                stringified(str);\\n            });\\n            ko.applyBindingsToNode(\\n                element,\\n                {\\n                    value: stringified,\\n                    valueUpdate: allBindings.get('valueUpdate'),\\n                },\\n                context,\\n            );\\n        }\\n    };\\n    var json_data = {\\\"formatted_vals\\\":[\\\"10\\\",\\\"20\\\",\\\"30\\\",\\\"40\\\",\\\"50\\\",\\\"60\\\",\\\"70\\\",\\\"80\\\",\\\"90\\\",\\\"100\\\",\\\"110\\\",\\\"120\\\",\\\"130\\\",\\\"140\\\",\\\"150\\\",\\\"160\\\",\\\"170\\\",\\\"180\\\",\\\"190\\\",\\\"200\\\",\\\"210\\\",\\\"220\\\",\\\"230\\\",\\\"240\\\",\\\"250\\\",\\\"260\\\",\\\"270\\\",\\\"280\\\",\\\"290\\\",\\\"300\\\",\\\"310\\\",\\\"320\\\",\\\"330\\\",\\\"340\\\",\\\"350\\\",\\\"360\\\",\\\"370\\\",\\\"380\\\",\\\"390\\\",\\\"400\\\",\\\"410\\\",\\\"420\\\",\\\"430\\\",\\\"440\\\",\\\"450\\\",\\\"460\\\",\\\"470\\\",\\\"480\\\",\\\"490\\\",\\\"500\\\",\\\"510\\\",\\\"520\\\",\\\"530\\\",\\\"540\\\",\\\"550\\\",\\\"560\\\",\\\"570\\\",\\\"580\\\",\\\"590\\\",\\\"600\\\",\\\"610\\\",\\\"620\\\",\\\"630\\\",\\\"640\\\",\\\"650\\\",\\\"660\\\",\\\"670\\\",\\\"680\\\",\\\"690\\\",\\\"700\\\",\\\"710\\\",\\\"720\\\",\\\"730\\\",\\\"740\\\",\\\"750\\\",\\\"760\\\",\\\"770\\\",\\\"780\\\",\\\"790\\\",\\\"800\\\",\\\"810\\\",\\\"820\\\",\\\"830\\\",\\\"840\\\",\\\"850\\\",\\\"860\\\",\\\"870\\\",\\\"880\\\",\\\"890\\\",\\\"900\\\",\\\"910\\\",\\\"920\\\",\\\"930\\\",\\\"940\\\",\\\"950\\\",\\\"960\\\",\\\"970\\\",\\\"980\\\",\\\"990\\\",\\\"1000\\\",\\\"1010\\\",\\\"1020\\\",\\\"1030\\\",\\\"1040\\\",\\\"1050\\\",\\\"1060\\\",\\\"1070\\\",\\\"1080\\\",\\\"1090\\\",\\\"1100\\\",\\\"1110\\\",\\\"1120\\\",\\\"1130\\\",\\\"1140\\\",\\\"1150\\\",\\\"1160\\\",\\\"1170\\\",\\\"1180\\\",\\\"1190\\\",\\\"1200\\\",\\\"1210\\\",\\\"1220\\\",\\\"1230\\\",\\\"1240\\\",\\\"1250\\\",\\\"1260\\\",\\\"1270\\\",\\\"1280\\\",\\\"1290\\\",\\\"1300\\\",\\\"1310\\\",\\\"1320\\\",\\\"1330\\\",\\\"1340\\\",\\\"1350\\\",\\\"1360\\\",\\\"1370\\\",\\\"1380\\\",\\\"1390\\\",\\\"1400\\\",\\\"1410\\\",\\\"1420\\\",\\\"1430\\\",\\\"1440\\\",\\\"1450\\\",\\\"1460\\\",\\\"1470\\\",\\\"1480\\\",\\\"1490\\\",\\\"1500\\\",\\\"1510\\\",\\\"1520\\\",\\\"1530\\\",\\\"1540\\\",\\\"1550\\\",\\\"1560\\\",\\\"1570\\\",\\\"1580\\\",\\\"1590\\\",\\\"1600\\\",\\\"1610\\\",\\\"1620\\\",\\\"1630\\\",\\\"1640\\\",\\\"1650\\\",\\\"1660\\\",\\\"1670\\\",\\\"1680\\\",\\\"1690\\\",\\\"1700\\\",\\\"1710\\\",\\\"1720\\\",\\\"1730\\\",\\\"1740\\\",\\\"1750\\\",\\\"1760\\\",\\\"1770\\\",\\\"1780\\\",\\\"1790\\\",\\\"1800\\\",\\\"1810\\\",\\\"1820\\\",\\\"1830\\\",\\\"1840\\\",\\\"1850\\\",\\\"1860\\\",\\\"1870\\\",\\\"1880\\\",\\\"1890\\\",\\\"1900\\\",\\\"1910\\\",\\\"1920\\\",\\\"1930\\\",\\\"1940\\\",\\\"1950\\\",\\\"1960\\\",\\\"1970\\\",\\\"1980\\\",\\\"1990\\\",\\\"2000\\\",\\\"2010\\\",\\\"2020\\\",\\\"2030\\\",\\\"2040\\\",\\\"2050\\\",\\\"2060\\\",\\\"2070\\\",\\\"2080\\\",\\\"2090\\\",\\\"2100\\\",\\\"2110\\\",\\\"2120\\\",\\\"2130\\\",\\\"2140\\\",\\\"2150\\\",\\\"2160\\\",\\\"2170\\\",\\\"2180\\\",\\\"2190\\\",\\\"2200\\\",\\\"2210\\\",\\\"2220\\\",\\\"2230\\\",\\\"2240\\\",\\\"2250\\\",\\\"2260\\\",\\\"2270\\\",\\\"2280\\\",\\\"2290\\\",\\\"2300\\\",\\\"2310\\\",\\\"2320\\\",\\\"2330\\\",\\\"2340\\\",\\\"2350\\\",\\\"2360\\\",\\\"2370\\\",\\\"2380\\\",\\\"2390\\\",\\\"2400\\\",\\\"2410\\\",\\\"2420\\\",\\\"2430\\\",\\\"2440\\\",\\\"2450\\\",\\\"2460\\\",\\\"2470\\\",\\\"2480\\\",\\\"2490\\\",\\\"2500\\\",\\\"2510\\\",\\\"2520\\\",\\\"2530\\\",\\\"2540\\\",\\\"2550\\\",\\\"2560\\\",\\\"2570\\\",\\\"2580\\\",\\\"2590\\\",\\\"2600\\\",\\\"2610\\\",\\\"2620\\\",\\\"2630\\\",\\\"2640\\\",\\\"2650\\\",\\\"2660\\\",\\\"2670\\\",\\\"2680\\\",\\\"2690\\\",\\\"2700\\\",\\\"2710\\\",\\\"2720\\\",\\\"2730\\\",\\\"2740\\\",\\\"2750\\\",\\\"2760\\\",\\\"2770\\\",\\\"2780\\\",\\\"2790\\\",\\\"2800\\\",\\\"2810\\\",\\\"2820\\\",\\\"2830\\\",\\\"2840\\\",\\\"2850\\\",\\\"2860\\\",\\\"2870\\\",\\\"2880\\\",\\\"2890\\\",\\\"2900\\\",\\\"2910\\\",\\\"2920\\\",\\\"2930\\\",\\\"2940\\\",\\\"2950\\\",\\\"2960\\\",\\\"2970\\\",\\\"2980\\\",\\\"2990\\\",\\\"3000\\\",\\\"3010\\\",\\\"3020\\\",\\\"3030\\\",\\\"3040\\\",\\\"3050\\\",\\\"3060\\\",\\\"3070\\\",\\\"3080\\\",\\\"3090\\\",\\\"3100\\\",\\\"3110\\\",\\\"3120\\\",\\\"3130\\\",\\\"3140\\\",\\\"3150\\\",\\\"3160\\\",\\\"3170\\\",\\\"3180\\\",\\\"3190\\\",\\\"3200\\\",\\\"3210\\\",\\\"3220\\\",\\\"3230\\\",\\\"3240\\\",\\\"3250\\\",\\\"3260\\\",\\\"3270\\\",\\\"3280\\\",\\\"3290\\\",\\\"3300\\\",\\\"3310\\\",\\\"3320\\\",\\\"3330\\\",\\\"3340\\\",\\\"3350\\\",\\\"3360\\\",\\\"3370\\\",\\\"3380\\\",\\\"3390\\\",\\\"3400\\\",\\\"3410\\\",\\\"3420\\\",\\\"3430\\\",\\\"3440\\\",\\\"3450\\\",\\\"3460\\\",\\\"3470\\\",\\\"3480\\\",\\\"3490\\\",\\\"3500\\\",\\\"3510\\\",\\\"3520\\\",\\\"3530\\\",\\\"3540\\\",\\\"3550\\\",\\\"3560\\\",\\\"3570\\\",\\\"3580\\\",\\\"3590\\\",\\\"3600\\\",\\\"3610\\\",\\\"3620\\\",\\\"3630\\\",\\\"3640\\\",\\\"3650\\\",\\\"3660\\\",\\\"3670\\\",\\\"3680\\\",\\\"3690\\\",\\\"3700\\\",\\\"3710\\\",\\\"3720\\\",\\\"3730\\\",\\\"3740\\\",\\\"3750\\\",\\\"3760\\\",\\\"3770\\\",\\\"3780\\\",\\\"3790\\\",\\\"3800\\\",\\\"3810\\\",\\\"3820\\\",\\\"3830\\\",\\\"3840\\\",\\\"3850\\\",\\\"3860\\\",\\\"3870\\\",\\\"3880\\\",\\\"3890\\\",\\\"3900\\\",\\\"3910\\\",\\\"3920\\\",\\\"3930\\\",\\\"3940\\\",\\\"3950\\\",\\\"3960\\\",\\\"3970\\\",\\\"3980\\\",\\\"3990\\\",\\\"4000\\\"],\\\"changes\\\":WebIO.getval({\\\"name\\\":\\\"changes\\\",\\\"scope\\\":\\\"15686467278209784702\\\",\\\"id\\\":\\\"12\\\",\\\"type\\\":\\\"observable\\\"}),\\\"index\\\":WebIO.getval({\\\"name\\\":\\\"index\\\",\\\"scope\\\":\\\"15686467278209784702\\\",\\\"id\\\":\\\"11\\\",\\\"type\\\":\\\"observable\\\"})};\\n    var self = this;\\n    function AppViewModel() {\\n        for (var key in json_data) {\\n            var el = json_data[key];\\n            this[key] = Array.isArray(el) ? ko.observableArray(el) : ko.observable(el);\\n        }\\n        \\n        [this[\\\"formatted_val\\\"]=ko.computed(    function(){\\n        return this.formatted_vals()[parseInt(this.index())-(1)];\\n    }\\n,this)]\\n        [this[\\\"changes\\\"].subscribe((function (val){!(this.valueFromJulia[\\\"changes\\\"]) ? (WebIO.setval({\\\"name\\\":\\\"changes\\\",\\\"scope\\\":\\\"15686467278209784702\\\",\\\"id\\\":\\\"12\\\",\\\"type\\\":\\\"observable\\\"},val)) : undefined; return this.valueFromJulia[\\\"changes\\\"]=false}),self),this[\\\"index\\\"].subscribe((function (val){!(this.valueFromJulia[\\\"index\\\"]) ? (WebIO.setval({\\\"name\\\":\\\"index\\\",\\\"scope\\\":\\\"15686467278209784702\\\",\\\"id\\\":\\\"11\\\",\\\"type\\\":\\\"observable\\\"},val)) : undefined; return this.valueFromJulia[\\\"index\\\"]=false}),self)]\\n        \\n    }\\n    self.model = new AppViewModel();\\n    self.valueFromJulia = {};\\n    for (var key in json_data) {\\n        self.valueFromJulia[key] = false;\\n    }\\n    ko.applyBindings(self.model, self.dom);\\n}\\n);\\n    (WebIO.importBlock({\\\"data\\\":[{\\\"name\\\":\\\"knockout\\\",\\\"type\\\":\\\"js\\\",\\\"url\\\":\\\"/assetserver/4575a034256ec339146e6daeff2960a3bbd35de4-knockout.js\\\"},{\\\"name\\\":\\\"knockout_punches\\\",\\\"type\\\":\\\"js\\\",\\\"url\\\":\\\"/assetserver/3281ad6795af640cef0c8173b46220de46df1952-knockout_punches.js\\\"}],\\\"type\\\":\\\"async_block\\\"})).then((imports) => handler.apply(this, imports));\\n}\\n\")])], Dict{Symbol, Any}(:className => \"field interact-widget\")), Observable(Node{WebIO.DOM}(WebIO.DOM(:html, :div), Any[Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), Compose.UnitBox{Float64, Float64, Float64, Float64}(-1.2, -1.2, 2.4, 2.4, 0.0mm, 0.0mm, 0.0mm, 0.0mm), nothing, nothing, nothing, List([]), List([Compose.Form{Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}}(Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}[Compose.RectanglePrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}((-1.2cx, -1.2cy), 2.4cx, 2.4cy)], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(1.5mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.LinePrimitive}(Compose.LinePrimitive[Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.9116116523516815cx, -0.08838834764831843cy), (-0.1548346500871859cx, -0.845165349912814cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(-0.9116116523516815cx, 0.08838834764831843cy), (-0.15483465008718594cx, 0.845165349912814cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.08838834764831845cx, -0.9116116523516815cy), (0.845165349912814cx, -0.1548346500871859cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(7.654042494670958e-18cx, -0.875cy), (-2.7755575615628914e-17cx, 0.7810307379214092cy)]), Compose.LinePrimitive{Tuple{Measures.Measure, Measures.Measure}}(Tuple{Measures.Measure, Measures.Measure}[(0.08838834764831845cx, 0.9116116523516815cy), (0.845165349912814cx, 0.15483465008718592cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(1.5mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.SimplePolygonPrimitive}(Compose.SimplePolygonPrimitive[Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.17901912635198342cx, -0.8693498261776116cy), (-0.08838834764831843cx, -0.9116116523516815cy), (-0.1306501738223884cx, -0.8209808736480165cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(-0.13065017382238842cx, 0.8209808736480165cy), (-0.08838834764831846cx, 0.9116116523516815cy), (-0.17901912635198347cx, 0.8693498261776116cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.8693498261776116cx, -0.17901912635198342cy), (0.9116116523516815cx, -0.08838834764831843cy), (0.8209808736480165cx, -0.1306501738223884cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.03420201433256685cx, 0.7810307379214092cy), (-2.296212748401287e-17cx, 0.875cy), (-0.03420201433256691cx, 0.7810307379214092cy)]), Compose.SimplePolygonPrimitive{Tuple{Vararg{Measures.Measure, N}} where N}(Tuple{Vararg{Measures.Measure, N}} where N[(0.8209808736480165cx, 0.1306501738223884cy), (0.9116116523516815cx, 0.08838834764831845cy), (0.8693498261776116cx, 0.17901912635198344cy)])], Symbol(\"\"))]), List([Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.8274509803921568,0.8274509803921568,0.8274509803921568,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5cx, -0.5cy), \"20.0\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-0.5cx, 0.5cy), \"45.0\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5cx, -0.5cy), \"45.0\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.0cx, 0.0cy), \"1.0e-16\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.5cx, 0.5cy), \"20.0\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}}(Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}[Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((-1.0cx, 0.0cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((1.0cx, 0.0cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.0cx, -1.0cy), 0.12cx), Compose.CirclePrimitive{Tuple{Measures.Measure, Measures.Measure}, Measures.Measure}((0.0cx, 1.0cy), 0.12cx)], Symbol(\"\"))]), List([Compose.Property{Compose.LineWidthPrimitive}(Compose.LineWidthPrimitive[Compose.LineWidthPrimitive(0.0mm)]), Compose.Property{Compose.StrokePrimitive}(Compose.StrokePrimitive[Compose.StrokePrimitive(RGBA{Float64}(0.0,0.0,0.0,0.0))]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.25098039215686274,0.8784313725490196,0.8156862745098039,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((-1.0cx, 0.0cy), \"A\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((1.0cx, 0.0cy), \"B\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.0cx, -1.0cy), \"C\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm)), Compose.TextPrimitive{Tuple{Measures.Length{:cx, Float64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0.0cx, 1.0cy), \"D\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\")), Compose.Context(Measures.BoundingBox{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}, Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}((0.0w, 0.0h), (1.0w, 1.0h)), nothing, nothing, nothing, nothing, List([]), List([Compose.Form{Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}}(Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}[Compose.TextPrimitive{Tuple{Measures.Length{:cx, Int64}, Measures.Length{:cy, Float64}}, Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}, Tuple{Measures.AbsoluteLength, Measures.AbsoluteLength}}((0cx, -1.2cy), \"\", Compose.HCenter(), Compose.VCenter(), Compose.Rotation{Tuple{Measures.Length{:w, Float64}, Measures.Length{:h, Float64}}}(0.0, (0.5w, 0.5h)), (0.0mm, 0.0mm))], Symbol(\"\"))]), List([Compose.Property{Compose.FontPrimitive}(Compose.FontPrimitive[Compose.FontPrimitive(\"Helvetica\")]), Compose.Property{Compose.FontSizePrimitive}(Compose.FontSizePrimitive[Compose.FontSizePrimitive(4.0mm)]), Compose.Property{Compose.FillPrimitive}(Compose.FillPrimitive[Compose.FillPrimitive(RGBA{Float64}(0.0,0.0,0.0,1.0))])]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))]), List([]), List([]), 0, false, false, false, false, nothing, nothing, 0.0, Symbol(\"\"))], Dict{Symbol, Any}(:className => \"interact-flex-row interact-widget\")))], Dict{Symbol, Any}())","content_type":"text/plain"}}}],"key":"gf5DkBozlJ"}],"key":"LuNyKTYFd7"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Exercise","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ue036Bhm7m"}],"identifier":"exercise","label":"Exercise","html_id":"exercise-1","implicit":true,"key":"d0FGp2dHCI"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Is a 50/50 split of traffic still a Nash equilibrium in this case?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"FwVjDR5OGH"}],"key":"r9OFMFHdXP"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Why or why not?","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"HpgkfXlizd"}],"key":"QqdIdid73U"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Is all 4,000 drivers doing (A-C-D-B) a Nash equilibrium?","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OzzNyCSIaC"}],"key":"x9l9pY1I1S"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Why or why not?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"pjOqFFrwMP"}],"key":"IA7ITbMYXt"}],"key":"OBmu8gS8IZ"}],"key":"RkBTJxucAC"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Braes’ Paradox","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mk2paVIhgx"}],"identifier":"braes-paradox","label":"Braes’ Paradox","html_id":"braes-paradox","implicit":true,"key":"iqQmbOPAnL"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the previous exercise, we saw a rather startling result...","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mEACiTZMOT"}],"key":"eZaCsvix3q"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Doing a network “upgrade” -- adding a wormhole connecting C and D -- resulted in a ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"PQ1hHveFna"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"worse","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"LM9KkhJx3i"}],"key":"ElHsHXq4P5"},{"type":"text","value":" equilibrium outcome for everyone!","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"GIzy5qqmQv"}],"key":"AvBTPjjC9c"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"The equilbirum driving time is now 80 mintues for all drivers instead of 65 minutes (which was the case before the wormhole)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Z8g60acns1"}],"key":"pWU0Tujg6Q"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"This is known as Braes’ paradox","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"KujsoDcibu"}],"key":"Rw6nH1YzCj"}],"key":"crUC4JljtG"}],"key":"x5IdFgQdiA"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Follow ups","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yrqRkP3FuH"}],"identifier":"follow-ups","label":"Follow ups","html_id":"follow-ups","implicit":true,"key":"BMpGZ5g5uy"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Braes’ paradox was the starting point for a large body of research on using game theory to analyze network traffic","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lHi1di6gdh"}],"key":"qdgDuu9W3y"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Some questions that have been asked are:","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"aYFYsiz43Q"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"How much larger can equilibirum travel time increase after a network upgrade?","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"HbnwSvbSel"}],"key":"oWBlv31X56"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"How can network upgrade be designed to be resilient to Braes’ paradox?","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"VJJVrF9QHz"}],"key":"g0RrP9cSaO"}],"key":"kp46H9Xbrb"}],"key":"aDuQYX9Msb"}],"key":"UK3EytM5p6"}],"key":"LvtIAbZfuh"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"slide"}},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Social Welfare","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wyB7a45eNs"}],"identifier":"social-welfare","label":"Social Welfare","html_id":"social-welfare","implicit":true,"key":"DdU4ASiHQg"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Many economic models are composed of individual actors who make autonomous decisions and have autonomous payoffs","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vLkOWQy0aF"}],"key":"fpG5OKRMJs"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We’ve been studying some of these settings using tools from game theory, focusing on the ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"ycWK2q3b9d"},{"type":"emphasis","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"individual","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"OArvhr3YaO"}],"key":"MlCxlScTqV"},{"type":"text","value":" perspective","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"Cith3OTd2p"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Our notion of equilibrium is dependent on no individual wanting to change strategy in response to other strategies","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IVAikllxM1"}],"key":"FsWX4zD4fu"}],"key":"HOxcwq7zZS"}],"key":"pGo7saZrpP"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Another form of analysis works at the macro level -- we analyze the ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"lTWU7LDPEi"},{"type":"strong","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"total","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"SHNhffM1Pc"}],"key":"RnZGvYzKAN"},{"type":"text","value":" payoff for all agents (i.e. sum of payoffs)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"c9Nff5kHvE"}],"key":"mlxBqqGAzG"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"We call this aggregate payoff ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"CqEYyvifJL"},{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"social welfare","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"rQOhfdY2lQ"}],"key":"kvpkdni0jK"}],"key":"Bgik3vqhap"}],"key":"RM8tFEToVx"}],"key":"woIj7QtEVs"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The Social Planner","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZTz8WsS5c0"}],"identifier":"the-social-planner","label":"The Social Planner","html_id":"the-social-planner","implicit":true,"key":"HG7o8yIMiW"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In an economic model, someone who seeks to maximize social welfare is called a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"RigYOTfTfx"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"social planner","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"J4ySBgyVqi"}],"key":"Fc7FCY5S6r"}],"key":"nGEHrfkb7J"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"A social planner is given the authority to make decisions for all agents","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"VwC6ZLsec0"}],"key":"jQuvN0OmSJ"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In our traffic model, a social planner would choose to ignore the wormhole and have 1/2 the drivers take A-C-B and the other half take A-D-B","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"UGMIzZvJqi"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"In this case everyone would be better off with a cost of 65 minutes instead of the equilibrium 80 minutes","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"xCS26yemD1"}],"key":"QBa4l1xbgv"}],"key":"J5CJ8Ks5j5"}],"key":"LlCMZ3Dvz9"}],"key":"Hm46GiHms6"}],"key":"w6F0UowPR2"},{"type":"block","kind":"notebook-content","data":{"slideshow":{"slide_type":"subslide"}},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Cost of Freedom","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OJkyABJqhr"}],"identifier":"cost-of-freedom","label":"Cost of Freedom","html_id":"cost-of-freedom","implicit":true,"key":"L1dRVC5CVC"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Question: in a generic traffic model, how much ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"yUCkBTzsJQ"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"worse","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cz9kWMDAdj"}],"key":"PpCNijxYyI"},{"type":"text","value":" can the equilibrium outcome be than the social optimium?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Yax22j8g54"}],"key":"ImD4vkV02q"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"In our example,","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"XmJXPOwiZK"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Optimal social welfare is 4000 * 65 = $(4000*65)","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"uavY7rBCBj"}],"key":"fJDLTg97eG"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Equilibrium social welfare is 4000 * 80 = $(4000*80)","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"dwtcpIBsar"}],"key":"BMGOl8rYhx"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"A change of $(4000*15)","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"bXvF8yr1EF"}],"key":"edBm98Iabs"}],"key":"Qd3KnyO8b5"}],"key":"r4sB7X4Bik"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"To answer this question for a general traffic model, we need to be able to compute the equilibrium for a generic traffic model","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Cywubi04UW"}],"key":"ZdTP05Tq2I"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"We may study this next week, or perhaps even on your homework 😉","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"u2ROvAb8Ft"}],"key":"fM5PNuQm8W"}],"key":"hc8OqgrMH8"}],"key":"lKBUMCP2Js"}],"key":"gTWUdzxi2J"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Game Theory 1","url":"/l08-01-game-theory-intro","group":"Game Theory 1"},"next":{"title":"More Game Theory","url":"/l09-01-mixed-strategies","group":"Game Theory 2"}}},"domain":"http://localhost:3000"}